SELECT count(*) FROM singer
SELECT count(*) FROM singer
SELECT name ,  country ,  age FROM singer ORDER BY age DESC
SELECT name ,  country ,  age FROM singer ORDER BY age DESC
SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  "France"
SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
SELECT song_name ,  song_release_year FROM singer ORDER BY age ASC LIMIT 1
SELECT song_name ,  song_release_year FROM singer WHERE age  =  (SELECT min(age) FROM singer)
SELECT DISTINCT country FROM singer WHERE age  >  20
SELECT DISTINCT country FROM singer WHERE age  >  20
SELECT country ,  count(*) FROM singer GROUP BY country
SELECT country ,  count(*) FROM singer GROUP BY country
SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
SELECT max(capacity) ,  avg(average) FROM stadium
SELECT avg(capacity) ,  max(capacity) FROM stadium
SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
SELECT stadium.name ,  count(*) FROM concert JOIN stadium ON concert.stadium_id  =  stadium.stadium_id GROUP BY stadium.name
SELECT stadium.name ,  count(*) FROM stadium JOIN concert ON stadium.stadium_id  =  concert.stadium_id GROUP BY stadium.stadium_id
SELECT stadium.name ,  stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id  =  concert.stadium_id WHERE concert.year  >=  2014 GROUP BY concert.stadium_id ORDER BY count(*) DESC LIMIT 1
SELECT stadium.name ,  stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id  =  concert.stadium_id WHERE concert.year  >  2013 GROUP BY concert.stadium_id ORDER BY count(*) DESC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
SELECT name FROM stadium EXCEPT SELECT stadium.name FROM stadium JOIN concert ON stadium.stadium_id  =  concert.stadium_id WHERE concert.year  =  2014
SELECT name FROM stadium EXCEPT SELECT stadium.name FROM stadium JOIN concert ON stadium.stadium_id  =  concert.stadium_id WHERE concert.year  =  2014
SELECT concert.concert_name ,  concert.theme ,  count(*) FROM concert JOIN singer_in_concert ON concert.concert_id  =  singer_in_concert.concert_id GROUP BY singer_in_concert.concert_id
SELECT concert.concert_name ,  concert.theme ,  count(*) FROM concert JOIN singer_in_concert ON concert.concert_id  =  singer_in_concert.concert_id GROUP BY singer_in_concert.concert_id
SELECT singer.name ,  count(*) FROM singer JOIN singer_in_concert ON singer.singer_id  =  singer_in_concert.singer_id GROUP BY singer.singer_id
SELECT singer.name ,  count(*) FROM singer JOIN singer_in_concert ON singer.singer_id  =  singer_in_concert.singer_id GROUP BY singer.singer_id
SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id  =  singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id  =  concert.concert_id WHERE concert.year  =  2014
SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id  =  singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id  =  concert.concert_id WHERE concert.year  =  2014
SELECT singer.name ,  singer.country FROM singer JOIN singer_in_concert ON singer.singer_id  =  singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id  =  concert.concert_id WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name ,  singer.country FROM singer JOIN singer_in_concert ON singer.singer_id  =  singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id  =  concert.concert_id WHERE concert.concert_name LIKE '%Hey%'
SELECT stadium.name ,  stadium.location FROM stadium JOIN concert ON stadium.stadium_id  =  concert.stadium_id WHERE concert.year  =  2014 INTERSECT SELECT stadium.name ,  stadium.location FROM stadium JOIN concert ON stadium.stadium_id  =  concert.stadium_id WHERE concert.year  =  2015
SELECT stadium.name ,  stadium.location FROM stadium JOIN concert ON stadium.stadium_id  =  concert.stadium_id WHERE concert.year  =  2014 INTERSECT SELECT stadium.name ,  stadium.location FROM stadium JOIN concert ON stadium.stadium_id  =  concert.stadium_id WHERE concert.year  =  2015
SELECT count(*) FROM concert WHERE stadium_id  =  (SELECT stadium_id FROM stadium WHERE capacity  =  (SELECT MAX (capacity) FROM stadium));
SELECT count(*) FROM concert WHERE stadium_id  =  (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)
SELECT count(*) FROM pets WHERE weight  >  10
SELECT count(*) FROM pets WHERE weight  >  10
SELECT weight FROM pets WHERE pet_age  =  (SELECT min(pet_age) FROM pets WHERE pettype  =  'dog')
SELECT weight FROM pets WHERE pet_age  =  (SELECT min(pet_age) FROM pets WHERE pettype  =  'dog')
SELECT pets.pettype ,  max(pets.weight) FROM pets GROUP BY pets.pettype
SELECT max(weight) ,  pettype FROM pets GROUP BY pettype
SELECT count(*) FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid WHERE student.age  >  20
SELECT count(*) FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE student.age  >  20
SELECT count(*) FROM has_pet JOIN student ON has_pet.stuid  =  student.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE student.sex  =  'F' AND pets.pettype  =  'dog'
SELECT count(*) FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE student.sex  =  'F' AND pets.pettype  =  'dog'
SELECT count(DISTINCT pettype) FROM pets
SELECT count(DISTINCT pettype) FROM pets
SELECT student.fname FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat' OR pets.pettype  =  'dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat' OR pets.pettype  =  'dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat' INTERSECT SELECT student.fname FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat' INTERSECT SELECT student.fname FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'dog'
SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat')
SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat')
SELECT stuid FROM student EXCEPT SELECT stuid FROM has_pet JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat'
SELECT stuid FROM student EXCEPT SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat'
SELECT student.fname ,  student.age FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'dog' EXCEPT SELECT student.fname ,  student.age FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat'
SELECT student.fname FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'dog' EXCEPT SELECT student.fname FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat'
SELECT pettype ,  weight FROM pets ORDER BY pet_age ASC LIMIT 1
SELECT pettype ,  weight FROM pets ORDER BY pet_age ASC LIMIT 1
SELECT petid ,  weight FROM pets WHERE pet_age  >  1
SELECT petid ,  weight FROM pets WHERE pet_age  >  1
SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
SELECT student.fname ,  student.age FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid
SELECT DISTINCT student.fname ,  student.age FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid WHERE student.lname  =  'Smith'
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid WHERE student.lname  =  'Smith'
SELECT count(*) ,  has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid  =  pets.petid GROUP BY has_pet.stuid HAVING count(*)  >  0
SELECT student.stuid ,  count(*) FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid GROUP BY student.stuid
SELECT student.fname ,  student.sex FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid GROUP BY has_pet.stuid HAVING count(*)  >  1
SELECT student.fname ,  student.sex FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid GROUP BY has_pet.stuid HAVING count(*)  >  1
SELECT student.lname FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat' AND pets.pet_age  =  3
SELECT student.lname FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat' AND pets.pet_age  =  3
SELECT avg(student.age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)
SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)
SELECT count(*) FROM continents
SELECT count(*) FROM continents
SELECT continents.contid ,  continents.continent ,  count(*) FROM continents JOIN countries ON continents.contid  =  countries.continent GROUP BY continents.contid
SELECT continents.contid ,  continents.continent ,  count(*) FROM continents JOIN countries ON continents.contid  =  countries.continent GROUP BY continents.contid
SELECT count(*) FROM countries
SELECT count(*) FROM countries
SELECT car_makers.fullname ,  car_makers.id ,  count(*) FROM car_makers JOIN car_names ON car_makers.id  =  car_names.makeid GROUP BY car_makers.id
SELECT car_makers.fullname ,  car_makers.id ,  count(*) FROM car_makers JOIN car_names ON car_makers.id  =  car_names.makeid GROUP BY car_makers.id
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id  =  model_list.modelid ORDER BY cars_data.horsepower ASC LIMIT 1
SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid ORDER BY cars_data.horsepower ASC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id  =  model_list.modelid WHERE cars_data.weight  <  (SELECT avg(weight) FROM cars_data)
SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE cars_data.weight  <  (SELECT avg(weight) FROM cars_data)
SELECT car_makers.fullname FROM car_makers JOIN car_names ON car_makers.id  =  model_list.maker JOIN cars_data ON cars_data.id  =  car_names.makeid WHERE cars_data.year  =  1970
SELECT DISTINCT car_makers.fullname FROM car_makers JOIN car_names ON car_makers.id  =  car_names.makeid JOIN cars_data ON cars_data.id  =  car_names.makeid WHERE cars_data.year  =  1970
SELECT car_names.make ,  cars_data.year FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid ORDER BY cars_data.year ASC LIMIT 1
SELECT car_makers.maker ,  cars_data.year FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id ORDER BY cars_data.year ASC LIMIT 1
SELECT DISTINCT car_names.model FROM car_names JOIN cars_data ON car_names.makeid  =  cars_data.id WHERE cars_data.year  >  1980
SELECT DISTINCT model_list.model FROM cars_data JOIN model_list ON cars_data.id  =  model_list.modelid WHERE cars_data.year  >  1980
SELECT continents.continent ,  count(*) FROM continents JOIN car_makers ON continents.contid  =  car_makers.country GROUP BY continents.continent
SELECT continents.continent ,  count(*) FROM continents JOIN car_makers ON continents.contid  =  car_makers.country GROUP BY continents.continent
SELECT countries.countryname FROM car_makers JOIN countries ON car_makers.country  =  countries.countryid GROUP BY car_makers.country ORDER BY count(*) DESC LIMIT 1
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country GROUP BY car_makers.country ORDER BY count(*) DESC LIMIT 1
SELECT count(*) ,  car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY car_makers.id
SELECT count(*) ,  car_makers.id ,  car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY model_list.maker
SELECT accelerate FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE car_names.make  =  'amc hornet sportabout (sw)'
SELECT cars_data.accelerate FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE car_names.make  =  'amc hornet sportabout (sw)'
SELECT count(*) FROM car_makers JOIN countries ON car_makers.country  =  countries.countryid WHERE countries.countryname  =  'france'
SELECT count(*) FROM car_makers JOIN countries ON car_makers.country  =  countries.countryid WHERE countries.countryname  =  'france'
SELECT count(*) FROM car_names JOIN countries ON car_names.makeid  =  countries.countryid WHERE countries.countryname  =  'usa'
SELECT count(*) FROM car_names JOIN model_list ON car_names.model  =  model_list.model JOIN car_makers ON model_list.maker  =  car_makers.id JOIN countries ON car_makers.country  =  countries.countryid WHERE countries.countryname  =  'usa'
SELECT avg(mpg) FROM cars_data WHERE cylinders  =  4
SELECT avg(mpg) FROM cars_data WHERE cylinders  =  4
SELECT min(weight) FROM cars_data WHERE cylinders  =  8 AND YEAR  =  1974
SELECT weight FROM cars_data WHERE cylinders  =  8 AND YEAR  =  1974 ORDER BY weight ASC LIMIT 1
SELECT DISTINCT car_makers.maker ,  car_names.model FROM car_makers JOIN car_names ON car_makers.id  =  car_names.makeid
SELECT car_makers.maker ,  car_names.model FROM car_makers JOIN car_names ON car_makers.id  =  car_names.makeid
SELECT countries.countryname ,  countries.countryid FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country GROUP BY countries.countryid HAVING count(*)  >=  1
SELECT countries.countryname ,  countries.countryid FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country
SELECT count(*) FROM cars_data WHERE horsepower  >  150
SELECT count(*) FROM cars_data WHERE horsepower  >  150
SELECT avg(weight) ,  YEAR FROM cars_data GROUP BY YEAR
SELECT avg(weight) ,  avg(year) FROM cars_data GROUP BY YEAR;
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country WHERE countries.continent  =  (SELECT contid FROM continents WHERE continent = 'europe') GROUP BY countries.countryid HAVING COUNT(car_makers.country)  >=  3;
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country JOIN continents ON countries.continent  =  continents.contid WHERE continents.continent  =  'europe' GROUP BY countries.countryname HAVING COUNT(car_makers.maker)  >=  3
SELECT max(horsepower) ,  car_names.make FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE cars_data.cylinders  =  3
SELECT max(cars_data.horsepower) ,  car_names.make FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE cars_data.cylinders  =  3
SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid ORDER BY cars_data.mpg DESC LIMIT 1
SELECT car_names.model FROM car_names JOIN cars_data ON car_names.makeid  =  cars_data.id ORDER BY cars_data.mpg DESC LIMIT 1
SELECT avg(horsepower) FROM cars_data WHERE YEAR  <  1980
SELECT avg(CAST(horsepower AS REAL)) FROM cars_data WHERE YEAR  <  1980
SELECT avg(cars_data.edispl) FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid JOIN model_list ON car_names.model  =  model_list.model WHERE model_list.model  =  'volvo'
SELECT avg(edispl) FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE car_names.make  =  'volvo'
SELECT max(accelerate) ,  cylinders FROM cars_data GROUP BY cylinders
SELECT max(accelerate) ,  cylinders FROM cars_data GROUP BY cylinders
SELECT model FROM car_names GROUP BY make ORDER BY count(*) DESC LIMIT 1
SELECT model_list.model FROM model_list JOIN car_names ON model_list.modelid  =  car_names.makeid GROUP BY model_list.model ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM cars_data WHERE cylinders  >  4
SELECT count(*) FROM cars_data WHERE cylinders  >  4
SELECT count(*) FROM cars_data WHERE YEAR  =  1980
SELECT count(*) FROM cars_data WHERE YEAR  =  1980
SELECT count(*) FROM car_names JOIN car_makers ON car_names.makeid  =  car_makers.id WHERE car_makers.fullname  =  'American Motor Company'
SELECT count(*) FROM car_makers JOIN car_names ON car_makers.id  =  car_names.makeid WHERE car_makers.fullname  =  'American Motor Company'
SELECT car_makers.fullname ,  car_makers.id FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY car_makers.id HAVING count(*)  >  3
SELECT car_makers.fullname ,  car_makers.id FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY car_makers.id HAVING count(*)  >  3
SELECT DISTINCT car_names.model FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker JOIN car_names ON model_list.modelid  =  car_names.makeid JOIN cars_data ON car_names.makeid  =  cars_data.id WHERE car_makers.fullname  =  'General Motors' OR cars_data.weight  >  3500
SELECT DISTINCT car_names.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model WHERE car_makers.fullname = 'General Motors' UNION SELECT DISTINCT car_names.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight  >  3500
SELECT YEAR FROM cars_data WHERE weight BETWEEN 3000 AND 4000
SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight  <  4000 INTERSECT SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight  >  3000
SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1
SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1
SELECT cars_data.cylinders FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE car_names.model  =  'volvo' ORDER BY cars_data.accelerate ASC LIMIT 1
SELECT cars_data.cylinders FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE car_names.model  =  'volvo' ORDER BY cars_data.accelerate ASC LIMIT 1
SELECT count(*) FROM cars_data WHERE accelerate  >  (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT count(*) FROM cars_data WHERE accelerate  >  (SELECT accelerate FROM cars_data WHERE horsepower  =  (SELECT MAX(horsepower) FROM cars_data))
SELECT COUNT(DISTINCT countries.countryid) FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country GROUP BY countries.countryid HAVING COUNT(car_makers.id)  >  2
SELECT count(DISTINCT country) FROM car_makers GROUP BY country HAVING count(*)  >  2
SELECT count(*) FROM cars_data WHERE cylinders  >  6
SELECT count(*) FROM cars_data WHERE cylinders  >  6
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id  =  model_list.modelid WHERE cars_data.cylinders  =  4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE cars_data.cylinders  =  4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT car_names.makeid ,  car_names.make FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE horsepower  >  (SELECT MIN(horsepower) FROM cars_data) EXCEPT SELECT car_names.makeid ,  car_names.make FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE cylinders  >  3
SELECT car_names.makeid ,  car_names.make FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE cars_data.horsepower != (SELECT MIN ( horsepower ) FROM cars_data) AND cars_data.cylinders  <  4
SELECT max(mpg) FROM cars_data WHERE cylinders = 8 OR YEAR < 1980
SELECT max(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE cars_data.weight  <  3500 EXCEPT SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid JOIN model_list ON model_list.modelid  =  car_names.makeid JOIN car_makers ON car_makers.id  =  model_list.maker WHERE car_makers.fullname  =  'Ford Motor Company'
SELECT DISTINCT car_names.model FROM car_names JOIN cars_data ON car_names.makeid  =  cars_data.id WHERE cars_data.weight  <  3500 AND car_makers.fullname != 'Ford Motor Company'
SELECT countryname FROM countries EXCEPT SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country
SELECT countryname FROM countries EXCEPT SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country
SELECT car_makers.id ,  car_makers.maker FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY car_makers.id HAVING count(*)  >=  2 INTERSECT SELECT car_makers.id ,  car_makers.maker FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY car_makers.id HAVING count(*)  >  3
SELECT car_makers.id ,  car_makers.maker FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY car_makers.id HAVING COUNT ( DISTINCT model_list.model )  >=  2 INTERSECT SELECT car_makers.id ,  car_makers.maker FROM car_makers JOIN car_names ON car_makers.id  =  car_names.makeid JOIN cars_data ON car_names.makeid  =  cars_data.id GROUP BY car_makers.id HAVING COUNT ( cars_data.id )  >  3
SELECT countries.countryid ,  countries.countryname FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country GROUP BY countries.countryid HAVING count(*)  >  3 UNION SELECT countries.countryid ,  countries.countryname FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country WHERE car_makers.maker  =  'fiat'
SELECT countries.countryid ,  countries.countryname FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country GROUP BY countries.countryid HAVING count(*)  >  3 UNION SELECT countries.countryid ,  countries.countryname FROM countries JOIN car_makers ON countries.countryid  =  car_makers.country JOIN model_list ON car_makers.id  =  model_list.maker JOIN car_names ON model_list.modelid  =  car_names.makeid WHERE car_names.model  =  'fiat'
SELECT country FROM airlines WHERE airline  =  "JetBlue Airways"
SELECT country FROM airlines WHERE airline  =  'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline  =  'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline LIKE '%JetBlue Airways%'
SELECT airline ,  abbreviation FROM airlines WHERE country  =  'USA'
SELECT airline ,  abbreviation FROM airlines WHERE country  =  'USA'
SELECT airportcode ,  airportname FROM airports WHERE city  =  'Anthony'
SELECT airportcode ,  airportname FROM airports WHERE city  =  'Anthony'
SELECT count(*) FROM airlines
SELECT count(*) FROM airlines
SELECT count(*) FROM airports
SELECT count(*) FROM airports
SELECT count(*) FROM flights
SELECT count(*) FROM flights
SELECT airline FROM airlines WHERE abbreviation  =  'UAL'
SELECT airline FROM airlines WHERE abbreviation  =  'UAL'
SELECT count(*) FROM airlines WHERE country  =  'USA'
SELECT count(*) FROM airlines WHERE country  =  'USA'
SELECT city ,  country FROM airports WHERE airportname  =  'Alton'
SELECT city ,  country FROM airports WHERE airportname  =  'Alton'
SELECT airportname FROM airports WHERE airportcode  =  'AKO'
SELECT airportname FROM airports WHERE airportcode  =  'AKO'
SELECT airportname FROM airports WHERE city  =  'Aberdeen'
SELECT airportname FROM airports WHERE city  =  'Aberdeen'
SELECT count(*) FROM flights WHERE sourceairport  =  'APG'
SELECT count(*) FROM flights WHERE sourceairport  =  'APG'
SELECT count(*) FROM flights WHERE destairport  =  'ATO'
SELECT count(*) FROM flights WHERE destairport  =  'ATO'
SELECT count(*) FROM flights JOIN airports ON flights.sourceairport  =  airports.airportcode WHERE airports.city  =  'Aberdeen'
SELECT count(*) FROM flights JOIN airports ON flights.sourceairport  =  airports.airportcode WHERE airports.city  =  'Aberdeen'
SELECT count(*) FROM flights JOIN airports ON flights.destairport  =  airports.airportcode WHERE airports.city  =  'Aberdeen'
SELECT count(*) FROM flights JOIN airports ON flights.destairport  =  airports.airportcode WHERE airports.city  =  'Aberdeen'
SELECT count(*) FROM flights JOIN airports ON flights.sourceairport  =  airports.airportcode WHERE airports.city  =  'Aberdeen' INTERSECT SELECT count(*) FROM flights JOIN airports ON flights.destairport  =  airports.airportcode WHERE airports.city  =  'Ashley'
SELECT count(*) FROM flights WHERE sourceairport  =  'APG' AND destairport  =  'ASY'
SELECT count(*) FROM airlines JOIN flights ON airlines.uid  =  flights.airline WHERE airlines.airline  =  'JetBlue Airways'
SELECT count(*) FROM flights JOIN airlines ON flights.airline  =  airlines.uid WHERE airlines.airline  =  'JetBlue Airways'
SELECT count(*) FROM flights JOIN airlines ON flights.airline  =  airlines.uid WHERE airlines.airline  =  'United Airlines' AND flights.destairport  =  'ASY'
SELECT count(*) FROM flights JOIN airlines ON flights.airline  =  airlines.uid WHERE airlines.airline  =  'United Airlines' AND flights.destairport  =  'ASY'
SELECT count(*) FROM flights JOIN airlines ON flights.airline  =  airlines.uid WHERE airlines.airline  =  'United Airlines' AND flights.sourceairport  =  'AHD'
SELECT count(*) FROM flights JOIN airlines ON flights.airline  =  airlines.uid WHERE airlines.airline  =  'United Airlines' AND flights.sourceairport  =  'AHD'
SELECT count(*) FROM flights JOIN airlines ON flights.airline  =  airlines.uid JOIN airports ON flights.destairport  =  airports.airportcode WHERE airlines.airline  =  'United Airlines' AND airports.city  =  'Aberdeen'
SELECT count(*) FROM flights JOIN airports ON flights.destairport  =  airports.airportcode JOIN airlines ON flights.airline  =  airlines.uid WHERE airlines.airline  =  'United Airlines' AND airports.city  =  'Aberdeen'
SELECT airports.city FROM airports JOIN flights ON airports.airportcode  =  flights.destairport GROUP BY flights.destairport ORDER BY count(*) DESC LIMIT 1
SELECT airports.city FROM airports JOIN flights ON airports.airportcode  =  flights.destairport GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1
SELECT airports.city FROM airports JOIN flights ON airports.airportcode  =  flights.sourceairport GROUP BY airports.city ORDER BY count(*) DESC LIMIT 1
SELECT airports.city FROM airports JOIN flights ON airports.airportcode  =  flights.sourceairport GROUP BY flights.sourceairport ORDER BY count(*) DESC LIMIT 1
SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY count(*) DESC LIMIT 1
SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY count(*) DESC LIMIT 1
SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY count(*) LIMIT 1
SELECT airports.airportcode FROM airports JOIN flights ON airports.airportcode  =  flights.sourceairport OR airports.airportcode  =  flights.destairport GROUP BY airports.airportcode ORDER BY count(*) ASC LIMIT 1
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline GROUP BY flights.airline ORDER BY count(*) DESC LIMIT 1
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline GROUP BY flights.airline ORDER BY count(*) DESC LIMIT 1
SELECT airlines.abbreviation ,  airlines.country FROM airlines JOIN flights ON airlines.uid  =  flights.airline GROUP BY flights.airline ORDER BY count(*) LIMIT 1
SELECT airlines.abbreviation ,  airlines.country FROM airlines JOIN flights ON airlines.uid  =  flights.airline GROUP BY flights.airline ORDER BY count(*) LIMIT 1
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline WHERE flights.sourceairport  =  'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline WHERE flights.sourceairport  =  'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline WHERE flights.destairport  =  'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline WHERE flights.destairport  =  'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline  =  flights.airline WHERE flights.sourceairport  =  'APG' INTERSECT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline  =  flights.airline WHERE flights.sourceairport  =  'CVO'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline  =  flights.airline WHERE flights.sourceairport  =  'APG' INTERSECT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline  =  flights.airline WHERE flights.sourceairport  =  'CVO'
SELECT airlines.airline FROM flights JOIN airlines ON flights.airline  =  airlines.uid WHERE flights.sourceairport  =  'CVO' EXCEPT SELECT airlines.airline FROM flights JOIN airlines ON flights.airline  =  airlines.uid WHERE flights.sourceairport  =  'APG'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline WHERE flights.sourceairport  =  'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline WHERE flights.sourceairport  =  'APG'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline GROUP BY flights.airline HAVING count(*)  >=  10
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline GROUP BY flights.airline HAVING COUNT ( flights.flightno )  >=  10
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline GROUP BY flights.airline HAVING count(*)  <  200
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid  =  flights.airline GROUP BY flights.airline HAVING COUNT(*)  <  200
SELECT flightno FROM flights WHERE airline  =  (SELECT uid FROM airlines WHERE airline  =  'United Airlines')
SELECT flightno FROM flights WHERE airline  =  (SELECT uid FROM airlines WHERE airline  =  'United Airlines')
SELECT flightno FROM flights WHERE sourceairport  =  "APG"
SELECT flightno FROM flights WHERE sourceairport  =  'APG'
SELECT flightno FROM flights WHERE destairport  =  "APG"
SELECT flightno FROM flights WHERE destairport  =  'APG'
SELECT flightno FROM flights JOIN airports ON flights.sourceairport  =  airports.airportcode WHERE airports.city  =  'Aberdeen'
SELECT flightno FROM flights WHERE sourceairport  =  (SELECT airportcode FROM airports WHERE city = 'Aberdeen')
SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city  =  'Aberdeen')
SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city  =  'Aberdeen')
SELECT count(*) FROM flights JOIN airports ON flights.destairport  =  airports.airportcode WHERE airports.city  =  'Aberdeen' OR airports.city  =  'Abilene'
SELECT count(*) FROM flights JOIN airports ON flights.destairport  =  airports.airportcode WHERE airports.city  =  'Aberdeen ' OR airports.city  =  'Abilene'
SELECT airportname FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights)
SELECT airportname FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights) AND airportcode NOT IN (SELECT destairport FROM flights)
SELECT count(*) FROM employee
SELECT count(*) FROM employee
SELECT name FROM employee ORDER BY age ASC
SELECT name FROM employee ORDER BY age ASC
SELECT city ,  count(*) FROM employee GROUP BY city
SELECT count(*) ,  city FROM employee GROUP BY city
SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
SELECT count(*) ,  shop.location FROM shop GROUP BY shop.location
SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
SELECT min(number_products) ,  max(number_products) FROM shop
SELECT min(number_products) ,  max(number_products) FROM shop
SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id  =  employee.employee_id GROUP BY evaluation.employee_id ORDER BY count(*) DESC LIMIT 1
SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id  =  employee.employee_id GROUP BY evaluation.employee_id ORDER BY count(*) DESC LIMIT 1
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id  =  evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY sum(evaluation.bonus) DESC LIMIT 1
SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id  =  employee.employee_id ORDER BY evaluation.bonus DESC LIMIT 1
SELECT name FROM employee EXCEPT SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id  =  evaluation.employee_id
SELECT name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation)
SELECT shop.name FROM shop JOIN hiring ON shop.shop_id  =  hiring.shop_id GROUP BY hiring.shop_id ORDER BY count(*) DESC LIMIT 1
SELECT shop.name FROM shop JOIN hiring ON shop.shop_id  =  hiring.shop_id GROUP BY hiring.shop_id ORDER BY count(*) DESC LIMIT 1
SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
SELECT shop.name ,  count(*) FROM hiring JOIN shop ON hiring.shop_id  =  shop.shop_id GROUP BY hiring.shop_id
SELECT count(*) ,  shop.name FROM hiring JOIN shop ON hiring.shop_id  =  shop.shop_id GROUP BY hiring.shop_id
SELECT sum(bonus) FROM evaluation
SELECT sum(bonus) FROM evaluation
SELECT * FROM hiring
SELECT * FROM hiring
SELECT district FROM shop WHERE number_products  <  3000 INTERSECT SELECT district FROM shop WHERE number_products  >  10000
SELECT district FROM shop WHERE number_products  <  3000 INTERSECT SELECT district FROM shop WHERE number_products  >  10000
SELECT count(DISTINCT LOCATION) FROM shop
SELECT count(DISTINCT LOCATION) FROM shop
SELECT count(*) FROM documents
SELECT count(*) FROM documents
SELECT document_id ,  document_name ,  document_description FROM documents
SELECT document_id ,  document_name ,  document_description FROM documents
SELECT document_name ,  template_id FROM documents WHERE document_description LIKE '%w%'
SELECT document_name ,  template_id FROM documents WHERE document_description LIKE '%w%'
SELECT document_id ,  template_id ,  document_description FROM documents WHERE document_name  =  "Robbin CV"
SELECT document_id ,  template_id ,  document_description FROM documents WHERE document_name  =  "Robbin CV"
SELECT count(DISTINCT template_id) FROM documents
SELECT count(DISTINCT template_id) FROM documents
SELECT count(*) FROM documents JOIN templates ON documents.template_id  =  templates.template_id WHERE templates.template_type_code  =  'PPT'
SELECT count(*) FROM templates JOIN documents ON templates.template_id  =  documents.template_id WHERE templates.template_type_code  =  "PPT"
SELECT templates.template_id ,  count(*) FROM templates JOIN documents ON templates.template_id  =  documents.template_id GROUP BY templates.template_id
SELECT DISTINCT template_id ,  count(*) FROM documents GROUP BY template_id
SELECT templates.template_id ,  templates.template_type_code FROM templates JOIN documents ON templates.template_id  =  documents.template_id GROUP BY documents.template_id ORDER BY count(*) DESC LIMIT 1
SELECT templates.template_id ,  templates.template_type_code FROM documents JOIN templates ON documents.template_id  =  templates.template_id GROUP BY templates.template_id ORDER BY count(*) DESC LIMIT 1
SELECT template_id FROM documents GROUP BY template_id HAVING count(*)  >  1
SELECT template_id FROM documents GROUP BY template_id HAVING count(*)  >  1
SELECT template_id FROM templates EXCEPT SELECT template_id FROM documents
SELECT template_id FROM templates EXCEPT SELECT template_id FROM documents
SELECT count(*) FROM templates
SELECT count(*) FROM templates
SELECT template_id ,  version_number ,  template_type_code FROM templates
SELECT template_id ,  version_number ,  template_type_code FROM templates
SELECT DISTINCT template_type_code FROM templates
SELECT DISTINCT template_type_code FROM templates
SELECT template_id FROM templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
SELECT template_id FROM templates WHERE template_type_code  =  'PP' OR template_type_code  =  'PPT'
SELECT count(*) FROM templates WHERE template_type_code  =  "CV"
SELECT count(*) FROM templates WHERE template_type_code  =  "CV"
SELECT version_number ,  template_type_code FROM templates WHERE version_number  >  5
SELECT version_number ,  template_type_code FROM templates WHERE version_number  >  5
SELECT template_type_code ,  count(*) FROM templates GROUP BY template_type_code
SELECT template_type_code ,  count(*) FROM templates GROUP BY template_type_code
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING count(*)  <  3
SELECT ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code  =  templates.template_type_code GROUP BY ref_template_types.template_type_code HAVING COUNT(templates.template_id)  <  3
SELECT version_number ,  template_type_code FROM templates ORDER BY version_number ASC LIMIT 1
SELECT version_number ,  template_type_code FROM templates ORDER BY version_number ASC LIMIT 1
SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id  =  templates.template_id WHERE documents.document_name  =  "Data base"
SELECT templates.template_type_code FROM templates JOIN documents ON templates.template_id  =  documents.template_id WHERE documents.document_name  =  'Data base'
SELECT documents.document_name FROM templates JOIN documents ON templates.template_id  =  documents.template_id WHERE templates.template_type_code  =  "BK"
SELECT documents.document_name FROM documents JOIN templates ON documents.template_id  =  templates.template_id WHERE templates.template_type_code  =  'BK'
SELECT templates.template_type_code ,  count(*) FROM templates JOIN documents ON templates.template_id  =  documents.template_id GROUP BY templates.template_type_code
SELECT templates.template_type_code ,  count(*) FROM documents JOIN templates ON documents.template_id  =  templates.template_id GROUP BY templates.template_type_code
SELECT templates.template_type_code FROM templates JOIN documents ON templates.template_id  =  documents.template_id GROUP BY templates.template_type_code ORDER BY count(*) DESC LIMIT 1
SELECT ref_template_types.template_type_code FROM documents JOIN templates ON documents.template_id  =  templates.template_id JOIN ref_template_types ON templates.template_type_code  =  ref_template_types.template_type_code GROUP BY ref_template_types.template_type_code ORDER BY count(*) DESC LIMIT 1
SELECT template_type_code FROM ref_template_types EXCEPT SELECT template_type_code FROM templates
SELECT template_type_code FROM ref_template_types EXCEPT SELECT template_type_code FROM templates
SELECT template_type_code ,  template_type_description FROM ref_template_types
SELECT template_type_code ,  template_type_description FROM ref_template_types
SELECT template_type_description FROM ref_template_types WHERE template_type_code  =  "AD"
SELECT template_type_description FROM ref_template_types WHERE template_type_code  =  "AD"
SELECT template_type_code FROM ref_template_types WHERE template_type_description  =  "Book"
SELECT template_type_code FROM ref_template_types WHERE template_type_description  =  "Book"
SELECT DISTINCT ref_template_types.template_type_description FROM templates JOIN ref_template_types ON templates.template_type_code  =  ref_template_types.template_type_code
SELECT DISTINCT ref_template_types.template_type_description FROM documents JOIN templates ON documents.template_id  =  templates.template_id JOIN ref_template_types ON templates.template_type_code  =  ref_template_types.template_type_code
SELECT templates.template_id FROM ref_template_types JOIN templates ON ref_template_types.template_type_code  =  templates.template_type_code WHERE ref_template_types.template_type_description  =  "Presentation"
SELECT templates.template_id FROM ref_template_types JOIN templates ON ref_template_types.template_type_code  =  templates.template_type_code WHERE ref_template_types.template_type_description  =  'Presentation'
SELECT count(*) FROM paragraphs
SELECT count(*) FROM paragraphs
SELECT count(*) FROM documents JOIN paragraphs ON documents.document_id  =  paragraphs.document_id WHERE documents.document_name  =  'Summer Show'
SELECT count(*) FROM paragraphs JOIN documents ON paragraphs.document_id  =  documents.document_id WHERE documents.document_name  =  'Summer Show'
SELECT other_details FROM paragraphs WHERE paragraph_text  =  "Korea "
SELECT other_details FROM paragraphs WHERE paragraph_text LIKE '%Korea %'
SELECT paragraphs.paragraph_id ,  paragraphs.paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id  =  documents.document_id WHERE documents.document_name  =  'Welcome to NY'
SELECT paragraphs.paragraph_id ,  paragraphs.paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id  =  documents.document_id WHERE documents.document_name  =  'Welcome to NY'
SELECT paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id  =  paragraphs.document_id WHERE documents.document_name  =  "Customer reviews"
SELECT paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id  =  paragraphs.document_id WHERE documents.document_name  =  "Customer reviews"
SELECT document_id ,  count(*) FROM paragraphs GROUP BY document_id ORDER BY document_id
SELECT document_id ,  count(*) FROM paragraphs GROUP BY document_id ORDER BY document_id
SELECT documents.document_id ,  documents.document_name ,  count(*) FROM documents JOIN paragraphs ON documents.document_id  =  paragraphs.document_id GROUP BY documents.document_id
SELECT documents.document_id ,  documents.document_name ,  count(*) FROM documents JOIN paragraphs ON documents.document_id  =  paragraphs.document_id GROUP BY documents.document_id
SELECT document_id FROM paragraphs GROUP BY document_id HAVING count(*)  >=  2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING count(*)  >=  2
SELECT documents.document_id ,  documents.document_name FROM documents JOIN paragraphs ON documents.document_id  =  paragraphs.document_id GROUP BY documents.document_id ORDER BY count(*) DESC LIMIT 1
SELECT documents.document_id ,  documents.document_name FROM documents JOIN paragraphs ON documents.document_id  =  paragraphs.document_id GROUP BY documents.document_id ORDER BY count(*) DESC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT ( * ) BETWEEN 1 AND 2
SELECT document_id FROM paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM paragraphs WHERE paragraph_text  =  'Ireland'
SELECT document_id FROM paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM paragraphs WHERE paragraph_text  =  'Ireland'
SELECT count(DISTINCT teacher_id) FROM teacher
SELECT count(*) FROM teacher
SELECT name FROM teacher ORDER BY CAST(age AS INTEGER) ASC
SELECT name FROM teacher ORDER BY CAST(age AS INTEGER) ASC
SELECT age ,  hometown FROM teacher
SELECT age ,  hometown FROM teacher
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
SELECT name FROM teacher WHERE age  =  32 OR age  =  33
SELECT name FROM teacher WHERE age  =  32 OR age  =  33
SELECT hometown FROM teacher ORDER BY age ASC LIMIT 1
SELECT hometown FROM teacher WHERE age  =  (SELECT min(age) FROM teacher)
SELECT hometown ,  count(*) FROM teacher GROUP BY hometown
SELECT hometown ,  count(*) FROM teacher GROUP BY hometown
SELECT hometown FROM teacher GROUP BY hometown ORDER BY count(*) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown ORDER BY count(*) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown HAVING count(*)  >=  2
SELECT hometown FROM teacher GROUP BY hometown HAVING count(*)  >=  2
SELECT teacher.name ,  course.course FROM course_arrange JOIN course ON course_arrange.course_id  =  course.course_id JOIN teacher ON course_arrange.teacher_id  =  teacher.teacher_id
SELECT teacher.name ,  course.course FROM course_arrange JOIN course ON course_arrange.course_id  =  course.course_id JOIN teacher ON course_arrange.teacher_id  =  teacher.teacher_id
SELECT teacher.name ,  course.course FROM course_arrange JOIN course ON course_arrange.course_id  =  course.course_id JOIN teacher ON course_arrange.teacher_id  =  teacher.teacher_id ORDER BY teacher.name ASC
SELECT teacher.name ,  course.course FROM course_arrange JOIN course ON course_arrange.course_id  =  course.course_id JOIN teacher ON course_arrange.teacher_id  =  teacher.teacher_id ORDER BY teacher.name ASC
SELECT teacher.name FROM course JOIN course_arrange ON course.course_id  =  course_arrange.course_id JOIN teacher ON course_arrange.teacher_id  =  teacher.teacher_id WHERE course.course  =  'Math'
SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id  =  teacher.teacher_id JOIN course ON course_arrange.course_id  =  course.course_id WHERE course.course  =  'Math'
SELECT teacher.name ,  count(*) FROM course_arrange JOIN teacher ON course_arrange.teacher_id  =  teacher.teacher_id GROUP BY course_arrange.teacher_id
SELECT teacher.name ,  count(course_arrange.course_id) FROM course_arrange JOIN teacher ON course_arrange.teacher_id  =  teacher.teacher_id GROUP BY course_arrange.teacher_id
SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id  =  teacher.teacher_id GROUP BY course_arrange.teacher_id HAVING count(*)  >=  2
SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id  =  teacher.teacher_id GROUP BY course_arrange.teacher_id HAVING COUNT ( course_arrange.course_id )  >=  2
SELECT name FROM teacher WHERE teacher_id NOT IN (SELECT course_arrange.teacher_id FROM course_arrange)
SELECT name FROM teacher WHERE teacher_id NOT IN (SELECT teacher_id FROM course_arrange)
SELECT count(*) FROM visitor WHERE age  <  30
SELECT name FROM visitor WHERE level_of_membership  >  4 ORDER BY level_of_membership DESC
SELECT avg(age) FROM visitor WHERE LEVEL_OF_MEMBERSHIP  >  4
SELECT name ,  level_of_membership FROM visitor WHERE level_of_membership  >  4 ORDER BY age DESC
SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
SELECT open_year ,  num_of_staff FROM museum WHERE name  =  'Plaza Museum'
SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
SELECT visitor.id ,  visitor.name ,  visitor.age FROM visitor JOIN visit ON visitor.id  =  visit.visitor_id GROUP BY visit.visitor_id HAVING COUNT ( DISTINCT visit.museum_id )  >  1
SELECT visitor.id ,  visitor.name ,  visitor.level_of_membership FROM visitor JOIN visit ON visitor.id  =  visit.visitor_id GROUP BY visitor.id ORDER BY SUM(visit.total_spent) DESC LIMIT 1
SELECT museum.museum_id ,  museum.name FROM museum JOIN visit ON museum.museum_id  =  visit.museum_id GROUP BY visit.museum_id ORDER BY count(*) DESC LIMIT 1
SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM visit)
SELECT visitor.name ,  visitor.age FROM visitor JOIN visit ON visitor.id  =  visit.visitor_id GROUP BY visitor.id ORDER BY sum(visit.num_of_ticket) DESC LIMIT 1
SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
SELECT sum(visit.total_spent) FROM visitor JOIN visit ON visitor.id  =  visit.visitor_id WHERE visitor.level_of_membership  =  1
SELECT visitor.name FROM museum JOIN visit ON museum.museum_id  =  visit.museum_id JOIN visitor ON visit.visitor_id  =  visitor.id WHERE museum.open_year  <  2009 INTERSECT SELECT visitor.name FROM museum JOIN visit ON museum.museum_id  =  visit.museum_id JOIN visitor ON visit.visitor_id  =  visitor.id WHERE museum.open_year  >  2011
SELECT count(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit WHERE museum_id IN (SELECT museum_id FROM museum WHERE open_year  >  2010))
SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
SELECT count(DISTINCT player_id) FROM players
SELECT count(*) FROM players
SELECT count(*) FROM matches
SELECT count(*) FROM matches
SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
SELECT avg(loser_age) ,  avg(winner_age) FROM matches
SELECT avg(loser_age) ,  avg(winner_age) FROM matches
SELECT avg(winner_rank) FROM matches
SELECT avg(winner_rank) FROM matches
SELECT max(loser_rank) FROM matches
SELECT min(loser_rank) FROM matches
SELECT count(DISTINCT country_code) FROM players
SELECT count(DISTINCT country_code) FROM players
SELECT count(DISTINCT loser_name) FROM matches
SELECT count(DISTINCT loser_name) FROM matches
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT ( match_num )  >  10
SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
SELECT players.country_code ,  players.first_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  'WTA Championships' INTERSECT SELECT players.country_code ,  players.first_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  'Australian Open'
SELECT players.first_name ,  players.country_code FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  'WTA Championships' INTERSECT SELECT players.first_name ,  players.country_code FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  'Australian Open'
SELECT first_name ,  country_code FROM players ORDER BY birth_date ASC LIMIT 1
SELECT first_name ,  country_code FROM players ORDER BY birth_date DESC LIMIT 1
SELECT first_name ,  last_name FROM players ORDER BY birth_date
SELECT first_name ,  last_name FROM players ORDER BY birth_date
SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
SELECT first_name ,  last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT players.first_name ,  players.country_code FROM players JOIN rankings ON players.player_id  =  rankings.player_id GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1
SELECT players.first_name ,  players.country_code FROM rankings JOIN players ON rankings.player_id  =  players.player_id GROUP BY players.first_name ,  players.country_code ORDER BY count(*) DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_id ORDER BY count(*) DESC LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT players.first_name ,  players.last_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT avg(rankings.ranking) ,  players.first_name FROM rankings JOIN players ON rankings.player_id  =  players.player_id GROUP BY rankings.player_id
SELECT players.first_name ,  avg(rankings.ranking) FROM players JOIN rankings ON players.player_id  =  rankings.player_id GROUP BY players.first_name
SELECT sum(ranking_points) ,  first_name FROM rankings JOIN players ON rankings.player_id  =  players.player_id GROUP BY players.first_name
SELECT players.first_name ,  SUM(rankings.ranking_points) FROM players JOIN rankings ON players.player_id  =  rankings.player_id GROUP BY players.first_name
SELECT country_code ,  count(*) FROM players GROUP BY country_code
SELECT country_code ,  count(*) FROM players GROUP BY country_code
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
SELECT ranking_date ,  sum(tours) FROM rankings GROUP BY ranking_date
SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
SELECT winner_name ,  winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT winner_name ,  winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT count(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'
SELECT count(*) FROM matches WHERE winner_hand  =  'L' AND tourney_name  =  'WTA Championships'
SELECT players.first_name ,  players.country_code ,  players.birth_date FROM players JOIN matches ON players.player_id  =  matches.winner_id ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT players.first_name ,  players.country_code ,  players.birth_date FROM players JOIN matches ON players.player_id  =  matches.winner_id GROUP BY matches.winner_id ORDER BY sum(matches.winner_rank_points) DESC LIMIT 1
SELECT count(*) ,  hand FROM players GROUP BY hand
SELECT count(*) ,  hand FROM players GROUP BY hand
SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
SELECT name ,  tonnage FROM ship ORDER BY name DESC
SELECT name ,  date ,  RESULT FROM battle
SELECT max(killed) ,  min(killed) FROM death
SELECT avg(injured) ,  count(*) FROM death
SELECT death.injured ,  death.killed FROM death JOIN ship ON death.caused_by_ship_id  =  ship.id WHERE ship.tonnage  =  't'
SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != "Boril"
SELECT DISTINCT battle.id ,  battle.name FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle WHERE ship.ship_type  =  'Brig'
SELECT battle.id ,  battle.name FROM death JOIN battle ON death.caused_by_ship_id  =  battle.id GROUP BY battle.id HAVING SUM(death.killed)  >  10
SELECT ship.id ,  ship.name FROM death JOIN ship ON death.caused_by_ship_id  =  ship.id GROUP BY death.caused_by_ship_id ORDER BY SUM(death.injured) DESC LIMIT 1
SELECT DISTINCT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' INTERSECT SELECT DISTINCT name FROM battle WHERE latin_commander  =  'Baldwin I'
SELECT count(DISTINCT RESULT) FROM battle
SELECT count(*) FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage  =  225)
SELECT battle.name ,  battle.date FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle WHERE ship.name  =  'Lettice' INTERSECT SELECT battle.name ,  battle.date FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle WHERE ship.name  =  'HMS Atalanta'
SELECT battle.name ,  battle.result ,  battle.bulgarian_commander FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle EXCEPT SELECT battle.name ,  battle.result ,  battle.bulgarian_commander FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle WHERE ship.location  =  'English Channel'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT line_1 ,  line_2 FROM addresses
SELECT line_1 ,  line_2 FROM addresses
SELECT count(*) FROM courses
SELECT count(*) FROM courses
SELECT course_description FROM courses WHERE course_name  =  "math"
SELECT course_description FROM courses WHERE course_name  =  'math'
SELECT zip_postcode FROM addresses WHERE city  =  'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city  =  "Port Chelsea"
SELECT departments.department_name ,  departments.department_id FROM departments JOIN degree_programs ON departments.department_id  =  degree_programs.department_id GROUP BY departments.department_id ORDER BY count(*) DESC LIMIT 1
SELECT departments.department_name ,  departments.department_id FROM departments JOIN degree_programs ON departments.department_id  =  degree_programs.department_id GROUP BY departments.department_id ORDER BY count(*) DESC LIMIT 1
SELECT count(DISTINCT department_id) FROM degree_programs
SELECT count(DISTINCT department_id) FROM degree_programs
SELECT count(DISTINCT degree_summary_name) FROM degree_programs
SELECT count(DISTINCT degree_summary_name) FROM degree_programs
SELECT count(*) FROM degree_programs JOIN departments ON degree_programs.department_id  =  departments.department_id WHERE departments.department_name  =  'engineering'
SELECT count(*) FROM departments JOIN degree_programs ON departments.department_id  =  degree_programs.department_id WHERE departments.department_name  =  'engineering'
SELECT section_name ,  section_description FROM sections
SELECT section_name ,  section_description FROM sections
SELECT courses.course_name ,  courses.course_id FROM courses JOIN sections ON courses.course_id  =  sections.course_id GROUP BY courses.course_id HAVING count(*)  <=  2
SELECT courses.course_name ,  courses.course_id FROM courses JOIN sections ON courses.course_id  =  sections.course_id GROUP BY courses.course_id HAVING count(*)  <  2
SELECT section_name FROM SECTIONS ORDER BY section_name DESC
SELECT section_name FROM SECTIONS ORDER BY section_name DESC
SELECT semesters.semester_name ,  semesters.semester_id FROM student_enrolment JOIN semesters ON student_enrolment.semester_id  =  semesters.semester_id GROUP BY student_enrolment.semester_id ORDER BY count(*) DESC LIMIT 1
SELECT semesters.semester_name ,  semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.semester_id  =  student_enrolment.semester_id GROUP BY semesters.semester_id ORDER BY count(*) DESC LIMIT 1
SELECT department_description FROM departments WHERE department_name LIKE '%the computer%' ORDER BY department_name LIMIT 1
SELECT department_description FROM departments WHERE department_name LIKE '%computer%'
SELECT students.first_name ,  students.middle_name ,  students.last_name ,  student_enrolment.student_id FROM student_enrolment JOIN students ON student_enrolment.student_id  =  students.student_id GROUP BY student_enrolment.student_id HAVING COUNT(DISTINCT student_enrolment.degree_program_id)  =  2
SELECT students.first_name ,  students.middle_name ,  students.last_name ,  students.student_id FROM students JOIN student_enrolment ON students.student_id  =  student_enrolment.student_id GROUP BY students.student_id HAVING COUNT(DISTINCT student_enrolment.degree_program_id)  =  2
SELECT students.first_name ,  students.middle_name ,  students.last_name FROM student_enrolment JOIN students ON student_enrolment.student_id  =  students.student_id JOIN degree_programs ON student_enrolment.degree_program_id  =  degree_programs.degree_program_id WHERE degree_programs.degree_summary_name  =  'Bachelor'
SELECT students.first_name ,  students.middle_name ,  students.last_name FROM students JOIN student_enrolment ON students.student_id  =  student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id  =  degree_programs.degree_program_id WHERE degree_programs.degree_summary_name  =  'Bachelor'
SELECT degree_programs.degree_summary_name FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id  =  degree_programs.degree_program_id GROUP BY student_enrolment.degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT degree_programs.degree_summary_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id  =  student_enrolment.degree_program_id GROUP BY degree_programs.degree_summary_name ORDER BY count(*) DESC LIMIT 1
SELECT degree_programs.degree_program_id ,  degree_programs.degree_summary_name FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id  =  degree_programs.degree_program_id GROUP BY degree_programs.degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT degree_programs.degree_program_id ,  degree_programs.degree_summary_description FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id  =  degree_programs.degree_program_id GROUP BY student_enrolment.degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT students.student_id ,  students.first_name ,  students.middle_name ,  students.last_name ,  count(*) ,  student_enrolment.student_id FROM students JOIN student_enrolment ON students.student_id  =  student_enrolment.student_id GROUP BY student_enrolment.student_id ORDER BY count(*) DESC LIMIT 1
SELECT students.first_name ,  students.middle_name ,  students.last_name ,  students.student_id ,  count(*) FROM students JOIN student_enrolment ON students.student_id  =  student_enrolment.student_id GROUP BY students.student_id ORDER BY count(*) DESC LIMIT 1
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semesters.semester_name FROM semesters WHERE semesters.semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT courses.course_name FROM courses JOIN student_enrolment_courses ON courses.course_id  =  student_enrolment_courses.course_id
SELECT courses.course_name FROM courses JOIN student_enrolment_courses ON courses.course_id  =  student_enrolment_courses.course_id
SELECT courses.course_name FROM courses JOIN student_enrolment_courses ON courses.course_id  =  student_enrolment_courses.course_id GROUP BY student_enrolment_courses.course_id ORDER BY count(*) DESC LIMIT 1
SELECT courses.course_name FROM courses JOIN student_enrolment_courses ON courses.course_id  =  student_enrolment_courses.course_id GROUP BY student_enrolment_courses.course_id ORDER BY count(*) DESC LIMIT 1
SELECT last_name FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE state_province_county  =  'NorthCarolina') EXCEPT SELECT last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment)
SELECT last_name FROM students JOIN addresses ON students.current_address_id  =  addresses.address_id WHERE addresses.state_province_county  =  'NorthCarolina' EXCEPT SELECT last_name FROM students WHERE student_id IN (SELECT student_enrolment.student_id FROM student_enrolment)
SELECT transcripts.transcript_date ,  transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript_id  =  transcript_contents.transcript_id GROUP BY transcripts.transcript_id HAVING count(*)  >=  2
SELECT transcripts.transcript_date ,  transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript_id  =  transcript_contents.transcript_id GROUP BY transcripts.transcript_id HAVING count(*)  >=  2
SELECT cell_mobile_number FROM students WHERE first_name  =  "Timmothy" AND last_name  =  "Ward"
SELECT cell_mobile_number FROM students WHERE first_name  =  "Timmothy" AND last_name  =  "Ward"
SELECT first_name ,  middle_name ,  last_name FROM students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name ,  middle_name ,  last_name FROM students ORDER BY date_first_registered LIMIT 1
SELECT first_name ,  middle_name ,  last_name FROM students WHERE date_left  =  (SELECT min(date_left) FROM students)
SELECT first_name ,  middle_name ,  last_name FROM students ORDER BY date_first_registered ASC LIMIT 1
SELECT students.first_name FROM students JOIN addresses ON students.permanent_address_id != students.current_address_id
SELECT first_name FROM students WHERE permanent_address_id != current_address_id
SELECT addresses.address_id ,  addresses.line_1 ,  addresses.line_2 ,  addresses.line_3 FROM addresses JOIN students ON addresses.address_id  =  students.current_address_id GROUP BY addresses.address_id ORDER BY count(*) DESC LIMIT 1
SELECT addresses.address_id ,  addresses.line_1 ,  addresses.line_2 FROM addresses JOIN students ON addresses.address_id  =  students.current_address_id OR addresses.address_id  =  students.permanent_address_id GROUP BY addresses.address_id ORDER BY count(*) DESC LIMIT 1
SELECT avg(transcript_date) FROM transcripts
SELECT FROM_UNIXTIME(AVG(UNIX_TIMESTAMP(transcript_date))) FROM transcripts
SELECT transcript_date ,  other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1
SELECT transcript_date ,  other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1
SELECT count(*) FROM transcripts
SELECT count(*) FROM transcripts
SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT student_course_id ,  count(*) FROM transcript_contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
SELECT student_course_id ,  count(*) FROM transcript_contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
SELECT transcripts.transcript_date ,  transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript_id  =  transcript_contents.transcript_id GROUP BY transcripts.transcript_id ORDER BY count(*) ASC LIMIT 1
SELECT transcripts.transcript_date ,  transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript_id  =  transcript_contents.transcript_id GROUP BY transcripts.transcript_id ORDER BY count(*) ASC LIMIT 1
SELECT semesters.semester_name FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id  =  degree_programs.degree_program_id JOIN semesters ON student_enrolment.semester_id  =  semesters.semester_id WHERE degree_programs.degree_summary_name  =  'Master' INTERSECT SELECT semesters.semester_name FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id  =  degree_programs.degree_program_id JOIN semesters ON student_enrolment.semester_id  =  semesters.semester_id WHERE degree_programs.degree_summary_name  =  'Bachelor'
SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name  =  'Master') INTERSECT SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name  =  'Bachelor')
SELECT count(DISTINCT current_address_id) FROM students
SELECT DISTINCT addresses.line_1 ,  addresses.line_2 ,  addresses.line_3 ,  addresses.city ,  addresses.zip_postcode ,  addresses.state_province_county ,  addresses.country FROM addresses JOIN students ON addresses.address_id  =  students.current_address_id OR addresses.address_id  =  students.permanent_address_id
SELECT other_student_details FROM students ORDER BY last_name DESC
SELECT other_student_details FROM students ORDER BY last_name DESC ,  first_name DESC
SELECT section_description FROM sections WHERE section_name  =  "h"
SELECT section_description FROM sections WHERE section_name  =  "h"
SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = 'Haiti' OR students.cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon WHERE directed_by  =  "Ben Jones"
SELECT title FROM cartoon WHERE directed_by  =  "Ben Jones"
SELECT count(*) FROM cartoon WHERE written_by  =  "Joseph Kuhr"
SELECT count(*) FROM cartoon WHERE written_by LIKE '%Joseph Kuhr%'
SELECT title ,  directed_by FROM cartoon ORDER BY original_air_date
SELECT title ,  directed_by FROM cartoon ORDER BY original_air_date
SELECT title FROM cartoon WHERE directed_by  =  "Ben Jones" OR directed_by  =  "Brandon Vietti"
SELECT title FROM cartoon WHERE directed_by  =  'Ben Jones' OR directed_by  =  'Brandon Vietti'
SELECT country ,  count(*) FROM tv_channel GROUP BY country ORDER BY count(*) DESC LIMIT 1
SELECT country ,  count(*) FROM tv_channel GROUP BY country ORDER BY count(*) DESC LIMIT 1
SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM tv_channel
SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM tv_channel
SELECT content FROM tv_channel WHERE series_name  =  "Sky Radio"
SELECT content FROM tv_channel WHERE series_name  =  'Sky Radio'
SELECT package_option FROM tv_channel WHERE series_name  =  "Sky Radio"
SELECT package_option FROM tv_channel WHERE series_name  =  'Sky Radio'
SELECT count(*) FROM tv_channel WHERE language  =  'English'
SELECT count(*) FROM tv_channel WHERE language  =  'English'
SELECT language ,  count(*) FROM tv_channel GROUP BY language ORDER BY count(*) ASC LIMIT 1
SELECT language ,  count(*) FROM tv_channel GROUP BY language ORDER BY count(*) ASC LIMIT 1
SELECT language ,  count(*) FROM tv_channel GROUP BY language
SELECT language ,  count(*) FROM tv_channel GROUP BY language
SELECT tv_channel.series_name FROM cartoon JOIN tv_channel ON cartoon.channel  =  tv_channel.id WHERE cartoon.title  =  "The Rise of the Blue Beetle!"
SELECT tv_channel.series_name FROM cartoon JOIN tv_channel ON cartoon.channel  =  tv_channel.id WHERE cartoon.title  =  "The Rise of the Blue Beetle"
SELECT cartoon.title FROM cartoon JOIN tv_channel ON cartoon.channel  =  tv_channel.id WHERE tv_channel.series_name  =  "Sky Radio"
SELECT cartoon.title FROM cartoon JOIN tv_channel ON cartoon.channel  =  tv_channel.id WHERE tv_channel.series_name  =  "Sky Radio"
SELECT episode FROM tv_series ORDER BY rating
SELECT episode FROM tv_series ORDER BY rating DESC
SELECT episode ,  rating FROM tv_series ORDER BY CAST(rating AS REAL) DESC LIMIT 3;
SELECT episode ,  rating FROM tv_series ORDER BY rating DESC LIMIT 3
SELECT min(share) ,  max(share) FROM tv_series
SELECT max(share) ,  min(share) FROM tv_series
SELECT air_date FROM tv_series WHERE episode  =  "A Love of a Lifetime"
SELECT air_date FROM tv_series WHERE episode  =  "A Love of a Lifetime"
SELECT weekly_rank FROM tv_series WHERE episode  =  "A Love of a Lifetime"
SELECT weekly_rank FROM tv_series WHERE episode  =  "A Love of a Lifetime"
SELECT tv_channel.series_name FROM tv_series JOIN tv_channel ON tv_series.channel  =  tv_channel.id WHERE tv_series.episode  =  "A Love of a Lifetime"
SELECT tv_channel.series_name FROM tv_series JOIN tv_channel ON tv_series.channel  =  tv_channel.id WHERE tv_series.episode  =  "A Love of a Lifetime"
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel  =  tv_channel.id WHERE tv_channel.series_name  =  "Sky Radio"
SELECT episode FROM tv_series WHERE channel  =  (SELECT id FROM tv_channel WHERE series_name  =  'Sky Radio')
SELECT count(*) ,  cartoon.directed_by FROM cartoon GROUP BY cartoon.directed_by
SELECT count(*) ,  cartoon.directed_by FROM cartoon GROUP BY cartoon.directed_by
SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date DESC LIMIT 1
SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date DESC LIMIT 1
SELECT package_option ,  series_name FROM tv_channel WHERE hight_definition_tv  =  'yes'
SELECT package_option ,  series_name FROM tv_channel WHERE hight_definition_tv  =  'yes'
SELECT tv_channel.country FROM cartoon JOIN tv_channel ON cartoon.channel  =  tv_channel.id WHERE cartoon.written_by  =  'Todd Casey'
SELECT tv_channel.country FROM cartoon JOIN tv_channel ON cartoon.channel  =  tv_channel.id WHERE cartoon.written_by  =  'Todd Casey'
SELECT country FROM tv_channel EXCEPT SELECT tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id  =  cartoon.channel WHERE cartoon.written_by  =  'Todd Casey'
SELECT country FROM tv_channel EXCEPT SELECT tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id  =  cartoon.channel WHERE cartoon.written_by  =  'Todd Casey'
SELECT tv_channel.series_name ,  tv_channel.country FROM cartoon JOIN tv_channel ON cartoon.channel  =  tv_channel.id WHERE cartoon.directed_by LIKE '%Ben Jones%' AND cartoon.directed_by LIKE '%Michael Chang%'
SELECT tv_channel.series_name ,  tv_channel.country FROM cartoon JOIN tv_channel ON cartoon.channel  =  tv_channel.id WHERE cartoon.directed_by  =  'Ben Jones' INTERSECT SELECT tv_channel.series_name ,  tv_channel.country FROM cartoon JOIN tv_channel ON cartoon.channel  =  tv_channel.id WHERE cartoon.directed_by  =  'Michael Chang'
SELECT pixel_aspect_ratio_par ,  country FROM tv_channel WHERE language != 'English'
SELECT pixel_aspect_ratio_par ,  country FROM tv_channel WHERE language != 'English'
SELECT tv_channel.id FROM tv_channel JOIN country ON tv_channel.country  =  country.name GROUP BY country.name HAVING COUNT ( tv_channel.id )  >  2
SELECT id FROM tv_channel GROUP BY id HAVING count(*)  >  2
SELECT id FROM tv_channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
SELECT id FROM tv_channel EXCEPT SELECT cartoon.channel FROM cartoon JOIN tv_channel ON cartoon.channel  =  tv_channel.id WHERE cartoon.directed_by = 'Ben Jones'
SELECT package_option FROM tv_channel EXCEPT SELECT tv_channel.package_option FROM tv_channel JOIN cartoon ON tv_channel.id  =  cartoon.channel WHERE cartoon.directed_by  =  'Ben Jones'
SELECT package_option FROM tv_channel EXCEPT SELECT tv_channel.package_option FROM tv_channel JOIN cartoon ON tv_channel.id  =  cartoon.channel WHERE cartoon.directed_by  =  'Ben Jones'
SELECT count(*) FROM poker_player
SELECT count(DISTINCT poker_player_id) FROM poker_player
SELECT earnings FROM poker_player ORDER BY earnings DESC
SELECT earnings FROM poker_player ORDER BY earnings DESC
SELECT final_table_made ,  best_finish FROM poker_player
SELECT final_table_made ,  best_finish FROM poker_player
SELECT avg(earnings) FROM poker_player
SELECT avg(earnings) FROM poker_player
SELECT money_rank FROM poker_player ORDER BY earnings DESC LIMIT 1
SELECT money_rank FROM poker_player ORDER BY earnings DESC LIMIT 1
SELECT max(final_table_made) FROM poker_player WHERE earnings  <  200000
SELECT max(final_table_made) FROM poker_player WHERE earnings  <  200000
SELECT people.name FROM people JOIN poker_player ON people.people_id  =  poker_player.people_id
SELECT people.name FROM people JOIN poker_player ON people.people_id  =  poker_player.people_id
SELECT people.name FROM poker_player JOIN people ON poker_player.people_id  =  people.people_id WHERE poker_player.earnings  >  300000
SELECT people.name FROM people JOIN poker_player ON people.people_id  =  poker_player.people_id WHERE poker_player.earnings  >  300000
SELECT people.name FROM people JOIN poker_player ON people.people_id  =  poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id  =  poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.birth_date FROM people JOIN poker_player ON people.people_id  =  poker_player.people_id ORDER BY poker_player.earnings ASC LIMIT 1
SELECT people.birth_date FROM people JOIN poker_player ON people.people_id  =  poker_player.people_id ORDER BY poker_player.earnings ASC LIMIT 1
SELECT money_rank FROM poker_player JOIN people ON poker_player.people_id  =  people.people_id ORDER BY people.height DESC LIMIT 1
SELECT poker_player.money_rank FROM people JOIN poker_player ON people.people_id  =  poker_player.people_id ORDER BY people.height DESC LIMIT 1
SELECT avg(poker_player.earnings) FROM poker_player JOIN people ON poker_player.people_id  =  people.people_id WHERE people.height  >  200
SELECT avg(earnings) FROM poker_player JOIN people ON poker_player.people_id  =  people.people_id WHERE people.height  >  200
SELECT people.name FROM people JOIN poker_player ON people.people_id  =  poker_player.people_id ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON people.people_id  =  poker_player.people_id ORDER BY poker_player.earnings DESC
SELECT nationality ,  count(*) FROM people GROUP BY nationality
SELECT count(*) ,  nationality FROM people GROUP BY nationality
SELECT nationality FROM people GROUP BY nationality ORDER BY count(*) DESC LIMIT 1
SELECT nationality FROM people GROUP BY nationality ORDER BY count(*) DESC LIMIT 1
SELECT nationality FROM people GROUP BY nationality HAVING count(*)  >=  2
SELECT nationality FROM people GROUP BY nationality HAVING count(*)  >=  2
SELECT name ,  birth_date FROM people ORDER BY name ASC
SELECT name ,  birth_date FROM people ORDER BY name ASC
SELECT name FROM people WHERE nationality != 'Russia'
SELECT name FROM people WHERE nationality != 'Russia'
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)
SELECT count(DISTINCT nationality) FROM people
SELECT count(DISTINCT nationality) FROM people
SELECT count(DISTINCT state) FROM area_code_state
SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
SELECT vote_id ,  phone_number ,  state FROM votes
SELECT max(area_code) ,  min(area_code) FROM area_code_state
SELECT max(created) FROM votes WHERE state  =  'CA'
SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
SELECT DISTINCT state ,  created FROM votes
SELECT contestants.contestant_number ,  contestants.contestant_name FROM votes JOIN contestants ON votes.contestant_number  =  contestants.contestant_number GROUP BY votes.contestant_number HAVING COUNT ( votes.vote_id )  >=  2
SELECT contestants.contestant_number ,  contestants.contestant_name FROM votes JOIN contestants ON votes.contestant_number  =  contestants.contestant_number GROUP BY votes.contestant_number ORDER BY count(*) ASC LIMIT 1
SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
SELECT count(*) FROM contestants WHERE contestant_number NOT IN (SELECT votes.contestant_number FROM votes)
SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state  =  votes.state GROUP BY area_code_state.area_code ORDER BY count(*) DESC LIMIT 1
SELECT votes.created ,  votes.state ,  votes.phone_number FROM votes JOIN contestants ON votes.contestant_number  =  contestants.contestant_number WHERE contestants.contestant_name  =  'Tabatha Gehling'
SELECT votes.state FROM votes JOIN contestants ON votes.contestant_number  =  contestants.contestant_number WHERE contestants.contestant_name  =  "Tabatha Gehling" INTERSECT SELECT votes.state FROM votes JOIN contestants ON votes.contestant_number  =  contestants.contestant_number WHERE contestants.contestant_name  =  "Kelly Clauss"
SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%'
SELECT name FROM country WHERE indepyear  >  1950
SELECT name FROM country WHERE indepyear  >  1950
SELECT count(*) FROM country WHERE governmentform  =  'republic'
SELECT count(*) FROM country WHERE governmentform LIKE '%republic%'
SELECT SUM(country.surfacearea) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.region  =  'Caribbean'
SELECT SUM(country.surfacearea) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.region  =  'Caribbean'
SELECT continent FROM country WHERE name  =  'Anguilla'
SELECT continent FROM country WHERE name  =  "Anguilla"
SELECT country.region FROM city JOIN country ON city.countrycode  =  country.code WHERE city.name  =  "Kabul"
SELECT country.region FROM city JOIN country ON city.countrycode  =  country.code WHERE city.name  =  "Kabul"
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.name  =  'Aruba' ORDER BY countrylanguage.percentage DESC LIMIT 1
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.name  =  'Aruba' ORDER BY countrylanguage.percentage DESC LIMIT 1
SELECT population ,  lifeexpectancy FROM country WHERE name  =  'Brazil'
SELECT population ,  lifeexpectancy FROM country WHERE name  =  'Brazil'
SELECT region ,  population FROM country WHERE name  =  'Angola'
SELECT region ,  population FROM country WHERE name  =  'Angola'
SELECT avg(lifeexpectancy) FROM country WHERE region  =  'Central Africa'
SELECT avg(lifeexpectancy) FROM country WHERE region  =  'Central Africa'
SELECT name FROM country WHERE continent  =  'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent  =  'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT SUM(population) ,  MAX(gnp) FROM country WHERE continent  =  'Asia'
SELECT SUM ( population ) ,  MAX ( gnp ) FROM country WHERE continent  =  'Asia'
SELECT avg(country.lifeexpectancy) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.continent  =  'Africa' AND country.governmentform LIKE '%republic%'
SELECT avg(lifeexpectancy) FROM country WHERE continent  =  'Africa' AND governmentform LIKE '%Republic%'
SELECT sum(surfacearea) FROM country WHERE continent  =  'Asia' OR continent  =  'Europe'
SELECT SUM(country.surfacearea) FROM country WHERE country.continent  =  'Asia' OR country.continent  =  'Europe'
SELECT SUM ( population ) FROM city WHERE district  =  "Gelderland"
SELECT SUM ( population ) FROM city WHERE district  =  'Gelderland'
SELECT avg(gnp) ,  sum(population) FROM country WHERE governmentform  =  'US Territory'
SELECT avg(gnp) ,  sum(population) FROM country WHERE governmentform  =  'US Territory'
SELECT count(DISTINCT language) FROM countrylanguage
SELECT COUNT (DISTINCT countrylanguage.language) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode
SELECT count(DISTINCT governmentform) FROM country WHERE continent  =  'Africa'
SELECT count(DISTINCT governmentform) FROM country WHERE continent  =  'Africa'
SELECT count(*) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.name  =  'Aruba'
SELECT count(*) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.name  =  'Aruba'
SELECT count(*) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.name  =  'Afghanistan' AND countrylanguage.isofficial  =  'T'
SELECT count(*) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.name  =  'Afghanistan' AND countrylanguage.isofficial  =  'T'
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode GROUP BY country.name ORDER BY count(*) DESC LIMIT 1
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode GROUP BY country.name ORDER BY count(*) DESC LIMIT 1
SELECT country.continent FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode GROUP BY country.continent ORDER BY count(DISTINCT countrylanguage.language) DESC LIMIT 1
SELECT country.continent ,  max(countrylanguage.percentage) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode GROUP BY country.continent
SELECT count(*) FROM countrylanguage WHERE language  =  'English' INTERSECT SELECT count(*) FROM countrylanguage WHERE language  =  'Dutch'
SELECT count(DISTINCT country.code) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'English' INTERSECT SELECT count(DISTINCT country.code) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'Dutch'
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'French'
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'French'
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'French'
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.isofficial  =  'T' AND countrylanguage.language  =  'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.isofficial  =  'T' AND countrylanguage.language  =  'French'
SELECT COUNT (DISTINCT country.continent) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'Chinese'
SELECT count(DISTINCT country.continent) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'Chinese'
SELECT country.region FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'English' OR countrylanguage.language  =  'Dutch'
SELECT country.region FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'Dutch' OR countrylanguage.language  =  'English'
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.isofficial  =  'T' AND countrylanguage.language  =  'English' OR countrylanguage.language  =  'Dutch'
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.isofficial  =  'T' AND countrylanguage.language  =  'English' OR countrylanguage.language  =  'Dutch'
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.continent  =  'Asia' GROUP BY countrylanguage.language ORDER BY sum(countrylanguage.percentage) DESC LIMIT 1
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.continent  =  'Asia' GROUP BY countrylanguage.language ORDER BY count(*) DESC LIMIT 1
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.governmentform LIKE '%Republic%' GROUP BY countrylanguage.language HAVING COUNT (DISTINCT country.code)  =  1
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.governmentform LIKE '%Republic%' GROUP BY countrylanguage.language HAVING COUNT (DISTINCT country.code)  =  1
SELECT city.name FROM city JOIN country ON city.countrycode  =  country.code JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'English' ORDER BY city.population DESC LIMIT 1
SELECT city.name FROM city JOIN country ON city.countrycode  =  country.code JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'English' ORDER BY city.population DESC LIMIT 1
SELECT name ,  population ,  lifeexpectancy FROM country WHERE continent  =  'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name ,  population ,  lifeexpectancy FROM country WHERE continent  =  'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT avg(country.lifeexpectancy) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial  =  'T'
SELECT avg(country.lifeexpectancy) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'English' AND countrylanguage.isofficial  =  'F'
SELECT sum(country.population) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language != 'English'
SELECT SUM ( country.population ) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language != 'English'
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.headofstate  =  'Beatrix' AND countrylanguage.isofficial  =  'T'
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.headofstate  =  'Beatrix' AND countrylanguage.isofficial  =  'T'
SELECT count(DISTINCT countrylanguage.language) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.indepyear  <  1930 AND countrylanguage.isofficial  =  'T'
SELECT COUNT (DISTINCT countrylanguage.language) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.indepyear  <  1930 AND countrylanguage.isofficial  =  'T'
SELECT name FROM country WHERE surfacearea  >  (SELECT MAX (surfacearea) FROM country WHERE region  =  'Europe')
SELECT name FROM country WHERE surfacearea  >  (SELECT MAX ( surfacearea ) FROM country WHERE continent  =  'Europe')
SELECT name FROM country WHERE continent  =  'Africa' AND population  <  (SELECT min(population) FROM country WHERE continent  =  'Asia')
SELECT name FROM country WHERE continent  =  'Africa' AND population  <  (SELECT MIN ( population ) FROM country WHERE region LIKE '%Asia%' );
SELECT name FROM country WHERE continent  =  'Asia' AND population  >  (SELECT MAX(country.population) FROM country WHERE country.continent = 'Africa')
SELECT name FROM country WHERE continent  =  'Asia' AND population  >  (SELECT MAX(population) FROM country WHERE continent = 'Africa')
SELECT countrycode FROM countrylanguage EXCEPT SELECT countrycode FROM countrylanguage WHERE language  =  'English'
SELECT countrycode FROM countrylanguage EXCEPT SELECT countrycode FROM countrylanguage WHERE language  =  'English'
SELECT countrycode FROM countrylanguage WHERE LANGUAGE != 'English'
SELECT countrycode FROM countrylanguage WHERE LANGUAGE != 'English'
SELECT country.code FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND country.governmentform != 'Republic'
SELECT code FROM country EXCEPT SELECT countrycode FROM countrylanguage WHERE language  =  'English' INTERSECT SELECT code FROM country WHERE governmentform LIKE '%Republic%'
SELECT city.name FROM city JOIN country ON city.countrycode  =  country.code WHERE country.continent  =  'Europe' EXCEPT SELECT city.name FROM city JOIN country ON city.countrycode  =  country.code JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'English' AND countrylanguage.isofficial  =  'T'
SELECT city.name FROM country JOIN city ON country.code  =  city.countrycode JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.continent  =  'Europe' AND countrylanguage.language  =  'English' AND countrylanguage.isofficial  =  'F'
SELECT DISTINCT city.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode JOIN city ON city.countrycode  =  country.code WHERE country.continent  =  'Asia' AND countrylanguage.language  =  'Chinese' AND countrylanguage.isofficial  =  'T'
SELECT DISTINCT city.name FROM city JOIN country ON city.countrycode  =  country.code JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.continent  =  'Asia' AND countrylanguage.language  =  'Chinese' AND countrylanguage.isofficial  =  'T'
SELECT name ,  indepyear ,  surfacearea FROM country ORDER BY population ASC LIMIT 1
SELECT name ,  indepyear ,  surfacearea FROM country WHERE population  =  ( SELECT MIN ( population ) FROM country );
SELECT population ,  name ,  headofstate FROM country ORDER BY surfacearea DESC LIMIT 1
SELECT name ,  population ,  headofstate FROM country ORDER BY surfacearea DESC LIMIT 1
SELECT country.name ,  count(*) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode GROUP BY country.name HAVING count(*)  >=  3
SELECT country.name ,  COUNT(countrylanguage.language) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode GROUP BY country.name HAVING COUNT(countrylanguage.language)  >  2
SELECT count(*) ,  district FROM city WHERE population  >  (SELECT AVG(population) FROM city) GROUP BY district
SELECT count(*) ,  district FROM city WHERE population  >  (SELECT avg(population) FROM city) GROUP BY district
SELECT governmentform ,  SUM(population) FROM country GROUP BY governmentform HAVING AVG(lifeexpectancy)  >  72
SELECT country.governmentform ,  SUM(country.population) FROM country WHERE country.lifeexpectancy  >  72 GROUP BY country.governmentform
SELECT continent ,  avg(lifeexpectancy) ,  SUM(population) FROM country WHERE lifeexpectancy  <  72 GROUP BY continent
SELECT continent ,  sum(population) ,  avg(lifeexpectancy) FROM country WHERE lifeexpectancy  <  72 GROUP BY continent
SELECT name ,  surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5
SELECT name ,  surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5;
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT count(*) FROM country WHERE continent  =  'Asia'
SELECT count(*) FROM country WHERE continent  =  'Asia'
SELECT name FROM country WHERE continent  =  'Europe' AND population  =  80000
SELECT name FROM country WHERE continent  =  'Europe' AND population  =  80000
SELECT SUM(country.population) ,  AVG(country.surfacearea) FROM country WHERE country.continent  =  'North America' AND country.surfacearea  >  3000
SELECT SUM(country.population) ,  AVG(country.surfacearea) FROM country WHERE region  =  'North America' AND surfacearea  >  3000
SELECT name FROM city WHERE population BETWEEN 160000 AND 900000
SELECT name FROM city WHERE population BETWEEN 160000 AND 900000
SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode  =  country.code GROUP BY countrylanguage.language ORDER BY count(*) DESC LIMIT 1
SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode  =  country.code GROUP BY countrylanguage.language ORDER BY count(*) DESC LIMIT 1
SELECT country.name ,  countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode ORDER BY countrylanguage.percentage DESC LIMIT 1
SELECT country.code ,  countrylanguage.language ,  max(countrylanguage.percentage) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode GROUP BY countrylanguage.countrycode
SELECT COUNT (DISTINCT country.code) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'Spanish' ORDER BY countrylanguage.percentage DESC LIMIT 1
SELECT count(DISTINCT countrycode) FROM countrylanguage WHERE language  =  'Spanish'
SELECT country.code FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  =  'Spanish' ORDER BY countrylanguage.percentage DESC LIMIT 1
SELECT countrycode FROM countrylanguage WHERE language  =  'Spanish' GROUP BY countrycode ORDER BY sum(percentage) DESC LIMIT 1
SELECT count(*) FROM conductor
SELECT count(*) FROM conductor
SELECT name FROM conductor ORDER BY age ASC
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor WHERE nationality != 'USA'
SELECT name FROM conductor WHERE nationality != 'USA'
SELECT record_company FROM orchestra ORDER BY year_of_founded DESC
SELECT record_company FROM orchestra ORDER BY year_of_founded DESC
SELECT avg(attendance) FROM show
SELECT avg(attendance) FROM show
SELECT max(share) ,  min(share) FROM performance WHERE TYPE != "Live final"
SELECT max(share) ,  min(share) FROM performance WHERE TYPE != "Live final"
SELECT count(DISTINCT nationality) FROM conductor
SELECT count(DISTINCT nationality) FROM conductor
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC LIMIT 1
SELECT name FROM conductor ORDER BY year_of_work DESC LIMIT 1
SELECT conductor.name ,  orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id  =  orchestra.conductor_id
SELECT conductor.name ,  orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id  =  orchestra.conductor_id
SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id  =  orchestra.conductor_id GROUP BY conductor.conductor_id HAVING count(*)  >  1
SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id  =  orchestra.conductor_id GROUP BY conductor.conductor_id HAVING COUNT ( orchestra.orchestra_id )  >  1
SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id  =  orchestra.conductor_id GROUP BY conductor.conductor_id ORDER BY count(*) DESC LIMIT 1
SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id  =  orchestra.conductor_id GROUP BY orchestra.conductor_id ORDER BY count(*) DESC LIMIT 1
SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id  =  orchestra.conductor_id WHERE orchestra.year_of_founded  >  2008
SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id  =  orchestra.conductor_id WHERE orchestra.year_of_founded  >  2008
SELECT record_company ,  count(*) FROM orchestra GROUP BY record_company
SELECT count(*) ,  record_company FROM orchestra GROUP BY record_company
SELECT major_record_format FROM orchestra GROUP BY major_record_format ORDER BY count(*) ASC
SELECT major_record_format FROM orchestra GROUP BY major_record_format ORDER BY count(*) DESC
SELECT record_company FROM orchestra GROUP BY record_company ORDER BY count(*) DESC LIMIT 1
SELECT record_company FROM orchestra GROUP BY record_company ORDER BY count(*) DESC LIMIT 1
SELECT orchestra FROM orchestra WHERE orchestra_id NOT IN (SELECT orchestra_id FROM performance)
SELECT orchestra FROM orchestra WHERE orchestra_id NOT IN (SELECT performance.orchestra_id FROM performance)
SELECT record_company FROM orchestra WHERE year_of_founded  <  2003 INTERSECT SELECT record_company FROM orchestra WHERE year_of_founded  >  2003
SELECT record_company FROM orchestra WHERE year_of_founded  <  2003 INTERSECT SELECT record_company FROM orchestra WHERE year_of_founded  >  2003
SELECT COUNT (DISTINCT orchestra_id) FROM orchestra WHERE major_record_format  =  "CD" OR major_record_format  =  "DVD"
SELECT count(*) FROM orchestra WHERE major_record_format LIKE '%CD%' OR major_record_format LIKE '%DVD%'
SELECT orchestra.year_of_founded FROM orchestra JOIN performance ON orchestra.orchestra_id  =  performance.orchestra_id GROUP BY performance.orchestra_id HAVING COUNT ( DISTINCT performance.orchestra_id )  >  1
SELECT orchestra.year_of_founded FROM orchestra JOIN performance ON orchestra.orchestra_id  =  performance.orchestra_id GROUP BY performance.orchestra_id HAVING COUNT(performance.performance_id)  >  1
SELECT count(*) FROM highschooler
SELECT count(*) FROM highschooler
SELECT name ,  grade FROM highschooler
SELECT name ,  grade FROM highschooler
SELECT DISTINCT grade FROM highschooler
SELECT grade FROM highschooler
SELECT grade FROM highschooler WHERE name  =  'Kyle'
SELECT grade FROM highschooler WHERE name  =  'Kyle'
SELECT name FROM highschooler WHERE grade  =  10
SELECT name FROM highschooler WHERE grade  =  10
SELECT id FROM highschooler WHERE name  =  'Kyle'
SELECT id FROM highschooler WHERE name  =  "Kyle"
SELECT count(*) FROM highschooler WHERE grade  =  9 OR grade  =  10
SELECT count(*) FROM highschooler WHERE grade  =  9 OR grade  =  10
SELECT count(*) ,  grade FROM highschooler GROUP BY grade
SELECT count(*) ,  grade FROM highschooler GROUP BY grade
SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT grade FROM highschooler GROUP BY grade HAVING count(*)  >=  4
SELECT grade FROM highschooler GROUP BY grade HAVING count(*)  >=  4
SELECT student_id ,  count(*) FROM friend GROUP BY student_id
SELECT count(*) FROM friend GROUP BY student_id
SELECT highschooler.name ,  count(*) FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id GROUP BY highschooler.id
SELECT highschooler.name ,  count(*) FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id GROUP BY highschooler.id
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id GROUP BY friend.student_id ORDER BY count(*) DESC LIMIT 1
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id GROUP BY friend.student_id ORDER BY count(*) DESC LIMIT 1
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id GROUP BY friend.student_id HAVING count(*)  >=  3
SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id  =  highschooler.id GROUP BY friend.student_id HAVING COUNT(friend.student_id)  >=  3
SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id  =  highschooler.id WHERE friend.student_id  =   (SELECT id FROM highschooler WHERE name  =  'Kyle')
SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id  =  highschooler.id WHERE friend.student_id  =  (SELECT id FROM highschooler WHERE name  =  'Kyle')
SELECT count(*) FROM friend JOIN highschooler ON friend.student_id  =  highschooler.id WHERE highschooler.name  =  'Kyle'
SELECT count(*) FROM friend WHERE student_id IN (SELECT id FROM highschooler WHERE name  =  'Kyle')
SELECT id FROM highschooler EXCEPT SELECT student_id FROM friend
SELECT id FROM highschooler EXCEPT SELECT student_id FROM friend
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)
SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id INTERSECT SELECT highschooler.id FROM highschooler JOIN likes ON highschooler.id  =  likes.student_id
SELECT student_id FROM friend INTERSECT SELECT liked_id FROM likes
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id INTERSECT SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id  =  likes.student_id
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id INTERSECT SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id  =  likes.liked_id
SELECT count(*) ,  student_id FROM likes GROUP BY student_id
SELECT count(*) ,  student_id FROM likes GROUP BY student_id
SELECT highschooler.name ,  count(*) FROM highschooler JOIN likes ON highschooler.id  =  likes.liked_id GROUP BY likes.liked_id
SELECT highschooler.name ,  count(*) FROM highschooler JOIN likes ON highschooler.id  =  likes.student_id GROUP BY likes.student_id
SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id  =  likes.student_id GROUP BY likes.student_id ORDER BY count(*) DESC LIMIT 1
SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id  =  likes.liked_id GROUP BY likes.liked_id ORDER BY count(*) DESC LIMIT 1
SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id  =  likes.student_id GROUP BY likes.student_id HAVING COUNT ( DISTINCT likes.liked_id )  >=  2
SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id  =  likes.student_id GROUP BY likes.student_id HAVING COUNT ( DISTINCT likes.liked_id )  >=  2
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id GROUP BY highschooler.id HAVING highschooler.grade  >  5 AND COUNT(friend.friend_id)  >=  2
SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id GROUP BY friend.student_id HAVING COUNT(friend.student_id)  >=  2 INTERSECT SELECT name FROM highschooler WHERE grade  >  5
SELECT count(*) FROM likes JOIN highschooler ON likes.liked_id  =  highschooler.id WHERE highschooler.name  =  "Kyle"
SELECT count(*) FROM likes JOIN highschooler ON likes.liked_id  =  highschooler.id WHERE highschooler.name  =  'Kyle'
SELECT avg(highschooler.grade) FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id
SELECT avg(highschooler.grade) FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id
SELECT min(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
SELECT min(highschooler.grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
SELECT state FROM owners INTERSECT SELECT state FROM professionals
SELECT state FROM owners INTERSECT SELECT state FROM professionals
SELECT avg(age) FROM dogs WHERE dog_id IN (SELECT treatments.dog_id FROM treatments)
SELECT avg(age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT professionals.professional_id ,  professionals.last_name ,  professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id WHERE professionals.state  =  'Indiana' OR COUNT(treatments.treatment_id)  >  2
SELECT professionals.professional_id ,  professionals.last_name ,  professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id GROUP BY professionals.professional_id HAVING count(*)  >  2 UNION SELECT professional_id ,  last_name ,  cell_number FROM professionals WHERE state  =  'Indiana'
SELECT dogs.name FROM dogs JOIN treatments ON dogs.dog_id  =  treatments.dog_id GROUP BY dogs.dog_id HAVING SUM(treatments.cost_of_treatment)  >  1000
SELECT dogs.name FROM dogs JOIN treatments ON dogs.dog_id  =  treatments.dog_id JOIN owners ON dogs.owner_id  =  owners.owner_id GROUP BY owners.owner_id HAVING SUM(treatments.cost_of_treatment)  <=  1000
SELECT first_name FROM professionals UNION SELECT first_name FROM owners EXCEPT SELECT name FROM dogs
SELECT first_name FROM professionals UNION SELECT first_name FROM owners EXCEPT SELECT name FROM dogs
SELECT professional_id ,  role_code ,  email_address FROM professionals EXCEPT SELECT professionals.professional_id ,  professionals.role_code ,  professionals.email_address FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id
SELECT professional_id ,  role_code ,  email_address FROM professionals EXCEPT SELECT professionals.professional_id ,  professionals.role_code ,  professionals.email_address FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id
SELECT owners.owner_id ,  owners.first_name ,  owners.last_name FROM dogs JOIN owners ON dogs.owner_id  =  owners.owner_id GROUP BY dogs.owner_id ORDER BY count(*) DESC LIMIT 1
SELECT owners.owner_id ,  owners.first_name ,  owners.last_name FROM dogs JOIN owners ON dogs.owner_id  =  owners.owner_id GROUP BY dogs.owner_id ORDER BY count(*) DESC LIMIT 1
SELECT professionals.professional_id ,  professionals.role_code ,  professionals.first_name FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id GROUP BY professionals.professional_id HAVING COUNT(treatments.professional_id)  >=  2
SELECT professionals.professional_id ,  professionals.role_code ,  professionals.first_name FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id GROUP BY treatments.professional_id HAVING COUNT(treatments.treatment_id)  >=  2
SELECT breeds.breed_name FROM breeds JOIN dogs ON breeds.breed_code  =  dogs.breed_code GROUP BY dogs.breed_code ORDER BY count(*) DESC LIMIT 1
SELECT breeds.breed_name FROM breeds JOIN dogs ON breeds.breed_code  =  dogs.breed_code GROUP BY dogs.breed_code ORDER BY count(*) DESC LIMIT 1
SELECT owners.owner_id ,  owners.last_name FROM owners JOIN dogs ON owners.owner_id  =  dogs.owner_id JOIN treatments ON dogs.dog_id  =  treatments.dog_id GROUP BY owners.owner_id ORDER BY count(*) DESC LIMIT 1
SELECT owners.owner_id ,  owners.last_name FROM owners JOIN dogs ON owners.owner_id  =  dogs.owner_id JOIN treatments ON dogs.dog_id  =  treatments.dog_id GROUP BY owners.owner_id ORDER BY sum(treatments.cost_of_treatment) DESC LIMIT 1
SELECT treatment_types.treatment_type_description FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code  =  treatments.treatment_type_code GROUP BY treatment_types.treatment_type_code ORDER BY sum(treatments.cost_of_treatment) ASC LIMIT 1
SELECT treatment_types.treatment_type_description FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code  =  treatments.treatment_type_code GROUP BY treatments.treatment_type_code ORDER BY sum(treatments.cost_of_treatment) ASC LIMIT 1
SELECT owners.owner_id ,  owners.zip_code FROM owners JOIN dogs ON owners.owner_id  =  dogs.owner_id JOIN charges ON dogs.dog_id  =  charges.dog_id GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id ,  owners.zip_code FROM owners JOIN dogs ON owners.owner_id  =  dogs.owner_id JOIN charges ON dogs.dog_id  =  charges.dog_id GROUP BY owners.owner_id ORDER BY sum(charges.charge_amount) DESC LIMIT 1
SELECT professionals.professional_id ,  professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id GROUP BY professionals.professional_id HAVING count(DISTINCT treatments.treatment_type_code)  >=  2
SELECT professionals.professional_id ,  professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id GROUP BY professionals.professional_id HAVING count(*)  >=  2
SELECT professionals.first_name ,  professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id WHERE treatments.cost_of_treatment  <  (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT professionals.first_name ,  professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id WHERE treatments.cost_of_treatment  <  (SELECT AVG(treatments.cost_of_treatment) FROM treatments)
SELECT treatments.date_of_treatment ,  professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id  =  professionals.professional_id
SELECT treatments.date_of_treatment ,  professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id  =  professionals.professional_id
SELECT treatments.cost_of_treatment ,  treatment_types.treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code  =  treatment_types.treatment_type_code
SELECT cost_of_treatment ,  treatment_type_description FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code  =  treatments.treatment_type_code
SELECT owners.first_name ,  owners.last_name ,  sizes.size_description FROM dogs JOIN owners ON dogs.owner_id  =  owners.owner_id JOIN sizes ON dogs.size_code  =  sizes.size_code
SELECT owners.first_name ,  owners.last_name ,  sizes.size_description FROM owners JOIN dogs ON owners.owner_id  =  dogs.owner_id JOIN sizes ON dogs.size_code  =  sizes.size_code
SELECT owners.first_name ,  dogs.name FROM owners JOIN dogs ON owners.owner_id  =  dogs.owner_id
SELECT owners.first_name ,  dogs.name FROM dogs JOIN owners ON dogs.owner_id  =  owners.owner_id
SELECT dogs.name ,  treatments.date_of_treatment FROM dogs JOIN treatments ON dogs.dog_id  =  treatments.dog_id WHERE dogs.breed_code  =  (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY count(*) DESC LIMIT 1)
SELECT dogs.name ,  treatments.date_of_treatment FROM dogs JOIN treatments ON dogs.dog_id  =  treatments.dog_id GROUP BY dogs.name ORDER BY count(*) DESC LIMIT 1
SELECT owners.first_name ,  dogs.name FROM dogs JOIN owners ON dogs.owner_id  =  owners.owner_id WHERE owners.state  =  'Virginia'
SELECT owners.first_name ,  dogs.name FROM dogs JOIN owners ON dogs.owner_id  =  owners.owner_id WHERE owners.state  =  'Virginia'
SELECT dogs.date_arrived ,  dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id  =  treatments.dog_id
SELECT dogs.date_arrived ,  dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id  =  treatments.dog_id
SELECT owners.last_name FROM dogs JOIN owners ON dogs.owner_id  =  owners.owner_id ORDER BY dogs.date_of_birth ASC LIMIT 1
SELECT owners.last_name FROM dogs JOIN owners ON dogs.owner_id  =  owners.owner_id ORDER BY dogs.age ASC LIMIT 1
SELECT email_address FROM professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
SELECT email_address FROM professionals WHERE state  =  "Hawaii" OR state  =  "Wisconsin"
SELECT date_arrived ,  date_departed FROM dogs
SELECT date_arrived ,  date_departed FROM dogs
SELECT count(DISTINCT dog_id) FROM treatments
SELECT count(DISTINCT dog_id) FROM treatments
SELECT count(DISTINCT professional_id) FROM treatments
SELECT count(DISTINCT professional_id) FROM treatments
SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
SELECT first_name ,  last_name ,  email_address FROM owners WHERE state LIKE '%North%'
SELECT first_name ,  last_name ,  email_address FROM owners WHERE state LIKE '%North%'
SELECT count(*) FROM dogs WHERE age  <  (SELECT avg(age) FROM dogs)
SELECT count(*) FROM dogs WHERE age  <  (SELECT avg(age) FROM dogs)
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments)
SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT treatments.dog_id FROM treatments)
SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs)
SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn  =  0)
SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)
SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)
SELECT name ,  age ,  weight FROM dogs WHERE abandoned_yn  =  1
SELECT name ,  age ,  weight FROM dogs WHERE abandoned_yn  =  1
SELECT avg(age) FROM dogs
SELECT avg(age) FROM dogs
SELECT age FROM dogs ORDER BY age DESC LIMIT 1
SELECT age FROM dogs ORDER BY age DESC LIMIT 1
SELECT charge_type ,  charge_amount FROM charges
SELECT charge_type ,  charge_amount FROM charges
SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1
SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1
SELECT email_address ,  cell_number ,  home_phone FROM professionals
SELECT email_address ,  cell_number ,  home_phone FROM professionals
SELECT breed_name ,  size_description FROM breeds CROSS JOIN sizes
SELECT DISTINCT breeds.breed_name ,  sizes.size_description FROM breeds JOIN dogs ON breeds.breed_code  =  dogs.breed_code JOIN sizes ON dogs.size_code  =  sizes.size_code
SELECT professionals.first_name ,  treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code  =  treatment_types.treatment_type_code
SELECT professionals.first_name ,  treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id  =  treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code  =  treatment_types.treatment_type_code
SELECT count(*) FROM singer
SELECT count(*) FROM singer
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT birth_year ,  citizenship FROM singer
SELECT birth_year ,  citizenship FROM singer
SELECT name FROM singer WHERE citizenship != "France"
SELECT name FROM singer WHERE citizenship != 'France'
SELECT name FROM singer WHERE birth_year  =  1948 OR birth_year  =  1949
SELECT name FROM singer WHERE birth_year  =  1948 OR birth_year  =  1949
SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1
SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1
SELECT citizenship ,  count(*) FROM singer GROUP BY citizenship
SELECT count(*) ,  citizenship FROM singer GROUP BY citizenship
SELECT citizenship FROM singer GROUP BY citizenship ORDER BY count(*) DESC LIMIT 1
SELECT citizenship FROM singer GROUP BY citizenship ORDER BY count(*) DESC LIMIT 1
SELECT citizenship ,  max(net_worth_millions) FROM singer GROUP BY citizenship
SELECT citizenship ,  max(net_worth_millions) FROM singer GROUP BY citizenship
SELECT song.title ,  singer.name FROM singer JOIN song ON singer.singer_id  =  song.singer_id
SELECT song.title ,  singer.name FROM singer JOIN song ON singer.singer_id  =  song.singer_id
SELECT DISTINCT singer.name FROM singer JOIN song ON singer.singer_id  =  song.singer_id WHERE song.sales  >  300000
SELECT DISTINCT singer.name FROM singer JOIN song ON singer.singer_id  =  song.singer_id WHERE song.sales  >  300000
SELECT singer.name FROM singer JOIN song ON singer.singer_id  =  song.singer_id GROUP BY song.singer_id HAVING count(*)  >  1
SELECT singer.name FROM singer JOIN song ON singer.singer_id  =  song.singer_id GROUP BY singer.singer_id HAVING count(*)  >  1
SELECT singer.name ,  sum(song.sales) FROM singer JOIN song ON singer.singer_id  =  song.singer_id GROUP BY singer.singer_id
SELECT singer.name ,  sum(song.sales) FROM singer JOIN song ON singer.singer_id  =  song.singer_id GROUP BY singer.name
SELECT name FROM singer EXCEPT SELECT singer.name FROM singer JOIN song ON singer.singer_id  =  song.singer_id
SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
SELECT citizenship FROM singer WHERE birth_year  <  1945 INTERSECT SELECT citizenship FROM singer WHERE birth_year  >  1955
SELECT citizenship FROM singer WHERE birth_year  <  1945 INTERSECT SELECT citizenship FROM singer WHERE birth_year  >  1955
SELECT count(*) FROM other_available_features
SELECT ref_feature_types.feature_type_name FROM other_available_features JOIN ref_feature_types ON other_available_features.feature_type_code  =  ref_feature_types.feature_type_code WHERE other_available_features.feature_name  =  'AirCon'
SELECT ref_property_types.property_type_description FROM ref_property_types JOIN properties ON ref_property_types.property_type_code  =  properties.property_type_code
SELECT property_name FROM properties WHERE property_type_code  =  "House" OR property_type_code  =  "Apartment" AND room_count  >  1
