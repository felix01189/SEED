{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm WHERE `County Name` = 'Alameda'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT `School Name`, `Percent (%) Eligible Free (Ages 5-17)` FROM frpm WHERE `School Type` = 'Continuation' ORDER BY `Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT Zip FROM schools WHERE Charter = 1 AND DOC = 'Fresno County Office of Education'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet FROM schools WHERE CDSCode = ( SELECT CDSCode FROM frpm ORDER BY `FRPM Count (K-12)` DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE Charter = 1 AND FundingType = 'Directly funded' AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.Virtual = 'Yes'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT satscores.sname FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr > 500 AND schools.Magnet = 1\t----- bird -----\tcalifornia_schools",
    "7": "SELECT Phone FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY NumGE1500 DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT T2.NumTstTakr FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(schools.CDSCode) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath > 560 AND schools.FundingType = 'Directly funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM frpm WHERE `Enrollment (K-12)` > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(T1.`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 / T2.NumTstTakr > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.NumGE1500/T2.NumTstTakr DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT NCESSchool, `School Name`, `Enrollment (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY `Enrollment (Ages 5-17)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT `District`, AVG(`AvgScrRead`) as AverageReadingScore FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE `StatusType` = 'Active' GROUP BY `District` ORDER BY AverageReadingScore DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(schools.CDSCode) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Alameda' AND satscores.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT s.CharterNum, avg(satscores.AvgScrWrite) as AvgWritingScore FROM schools s INNER JOIN satscores ON s.CDSCode = satscores.cds WHERE satscores.AvgScrWrite > 499 GROUP BY s.CharterNum ORDER BY AvgWritingScore DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(schools.CDSCode) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Fresno' AND schools.FundingType = 'Directly funded' AND satscores.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(schools.CDSCode) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Los Angeles' AND frpm.`Free Meal Count (K-12)` > 500 AND frpm.`FRPM Count (K-12)` < 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT `School Name` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`County Name` = 'Contra Costa' ORDER BY T2.NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "23": "SELECT T1.`School Name`, T1.Street FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE ABS(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT T1.`School Name` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T2.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.School, s.FundingType FROM satscores AS sat INNER JOIN schools AS s ON sat.cds = s.CDSCode WHERE s.County = 'Riverside' AND sat.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "26": "SELECT T1.`School Name`, T1.`Street`, T1.`City`, T1.`State`, T1.`Zip` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`FRPM Count (Ages 5-17)` > 800 AND T2.County = 'Monterey' AND T2.`School Type` = 'High School'\t----- bird -----\tcalifornia_schools",
    "27": "SELECT T1.School, T2.AvgScrWrite, T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.OpenDate > '1991-12-31' OR (T1.ClosedDate IS NOT NULL AND T1.ClosedDate < '2000-01-01')\t----- bird -----\tcalifornia_schools",
    "28": "SELECT S.School, S.DOCTYPE FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE (F.`Enrollment (K-12)` - F.`Enrollment (Ages 5-17)`) > (SELECT AVG(F1.`Enrollment (K-12)` - F1.`Enrollment (Ages 5-17)`) FROM frpm AS F1 INNER JOIN schools AS S1 ON F1.CDSCode = S1.CDSCode WHERE S1.FundingType = 'Local') AND S.FundingType = 'Local'\t----- bird -----\tcalifornia_schools",
    "29": "SELECT OpenDate FROM schools WHERE GSoffered = '1-12' ORDER BY Enrollment DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "30": "SELECT City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T2.`Enrollment (K-12)` ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `School Name`, `Percent (%) Eligible Free (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 9, 2\t----- bird -----\tcalifornia_schools",
    "32": "SELECT `School Name`, `FRPM Count (K-12)`, `Percent (%) Eligible FRPM (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.ownership_code = 66 ORDER BY `FRPM Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT `School Name`, Website FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE `Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT `Percent (%) Eligible Free (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE AdmFName1 = 'Kacey' AND AdmLName1 = 'Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT AdmEmail1 FROM schools WHERE Charter = 1 ORDER BY (SELECT enroll12 FROM satscores WHERE cds = schools.CDSCode) ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT AdmFName1, AdmLName1, AdmFName2, AdmLName2, AdmFName3, AdmLName3 FROM schools WHERE CDSCode = ( SELECT cds FROM satscores WHERE NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores ) )\t----- bird -----\tcalifornia_schools",
    "37": "SELECT Street, City, Zip, State FROM schools WHERE CDSCode = ( SELECT cds FROM satscores ORDER BY (AvgScrRead + AvgScrMath + AvgScrWrite) / 3 ASC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T3.Website FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode INNER JOIN schools AS T3 ON T1.cds = T3.CDSCode WHERE T2.`County Name` = 'Los Angeles' AND T1.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(satscores.NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.District = 'Fresno Unified' ORDER BY T2.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.Virtual = 'Yes' ORDER BY ss.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT EILName FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY AvgScrMath DESC LIMIT 1);\t----- bird -----\tcalifornia_schools",
    "43": "SELECT T1.AvgScrMath, T2.County FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE (T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite) / 3 = ( SELECT MIN((AvgScrRead + AvgScrMath + AvgScrWrite) / 3) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "44": "SELECT T1.City, AVG(T2.AvgScrWrite) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores ) GROUP BY T1.City\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T1.School, AVG(T2.AvgScrWrite) AS Average_Writing_Score FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Ricci' AND T1.AdmLName1 = 'Ulrich' GROUP BY T1.School;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT `School`, `State`, SUM(`Enrollment (K-12)`) as Total_Enrollment FROM frpm WHERE `School Type` = 'State Special School' GROUP BY `School`, `State` ORDER BY Total_Enrollment DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*)/12 AS 'Average Monthly Opened Schools' FROM schools WHERE County = 'Alameda' AND DOCType = 'Elementary School District' AND YEAR(OpenDate) = 1980\t----- bird -----\tcalifornia_schools",
    "48": "SELECT (SELECT COUNT(*) FROM schools WHERE DOCType = 'Unified School District' AND County = 'Orange') / (SELECT COUNT(*) FROM schools WHERE DOCType = 'Elementary School District' AND County = 'Orange') AS Ratio\t----- bird -----\tcalifornia_schools",
    "49": "SELECT County, School, ClosedDate FROM schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.School, s.Street FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds ORDER BY ss.AvgScrMath DESC LIMIT 6, 1\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T1.MailStreet, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead LIMIT 1\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE ss.NumGE1500 >= 1500 AND s.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT `School`, `MailZip` FROM schools WHERE `AdmFName1` = 'Avetik' AND `AdmLName1` = 'Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'Colusa') / (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'Humboldt') AS Ratio FROM schools WHERE MailState = 'CA' AND (County = 'Colusa' OR County = 'Humboldt')\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'California' AND City = 'San Joaquin' AND StatusType = 'Active'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT Phone, Ext FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332)\t----- bird -----\tcalifornia_schools",
    "58": "SELECT School, Phone, Ext FROM schools WHERE Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT T1.Website FROM schools AS T1 WHERE T1.AdmFName1 = 'Mike' AND T1.AdmLName1 = 'Larson' OR T1.AdmFName2 = 'Dante' AND T1.AdmLName2 = 'Alvarez' OR T1.AdmFName3 = 'Dante' AND T1.AdmLName3 = 'Alvarez'\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Charter = 1 AND Virtual = 'Partial' AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE City = 'Hickman' AND Charter = 1 AND DOCType = 'Elementary School District'\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(DISTINCT T1.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND T1.`Percent (%) Eligible Free (K-12)` < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT T1.School, T1.City, T1.AdmFName1, T1.AdmLName1, T1.AdmFName2, T1.AdmLName2, T1.AdmFName3, T1.AdmLName3 FROM schools AS T1 WHERE T1.Charter = 1 AND T1.CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (SELECT COUNT(*) FROM schools WHERE `County` = 'Santa Clara' AND `FundingType` = 'Locally Funded') / (SELECT COUNT(*) FROM schools WHERE `County` = 'Santa Clara' AND `Charter` = 1) * 100 AS `Percentage`\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(CDSCode) FROM schools WHERE County = 'Stanislaus' AND FundingType = 'Directly Funded' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(DISTINCT District) FROM schools WHERE ClosedDate LIKE '1989%' AND City = 'San Francisco' AND DOCType = 'Community College District'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(*) as NumberOfSchoolClosures FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND DOC = 'CEA' GROUP BY County ORDER BY NumberOfSchoolClosures DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESSchool FROM schools WHERE SOC = 'State Special Schools'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(DISTINCT District) FROM schools WHERE County = 'Alpine' AND DOCType = 'District Community Day School' AND (StatusType = 'Active' OR StatusType = 'Closed')\t----- bird -----\tcalifornia_schools",
    "71": "SELECT `District Code` FROM frpm WHERE `School Name` NOT IN (SELECT School FROM schools WHERE Magnet = 1) AND `City` = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "72": "SELECT `Enrollment (Ages 5-17)` FROM frpm WHERE `School Name` = 'State Special School' AND `County Name` = 'Fremont' AND `Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT `FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.School = 'Youth Authority School' AND T2.MailStreet = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT `Low Grade` FROM frpm WHERE `District Type` = 'District Special Education Consortia' AND `District Code` = 0613360\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.`School Name`, T1.`Educational Option Type` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Breakfast Provision 2' AND T1.`County Code` = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T3.City FROM frpm AS T1 INNER JOIN schools AS T3 ON T1.CDSCode = T3.CDSCode WHERE T1.`NSLP Provision Status` = 2 AND T1.`Low Grade` = 9 AND T1.`High Grade` = 12 AND T1.`County Name` = 'Merced' AND T1.`School Type` = 'High School'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT s.School, f.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.County = 'Los Angeles' AND s.GSserved = 'K-9'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(GSserved) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT `County`, COUNT(`School`) AS `Number of Schools` FROM schools WHERE `Virtual` = 'Yes' AND (`County` = 'San Diego' OR `County` = 'Santa Barbara') GROUP BY `County` ORDER BY `Number of Schools` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T1.`School Type`, T1.`School Name`, T2.Latitude FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Latitude = ( SELECT MAX(Latitude) FROM schools )\t----- bird -----\tcalifornia_schools",
    "81": "SELECT `School`, `City`, `Low Grade` FROM schools WHERE `State` = 'California' ORDER BY `Latitude` ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools ORDER BY Longitude DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "83": "SELECT City, COUNT(DISTINCT School) AS NumberOfSchools FROM schools WHERE Magnet = 1 AND GSoffered = 'K-8' AND EdOpsName = 'Multiple Provision Types' GROUP BY City\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, District, COUNT(*) as count FROM schools GROUP BY AdmFName1, District ORDER BY count DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT T1.`District Code`, T1.`Percent (%) Eligible Free (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "86": "SELECT AdmLName1, District, County, School FROM schools WHERE CharterNum = '40'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (DOCType = 'Intermediate/Middle Schools (Public)' OR DOCType = 'Unified School Districts')\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T1.School, T1.AdmEmail1 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T3.issued > (SELECT MAX(T5.date) FROM trans AS T5 WHERE T5.account_id = T1.account_id) AND T4.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT CASE WHEN AVG(CASE WHEN STRFTIME('%Y', date) = '1995' THEN A13 ELSE 0 END) > AVG(CASE WHEN STRFTIME('%Y', date) = '1996' THEN A13 ELSE 0 END) THEN '1995' ELSE '1996' END AS Year FROM district\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT T1.district_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'Female' AND T3.amount BETWEEN 6000 AND 10000 AND T3.type = 'Credit'\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.client_id = T3.client_id INNER JOIN account AS T4 ON T3.account_id = T4.account_id INNER JOIN trans AS T5 ON T4.account_id = T5.account_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T5.k_symbol = 'salary' GROUP BY T1.client_id HAVING AVG(T5.amount) > 8000\t----- bird -----\tfinancial",
    "94": "SELECT T1.account_id, MIN(T3.A13) - MAX(T3.A13) AS salary_gap FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T2.gender = 'F' GROUP BY T1.account_id ORDER BY T2.birth_date DESC, AVG(T3.A13) ASC LIMIT 1\t----- bird -----\tfinancial",
    "95": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN trans AS T4 ON T1.account_id = T4.account_id WHERE T4.k_symbol = 'POJISTNE' GROUP BY T1.account_id, T3.birth_date HAVING AVG(T4.amount) = ( SELECT MAX(AVG(T4.amount)) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN trans AS T4 ON T1.account_id = T4.account_id WHERE T4.k_symbol = 'POJISTNE' GROUP BY T1.account_id ) ORDER BY T3.birth_date DESC LIMIT 1\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'weekly' AND T2.type = 'Owner'\t----- bird -----\tfinancial",
    "97": "SELECT T2.client_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T1.type = 'Disponent'\t----- bird -----\tfinancial",
    "98": "SELECT T1.account_id, T1.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T1.date) = '1997' AND T2.frequency = 'weekly' ORDER BY T1.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id, T1.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND STRFTIME('%Y', T2.date) = '1993' ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT client.client_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date < '1950-01-01' AND district.A3 = 'Sokolov'\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM account WHERE date = (SELECT MIN(date) FROM account WHERE STRFTIME('%Y', date) = '1995')\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.amount > 3000\t----- bird -----\tfinancial",
    "103": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT account.date FROM trans INNER JOIN account ON trans.account_id = account.account_id WHERE trans.amount = 840 AND trans.date = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T1.amount) FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued = '1996-10-21'\t----- bird -----\tfinancial",
    "107": "SELECT T3.gender FROM client AS T3 INNER JOIN disp AS T2 ON T3.client_id = T2.client_id INNER JOIN account AS T1 ON T2.account_id = T1.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id ORDER BY T3.birth_date ASC, T4.A13 DESC LIMIT 1\t----- bird -----\tfinancial",
    "108": "SELECT T4.amount FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN trans AS T4 ON T1.account_id = T4.account_id WHERE T1.amount = ( SELECT MAX(amount) FROM loan ) AND T4.date > ( SELECT date FROM account WHERE account_id = T1.account_id ) ORDER BY T4.date ASC LIMIT 1\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T4.A3 = 'Jesenik'\t----- bird -----\tfinancial",
    "110": "SELECT T2.disp_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND STRFTIME('%Y-%m-%d', T1.date) = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Litomerice' AND DATE_PART('year', account.date) = 1996\t----- bird -----\tfinancial",
    "112": "SELECT T4.A3 FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'Female' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT T1.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.amount = 98832 AND T3.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.A3 = 'Prague' ORDER BY T1.date ASC LIMIT 1\t----- bird -----\tfinancial",
    "115": "SELECT (SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'M' AND T2.account_id IN (SELECT account_id FROM account WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A8 DESC LIMIT 1))) / (SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.account_id IN (SELECT account_id FROM account WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A8 DESC LIMIT 1))) AS male_percentage\t----- bird -----\tfinancial",
    "116": "SELECT (CAST((SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date ASC LIMIT 1) AND date = '1998-12-27') AS REAL) - CAST((SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date ASC LIMIT 1) AND date = '1993-03-22') AS REAL)) * 100 / CAST((SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date ASC LIMIT 1) AND date = '1993-03-22') AS REAL)\t----- bird -----\tfinancial",
    "117": "SELECT (CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) / SUM(amount)) * 100 AS percentage FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT CAST(SUM(CASE WHEN T2.status = 'Running' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM loan AS T1 INNER JOIN account_status AS T2 ON T1.account_id = T2.account_id WHERE T1.amount < 100000\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T4.A3 AS district_name, T4.A2 AS district_region FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE STRFTIME('%Y', T1.date) = '1993' AND T1.date > T2.date\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency, T3.client_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'east Bohemia' AND STRFTIME('%Y', T1.date) BETWEEN '1995' AND '2000'\t----- bird -----\tfinancial",
    "121": "SELECT account.account_id, account.date FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT T2.A2 AS District, T2.A3 AS Region FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.loan_id = 4990\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T2.A2 AS district, T2.A3 AS region FROM loan AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT T1.loan_id, T3.A3 AS district, T3.A11 AS average_salary FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT T4.A3 AS district, T4.A2 AS state, ((T4.A13 - T4.A12) / T4.A12) * 100 AS unemployment_rate_increment FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.district_id = T3.district_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.status = 'Running' AND T2.balance < 0\t----- bird -----\tfinancial",
    "126": "SELECT CAST(COUNT(CASE WHEN T2.A3 = 'Decin' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'monthly'\t----- bird -----\tfinancial",
    "128": "SELECT T1.A2 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.client_id = T3.client_id WHERE T2.gender = 'female' AND T3.type = 'OWNER' GROUP BY T1.A2 ORDER BY COUNT(T3.account_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "129": "SELECT DISTINCT district.A2 AS district_name, trans.amount AS withdrawal_amount FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.type = 'withdrawal' AND trans.k_symbol != 'credit card' AND strftime('%Y-%m', trans.date) = '1996-01' ORDER BY trans.amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id LEFT JOIN disp AS T3 ON T1.account_id = T3.account_id LEFT JOIN card AS T4 ON T3.disp_id = T4.disp_id WHERE T2.A3 = 'South Bohemia' AND T4.card_id IS NULL\t----- bird -----\tfinancial",
    "131": "SELECT T1.A2 FROM district AS T1 INNER JOIN loan AS T2 ON T1.district_id = T2.account_id WHERE T2.status = 'Active' ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'Male'\t----- bird -----\tfinancial",
    "133": "SELECT T1.A2, T1.A3 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T2.date) = '1996' ORDER BY T1.A13 DESC LIMIT 1\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM Crime WHERE YEAR(date) = 1996 GROUP BY district_id ORDER BY COUNT(*) DESC LIMIT 1)\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(account_id) FROM account WHERE account_id IN (SELECT account_id FROM trans WHERE operation = 'credit card withdrawal' AND balance < 0) AND frequency = 'monthly'\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(DISTINCT loan.loan_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.amount >= 250000 AND account.frequency = 'monthly' AND loan.date BETWEEN '1995-01-01' AND '1997-12-31' AND loan.status = 'approved'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account_id) FROM loan WHERE status = 'Running' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Branch location 1'))\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id = ( SELECT T3.district_id FROM crime AS T3 WHERE YEAR(T3.date) = 1995 GROUP BY T3.district_id ORDER BY COUNT(*) DESC LIMIT 1 OFFSET 1 ) AND T1.gender = 'M'\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(card_id) FROM card WHERE type = 'high-level' AND disp_id IN (SELECT disp_id FROM disp WHERE type = 'OWNER')\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'Pisek')\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 10000 AND STRFTIME('%Y', T1.date) = '1997'\t----- bird -----\tfinancial",
    "142": "SELECT T1.account_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.k_symbol = 'household' AND T3.A3 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'gold'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(T2.amount) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T1.account_id = T3.disp_id WHERE T2.type = 'credit' AND STRFTIME('%Y', T2.date) = '2021' AND STRFTIME('%m', T2.date) = '01'\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT T1.client_id FROM disp AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T1.disp_id = T3.disp_id WHERE T2.amount < (SELECT AVG(amount) FROM trans WHERE STRFTIME('%Y', date) = '1998') AND STRFTIME('%Y', T2.date) = '1998'\t----- bird -----\tfinancial",
    "146": "SELECT T1.client_id, T1.gender FROM client AS T1 INNER JOIN disp AS T2 ON T2.client_id = T1.client_id INNER JOIN card AS T3 ON T3.disp_id = T2.disp_id INNER JOIN loan AS T4 ON T4.account_id = T2.account_id WHERE T1.gender = 'F' AND T3.type = 'credit'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T3.gender = 'Female' AND T4.A3 = 'South Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT account.account_id FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Tabor' AND account.account_id IN (SELECT loan.account_id FROM loan)\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT T1.type FROM account AS T1 LEFT JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.account_id IS NULL AND T3.A11 > 8000 AND T3.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT a.account_id) FROM account a INNER JOIN district d ON a.district_id = d.district_id INNER JOIN trans t ON a.account_id = t.account_id WHERE d.A3 = 'North Bohemia' AND t.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.operation = 'withdrawal'\t----- bird -----\tfinancial",
    "152": "SELECT AVG(T1.crime_count) FROM ( SELECT COUNT(*) as crime_count, T2.district_id FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_id = T2.district_id WHERE T1.year = 1995 GROUP BY T2.district_id HAVING COUNT(*) > 4000 ) AS T1 INNER JOIN Account AS T3 ON T1.district_id = T3.district_id WHERE YEAR(T3.date) >= 1997\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(DISTINCT card.card_id) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE card.type = 'classic'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM card WHERE type = 'Gold')) AS percentage FROM card WHERE type = 'Gold' AND STRFTIME('%Y', issued) < '1998'\t----- bird -----\tfinancial",
    "156": "SELECT T3.gender, T3.birth_date FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T2.type = 'OWNER' ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "157": "SELECT COUNT(T1.trans_id) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.date BETWEEN '1995-01-01' AND '1995-12-31' AND T2.account_id = 532\t----- bird -----\tfinancial",
    "158": "SELECT account.district_id FROM account INNER JOIN `order` ON account.account_id = `order`.account_id WHERE `order`.order_id = 33333\t----- bird -----\tfinancial",
    "159": "SELECT T1.trans_id, T1.amount, T1.date FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 3356 AND T1.operation = 'Withdrawal in Cash'\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'weekly' AND T2.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT T2.type FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T1.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT A3 FROM district WHERE district_id = (SELECT district_id FROM client WHERE client_id = 3541)\t----- bird -----\tfinancial",
    "163": "SELECT T2.A2 FROM loan AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T1.status = 'Finished' GROUP BY T2.A2 ORDER BY COUNT(T1.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT T1.client_id FROM disp AS T1 INNER JOIN `order` AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 32423\t----- bird -----\tfinancial",
    "165": "SELECT * FROM trans WHERE account_id IN (SELECT account_id FROM account WHERE district_id = 5)\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'Jesenik')\t----- bird -----\tfinancial",
    "167": "SELECT client_id FROM disp WHERE disp_id IN (SELECT disp_id FROM card WHERE type = 'junior' AND STRFTIME('%Y', issued) > '1996')\t----- bird -----\tfinancial",
    "168": "SELECT (SELECT COUNT(*) FROM client WHERE gender = 'F' AND district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) / (SELECT COUNT(*) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) * 100 AS percentage\t----- bird -----\tfinancial",
    "169": "SELECT ((SELECT SUM(T2.amount) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = (SELECT client_id FROM disp WHERE account_id = T2.account_id) WHERE T1.gender = 'M' AND YEAR(T2.date) = 1997) - (SELECT SUM(T2.amount) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = (SELECT client_id FROM disp WHERE account_id = T2.account_id) WHERE T1.gender = 'M' AND YEAR(T2.date) = 1996)) * 100 / (SELECT SUM(T2.amount) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = (SELECT client_id FROM disp WHERE account_id = T2.account_id) WHERE T1.gender = 'M' AND YEAR(T2.date) = 1996)\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE type = 'Withdrawal' AND operation = 'Credit Card' AND date > '1995-12-31'\t----- bird -----\tfinancial",
    "171": "SELECT (SUM(CASE WHEN T1.A3 = 'east Bohemia' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.A3 = 'north Bohemia' THEN 1 ELSE 0 END)) AS difference FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.date LIKE '1996%' AND T3.k_symbol = 'crime'\t----- bird -----\tfinancial",
    "172": "SELECT type, COUNT(*) FROM disp WHERE account_id BETWEEN 1 AND 10 GROUP BY type\t----- bird -----\tfinancial",
    "173": "SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.amount = 3539\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.account_id = 130\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND EXISTS (SELECT 1 FROM trans AS T3 WHERE T3.account_id = T1.account_id AND T3.k_symbol = 'STATEMENT')\t----- bird -----\tfinancial",
    "176": "SELECT T1.client_id, T2.amount AS debt, T3.status AS payment_status FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.client_id = 992\t----- bird -----\tfinancial",
    "177": "SELECT T1.balance, T3.gender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.trans_id = 851 AND T3.client_id = 4\t----- bird -----\tfinancial",
    "178": "SELECT T2.type FROM client AS T1 INNER JOIN disp AS T3 ON T1.client_id = T3.client_id INNER JOIN card AS T2 ON T3.disp_id = T2.disp_id WHERE T1.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(t.amount) FROM trans t INNER JOIN disp d ON t.account_id = d.account_id WHERE d.client_id = '617' AND YEAR(t.date) = 1998\t----- bird -----\tfinancial",
    "180": "SELECT client.client_id, client.birth_date, district.A3 FROM client INNER JOIN district ON client.district_id = district.district_id INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id WHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T4.k_symbol = 'Payment for household' AND T4.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Beroun' AND STRFTIME('%Y', account.date) > '1996'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'Female' AND T3.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT (COUNT(T1.client_id)* 1.0 / (SELECT COUNT(*) FROM client)) AS proportion FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague' AND T1.gender = 'F'\t----- bird -----\tfinancial",
    "186": "SELECT (SELECT COUNT(*) FROM client WHERE gender = 'Male' AND client_id IN (SELECT disp_id FROM disp WHERE type = 'OWNER' AND account_id IN (SELECT account_id FROM account WHERE frequency = 'WEEKLY'))) / (SELECT COUNT(*) FROM client WHERE gender = 'Male') * 100 AS percentage\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'weekly' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id, T1.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND T2.date < '1997-01-01' ORDER BY T1.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "189": "SELECT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'F' ORDER BY client.birth_date ASC, (SELECT AVG(trans.amount) FROM trans WHERE trans.account_id = account.account_id AND trans.type = 'credit') ASC LIMIT 1\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date LIKE '1920-%' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 24 AND T2.frequency = 'weekly' AND T1.status = 'pre-payment'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'Running' AND T2.type = 'Issuance'\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T1.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.type IN ('POPLATEK PO OBRATU', 'UVER')\t----- bird -----\tfinancial",
    "194": "SELECT client.client_id, (YEAR(CURRENT_DATE) - YEAR(client.birth_date)) as age FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE card.type = 'high level' AND loan.status = 'eligible'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'Chlorine' AND T2.carcinogenic = 'FALSE'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(COUNT(T1.atom_id)) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'Oxygen' AND T3.bond_type = 'single' GROUP BY T1.molecule_id\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(T1.count) FROM (SELECT COUNT(*) as count FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'carcinogenic' AND T2.bond_type = 'single' GROUP BY T1.molecule_id) AS T1\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'sodium' AND T2.carcinogenic = 'FALSE'\t----- bird -----\ttoxicology",
    "200": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id WHERE T2.bond_type = 'triple' AND T1.carcinogenic = 'TRUE'\t----- bird -----\ttoxicology",
    "201": "SELECT (CAST((SUM(CASE WHEN T1.element = 'Carbon' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.atom_id)) AS Carbon_Percentage FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'double'\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(bond_id) FROM bond WHERE bond_type = 'triple'\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'bromine'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(molecule_id) FROM molecule WHERE label = 'carcinogenic' AND CAST(molecule_id AS INTEGER) <= 100\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'Carbon'\t----- bird -----\ttoxicology",
    "206": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT A.element FROM atom AS A INNER JOIN connected AS C ON A.atom_id = C.atom_id OR A.atom_id = C.atom_id2 INNER JOIN bond AS B ON C.bond_id = B.bond_id WHERE B.bond_type = 'double'\t----- bird -----\ttoxicology",
    "208": "SELECT `label` FROM `molecule` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `atom` WHERE `element` = 'Hydrogen') GROUP BY `label` ORDER BY COUNT(`label`) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.element = 'Chlorine'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = 'single'\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = 'non-carcinogenic'\t----- bird -----\ttoxicology",
    "212": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.carcinogenic = 'No' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT label FROM molecule WHERE molecule_id NOT IN (SELECT molecule_id FROM atom WHERE element = 'tin')\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(*) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element IN ('iodine', 'sulfur') AND T3.bond_type = 'single'\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = 'triple'\t----- bird -----\ttoxicology",
    "217": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT (CAST(SUM(CASE WHEN T1.element != 'Fluorine' THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.molecule_id)) * 100 AS Percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'Carcinogenic'\t----- bird -----\ttoxicology",
    "219": "SELECT CAST(SUM(CASE WHEN T1.label = 'carcinogenic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = 'triple'\t----- bird -----\ttoxicology",
    "220": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR000' ORDER BY T1.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE T2.molecule_id = 'TR001' AND T3.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = 'carcinogenic') - (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label != 'carcinogenic') AS difference\t----- bird -----\ttoxicology",
    "223": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 WHERE T1.bond_id = 'TR000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT T2.bond_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = 'double' GROUP BY T1.label ORDER BY T1.label ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT CAST(SUM(IIF(T2.bond_type = 'double', 1, 0)) AS REAL) * 100 / COUNT(T2.bond_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT CAST(SUM(CASE WHEN label = 'carcinogenic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT CAST(SUM(CASE WHEN T1.element = 'Hydrogen' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT T2.bond_type FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T3.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T2.bond_type, T3.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN carcinogenic AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.molecule_id = 'TR010' GROUP BY T2.bond_type ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id INNER JOIN atom AS T4 ON T3.atom_id = T4.atom_id INNER JOIN atom AS T5 ON T3.atom_id2 = T5.atom_id WHERE T2.bond_type = 'single' AND T1.carcinogenic = 'FALSE' GROUP BY T1.label ORDER BY T1.label ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT T2.bond_type FROM bond AS T2 INNER JOIN molecule AS T1 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' ORDER BY T2.bond_type ASC LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(bond_id) FROM connected WHERE (atom_id = '12' OR atom_id2 = '12') AND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009')\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'carcinogenic' AND T2.element = 'bromine'\t----- bird -----\ttoxicology",
    "236": "SELECT T2.bond_type, T1.atom_id, T3.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T1.label, T1.carcinogenic FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = 'triple'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = '19' OR atom_id2 = '19'\t----- bird -----\ttoxicology",
    "240": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(molecule_id) FROM molecule WHERE label != 'carcinogenic'\t----- bird -----\ttoxicology",
    "242": "SELECT T3.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.atom_id BETWEEN 21 AND 25 AND T3.carcinogenic = 'Yes'\t----- bird -----\ttoxicology",
    "243": "SELECT T3.bond_id, T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id WHERE (T1.element = 'Phosphorus' AND T4.element = 'Nitrogen') OR (T1.element = 'Nitrogen' AND T4.element = 'Phosphorus')\t----- bird -----\ttoxicology",
    "244": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = 'double' GROUP BY T1.molecule_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "245": "SELECT CAST(COUNT(T3.bond_id) AS REAL) / COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'iodine'\t----- bird -----\ttoxicology",
    "246": "SELECT T2.bond_type, T2.bond_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = '45'\t----- bird -----\ttoxicology",
    "247": "SELECT T1.element FROM atom AS T1 LEFT JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id IS NULL\t----- bird -----\ttoxicology",
    "248": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'triple' AND T1.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "249": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.carcinogenic = 'Yes' AND T2.bond_type = 'double' GROUP BY T1.label ORDER BY COUNT(T2.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'carcinogenic' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT T2.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.atom_id IN (SELECT atom_id FROM atom WHERE element = 'Lead')\t----- bird -----\ttoxicology",
    "253": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'triple'\t----- bird -----\ttoxicology",
    "254": "SELECT (SELECT COUNT(*) FROM bond WHERE bond_id IN (SELECT bond_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element IN (SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) DESC LIMIT 1)) AND atom_id2 IN (SELECT atom_id FROM atom WHERE element IN (SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) DESC LIMIT 1)))) / (SELECT COUNT(*) FROM bond) * 100 AS percentage\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(SUM(CASE WHEN T1.bond_type = 'single' AND T2.label = 'carcinogenic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "256": "SELECT SUM(CASE WHEN T1.element IN ('Carbon', 'Hydrogen') THEN 1 ELSE 0 END) FROM atom AS T1\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'sulfur')\t----- bird -----\ttoxicology",
    "258": "SELECT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'Tin'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT a.element) FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T3.bond_type = 'triple' AND (T1.element = 'phosphorus' OR T1.element = 'bromine')\t----- bird -----\ttoxicology",
    "261": "SELECT T2.bond_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'carcinogenic'\t----- bird -----\ttoxicology",
    "262": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = 'single' AND T1.label != 'carcinogenic'\t----- bird -----\ttoxicology",
    "263": "SELECT (CAST((SELECT COUNT(*) FROM atom WHERE element = 'Chlorine' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'Single')) AS REAL) / CAST((SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'Single')) AS REAL)) * 100 AS 'Chlorine Composition (%)' FROM atom LIMIT 1\t----- bird -----\ttoxicology",
    "264": "SELECT T1.label FROM molecule AS T1 WHERE T1.molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = 'Non Carcinogenic'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.label = 'carcinogenic' AND T1.molecule_id BETWEEN 'TR000' AND 'TR030'\t----- bird -----\ttoxicology",
    "267": "SELECT T2.bond_type FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'iodine'\t----- bird -----\ttoxicology",
    "270": "SELECT T3.label, COUNT(T3.label) AS Count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN carcinogenicity AS T3 ON T2.label = T3.label WHERE T1.element = 'Calcium' GROUP BY T3.label ORDER BY Count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "271": "SELECT CASE WHEN COUNT(DISTINCT T1.element) = 2 THEN 'Yes' ELSE 'No' END AS Result FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_1_8' AND T1.element IN ('chlorine', 'carbon')\t----- bird -----\ttoxicology",
    "272": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.bond_type = 'triple' AND T3.element = 'carbon' AND T1.label != 'carcinogenic' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT CAST(SUM(CASE WHEN T1.element = 'Chlorine' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'Carcinogenic'\t----- bird -----\ttoxicology",
    "274": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT T2.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = 'double'\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE T3.bond_type = 'triple'\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = 'single' AND T2.label != 'carcinogenic'\t----- bird -----\ttoxicology",
    "279": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T1.bond_id, T2.label AS 'Carcinogenic' FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = 'triple'\t----- bird -----\ttoxicology",
    "281": "SELECT molecule.label, atom.element FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id INNER JOIN ( SELECT molecule_id, MIN(atom_id) AS atom_id FROM ( SELECT molecule_id, atom_id FROM atom WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'carcinogenic' ) ORDER BY atom_id ) GROUP BY molecule_id HAVING COUNT(atom_id) >= 4 ) AS fourth_atom ON molecule.molecule_id = fourth_atom.molecule_id AND atom.atom_id = fourth_atom.atom_id WHERE atom.element = 'toxicology'\t----- bird -----\ttoxicology",
    "282": "SELECT (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006' AND element = 'Hydrogen') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio, label FROM molecule WHERE molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT T1.label, CASE WHEN T1.label LIKE '%carcinogenic%' THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Calcium'\t----- bird -----\ttoxicology",
    "284": "SELECT bond.bond_type FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'Carbon' GROUP BY bond.bond_type\t----- bird -----\ttoxicology",
    "285": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT (SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'triple') / (SELECT COUNT(DISTINCT molecule_id) FROM molecule) * 100 AS percentage FROM bond WHERE bond_type = 'triple'\t----- bird -----\ttoxicology",
    "287": "SELECT CAST(SUM(CASE WHEN T2.bond_type = 'double' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) AS \"percentage\" FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1' AND T2.carcinogenic = 'Yes'\t----- bird -----\ttoxicology",
    "289": "SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR151' AND `carcinogenic` = 'Yes'\t----- bird -----\ttoxicology",
    "290": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR151' AND T1.element = 'Toxic'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 WHERE T1.label = 'carcinogenic'\t----- bird -----\ttoxicology",
    "292": "SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'Carbon' AND T2.molecule_id BETWEEN 'TR010' AND 'TR050'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic compounds')\t----- bird -----\ttoxicology",
    "294": "SELECT T2.bond_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'carcinogenic' AND T2.bond_type = 'double'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic compound') AND element = 'hydrogen'\t----- bird -----\ttoxicology",
    "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_id = 'TR000_1_2' AND T3.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 LEFT JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'carbon' AND T2.label != 'carcinogenic'\t----- bird -----\ttoxicology",
    "298": "SELECT CAST(SUM(CASE WHEN T1.element = 'Hydrogen' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'Carcinogenic'\t----- bird -----\ttoxicology",
    "299": "SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR124' AND `label` = 'carcinogenic'\t----- bird -----\ttoxicology",
    "300": "SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19'\t----- bird -----\ttoxicology",
    "302": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(b.bond_id) AS DoubleBonds, m.carcinogenic FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE m.label = 'TR006' AND b.bond_type = 'double'\t----- bird -----\ttoxicology",
    "304": "SELECT T1.label, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'carcinogenic'\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_type, T2.atom_id, T3.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN connected AS T3 ON T1.bond_id = T3.bond_id WHERE T1.bond_type = 'single'\t----- bird -----\ttoxicology",
    "306": "SELECT molecule.label, GROUP_CONCAT(DISTINCT atom.element) AS elements FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON (connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id) WHERE bond.bond_type = 'triple' GROUP BY molecule.molecule_id, molecule.label\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT T2.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'chlorine'\t----- bird -----\ttoxicology",
    "309": "SELECT atom.atom_id, COUNT(DISTINCT bond.bond_type) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id LEFT JOIN connected ON atom.atom_id = connected.atom_id LEFT JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.label = 'TR346' GROUP BY atom.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) AS Total_Molecules, SUM(CASE WHEN T2.label = 'Carcinogenic compound' THEN 1 ELSE 0 END) AS Carcinogenic_Compounds FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = 'double'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id LEFT JOIN connected AS T3 ON T2.atom_id = T3.atom_id LEFT JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T2.element != 'sulphur' AND T4.bond_type != 'double'\t----- bird -----\ttoxicology",
    "312": "SELECT T3.label FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = 'single'\t----- bird -----\ttoxicology",
    "315": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.carcinogenic = 'TRUE'\t----- bird -----\ttoxicology",
    "316": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'C' AND T1.label NOT LIKE '%carcinogenic%'\t----- bird -----\ttoxicology",
    "317": "SELECT CAST(SUM(CASE WHEN T2.element = 'Chlorine' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'carcinogenic'\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT a.element) FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR001_3_4'\t----- bird -----\ttoxicology",
    "320": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR000_1' AND T2.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT T3.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.atom_id = 'TR000_2' AND T2.atom_id2 = 'TR000_4'\t----- bird -----\ttoxicology",
    "322": "SELECT `element` FROM `atom` WHERE `atom_id` = 'TR000_1'\t----- bird -----\ttoxicology",
    "323": "SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT CAST(SUM(CASE WHEN bond_type = 'single' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(atom_id) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'carcinogenic' AND T2.element = 'Nitrogen'\t----- bird -----\ttoxicology",
    "326": "SELECT T3.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id INNER JOIN bond AS T4 ON T2.bond_id = T4.bond_id WHERE T1.element = 'Sulphur' AND T4.bond_type = 'double'\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id, T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.carcinogenic = 'FALSE' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT a.element FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double' AND a.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.carcinogenic = 'Yes' GROUP BY T1.molecule_id ORDER BY COUNT(T2.atom_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT CAST(SUM(CASE WHEN T1.label = 'carcinogenic' AND T2.bond_type = 'triple' AND T3.element = 'Hidrogen' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T1.molecule_id = T3.molecule_id INNER JOIN connected AS T4 ON T3.atom_id = T4.atom_id AND T2.bond_id = T4.bond_id\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = 'carcinogenic'\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'single' AND molecule_id BETWEEN 'TR004' AND 'TR010'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(a.atom_id) FROM atom AS a INNER JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR008' AND a.element = 'Carbon'\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.carcinogenic = 'FALSE'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT molecule_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = 'double' AND T3.element = 'oxygen'\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = 'triple' AND T1.label != 'carcinogenic'\t----- bird -----\ttoxicology",
    "337": "SELECT a.element, b.bond_type FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR002'\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.molecule_id = 'TR012' AND T1.element = 'Carbon' AND T3.bond_type = 'double'\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'carcinogenic' AND T1.element = 'oxygen'\t----- bird -----\ttoxicology",
    "340": "SELECT name FROM cards WHERE hasFoil = 1 AND power = 'Incredible'\t----- bird -----\tcard_games",
    "341": "SELECT cards.name FROM cards WHERE cards.isFullArt = 1 AND cards.hasFoil = 0\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost > convertedManaCost\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100\t----- bird -----\tcard_games",
    "344": "SELECT cards.name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'mythic' AND legalities.format = 'gladiator' AND legalities.status = 'banned'\t----- bird -----\tcard_games",
    "345": "SELECT T1.name, T3.status FROM cards AS T1 INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T1.types LIKE '%Artifact%' AND T1.otherFaceIds IS NULL AND T3.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT cards.id, cards.artist FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.power IS NULL AND legalities.format = 'Commander' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T1.name, T1.text, T2.text AS ruling_text, CASE WHEN T1.artist IS NULL OR T1.asciiName IS NULL OR T1.availability IS NULL OR T1.borderColor IS NULL OR T1.cardKingdomFoilId IS NULL OR T1.cardKingdomId IS NULL OR T1.colorIdentity IS NULL OR T1.colorIndicator IS NULL OR T1.colors IS NULL OR T1.convertedManaCost IS NULL OR T1.duelDeck IS NULL OR T1.edhrecRank IS NULL OR T1.faceConvertedManaCost IS NULL OR T1.faceName IS NULL OR T1.flavorName IS NULL OR T1.flavorText IS NULL OR T1.frameEffects IS NULL OR T1.frameVersion IS NULL OR T1.hand IS NULL OR T1.keywords IS NULL OR T1.layout IS NULL OR T1.leadershipSkills IS NULL OR T1.life IS NULL OR T1.loyalty IS NULL OR T\t----- bird -----\tcard_games",
    "348": "SELECT T2.date, T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, COUNT(r.id) AS ruling_count, c.isPromo FROM cards c LEFT JOIN rulings r ON c.uuid = r.uuid GROUP BY c.uuid ORDER BY ruling_count DESC LIMIT 1\t----- bird -----\tcard_games",
    "350": "SELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Annul' AND T2.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "353": "SELECT T1.setCode, T1.translation, COUNT(T2.id) AS TotalCards FROM set_translations AS T1 INNER JOIN cards AS T2 ON T1.setCode = T2.setCode WHERE T1.language = 'Italian' GROUP BY T1.setCode, T1.translation\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(id) FROM cards WHERE power = 'Infinity'\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor's Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor\\'s Chosen'\t----- bird -----\tcard_games",
    "360": "SELECT T3.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'restricted' AND T1.text IS NOT NULL\t----- bird -----\tcard_games",
    "362": "SELECT r.text FROM rulings AS r INNER JOIN cards AS c ON r.uuid = c.uuid WHERE c.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE l.status = 'restricted' AND c.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "366": "SELECT r.text FROM rulings r INNER JOIN cards c ON r.uuid = c.uuid WHERE c.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "367": "SELECT artist FROM cards WHERE language = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT (CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage FROM cards\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isFullArt = 1 AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND uuid IN (SELECT uuid FROM foreign_data WHERE language = 'French')) / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) * 100 AS percentage\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(id) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(id) FROM cards WHERE borderColor = 'Black' AND isOnlineOnly = 1\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT cards.layout FROM cards WHERE cards.keywords LIKE '%flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "378": "SELECT T1.id FROM cards AS T1 INNER JOIN cards AS T2 ON T1.name = T2.name WHERE T1.isFoil = 1 AND T2.isFoil = 0 AND T1.power > T2.power\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT cards.artist FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.isOnlineOnly = 0 AND foreign_data.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND uuid IN (SELECT uuid FROM legalities WHERE status = 'banned')\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T3.format = 'Legacy'\t----- bird -----\tcard_games",
    "385": "SELECT text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(c.id) AS 'Number of Cards', l.status AS 'Legality Status' FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = 'future'\t----- bird -----\tcard_games",
    "387": "SELECT cards.name, cards.colors FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.code = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT T1.name, T4.language, T4.translation FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T4 ON T2.code = T4.setCode WHERE T2.code = '10E' AND T1.convertedManaCost = 5\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT T1.name, T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Artifact' AND T1.borderColor = 'Black'\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 1 AND power IS NULL\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND power IS NOT NULL\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND mtgoId IS NOT NULL AND hand = '-1'\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability LIKE '%paper%' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT name, manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT T.type FROM cards AS T WHERE T.mtgArenaId IS NOT NULL\t----- bird -----\tcard_games",
    "400": "SELECT T1.setCode FROM set_translations AS T1 WHERE T1.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT (SELECT COUNT(*) FROM cards WHERE frameEffects LIKE '%legendary%' AND isOnlineOnly = 1) / (SELECT COUNT(*) FROM cards WHERE frameEffects LIKE '%legendary%') * 100 AS percentage FROM cards LIMIT 1\t----- bird -----\tcard_games",
    "402": "SELECT id, (COUNT(*) OVER() * 100.0 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1)) AS percentage FROM cards WHERE isStorySpotlight = 1 AND isTextless = 1\t----- bird -----\tcard_games",
    "403": "SELECT T1.name, CAST(SUM(CASE WHEN T2.language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid GROUP BY T1.name\t----- bird -----\tcard_games",
    "404": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.totalSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Brazilian Portuguese' AND T2.block = 'Commander'\t----- bird -----\tcard_games",
    "406": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.type LIKE '%Creature%' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "407": "SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German'\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(id) FROM cards WHERE power IS NULL AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'pre-modern' AND T3.text = 'This is a triggered mana ability.' AND T1.otherFaceIds IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.artist = 'Erica Yang' AND legalities.format = 'pauper' AND cards.availability LIKE '%paper%'\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE text = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Creature' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.artist = 'Matthew D. Wilson' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards AS c JOIN rulings AS r ON c.uuid = r.uuid WHERE c.rarity = 'print' AND r.date = '2007-01-02'\t----- bird -----\tcard_games",
    "414": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT (SELECT COUNT(*) FROM cards WHERE hasContentWarning = 0 AND uuid IN (SELECT uuid FROM legalities WHERE format = 'commander' AND status = 'legal')) / (SELECT COUNT(*) FROM cards WHERE uuid IN (SELECT uuid FROM legalities WHERE format = 'commander' AND status = 'legal')) * 100 AS percentage\t----- bird -----\tcard_games",
    "416": "SELECT (CAST((SELECT COUNT(*) FROM cards AS c INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE fd.language = 'French' AND c.power IS NULL) AS REAL) / CAST((SELECT COUNT(*) FROM cards WHERE power IS NULL) AS REAL)) * 100 AS percentage_of_cards_without_power_in_french\t----- bird -----\tcard_games",
    "417": "SELECT (CAST((SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese' AND T2.type = 'expansion') AS REAL) / (SELECT COUNT(*) FROM set_translations WHERE language = 'Japanese')) * 100 AS percentage FROM set_translations LIMIT 1\t----- bird -----\tcard_games",
    "418": "SELECT T1.printings FROM cards AS T1 WHERE T1.artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor IS NULL AND edhrecRank > 12000 AND colors IS NOT NULL\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE power = 'unknown' AND promoTypes LIKE '%Arena League%' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId, cardKingdomId FROM cards ORDER BY cardKingdomFoilId ASC LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM cards) AS proportion FROM cards WHERE layout != 'normal' OR text IS NULL\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE isAlternative = 0 AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE isOnlineOnly = 0 ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Archenemy' AND T1.code = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T1.language, T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT T1.id, T1.code FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.block = 'Shadowmoor' ORDER BY T1.code ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.isForeignOnly = 0 AND T1.isFoilOnly = 1 AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "432": "SELECT T2.translation, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isOnlineOnly = 0\t----- bird -----\tcard_games",
    "435": "SELECT id FROM cards WHERE borderColor = 'Black'\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'Black' AND isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT T1.language FROM set_translations AS T1 WHERE T1.setCode = '174'\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL'\t----- bird -----\tcard_games",
    "440": "SELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT setCode FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, cards.type FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT T2.language, T2.flavorText, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (CAST(SUM(IIF(cards.convertedManaCost = 10, 1, 0)) AS REAL) * 100 / COUNT(cards.id)) AS percentage FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Abyssal Horror'\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'expansion' OR type = 'commander'\t----- bird -----\tcard_games",
    "448": "SELECT T2.name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T2.language, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND power = 'Incredibly Powerful'\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand > 0\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE text IS NOT NULL\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor's Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power IS NULL\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND faceName IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT T1.types FROM cards AS T1 WHERE T1.name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes LIKE '%bundle%'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND printings LIKE '%arena%' AND printings LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE promoTypes LIKE '%Battra, Dark Destroyer%'\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T3.translation FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T3.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE setCode = (SELECT setCode FROM cards WHERE name = 'Angel of Mercy')\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT T1.name, T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Korean'\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize FROM sets WHERE name = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Eighth Edition' AND T1.language = 'Simplified Chinese'\t----- bird -----\tcard_games",
    "469": "SELECT T1.isOnlineOnly FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "470": "SELECT T2.releaseDate FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Ancestor\\'s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT type FROM sets WHERE name = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.block = 'Ice Age' AND T1.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT isForeignOnly FROM sets WHERE code IN (SELECT setCode FROM cards WHERE name = 'Adarkar Valkyrie')\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 100\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(id) FROM cards WHERE setCode = 'Coldsnap' AND borderColor = 'Black'\t----- bird -----\tcard_games",
    "476": "SELECT name FROM cards WHERE setCode = 'Coldsnap' ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "478": "SELECT name FROM cards WHERE number = '4' AND setCode = 'Coldsnap'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND setCode = 'CSP' AND power IS NULL\t----- bird -----\tcard_games",
    "480": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor's Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "481": "SELECT foreign_data.language FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Ancestor\\'s Chosen' AND foreign_data.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T1.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'German' AND T2.name = 'Ancestor's Chosen'\t----- bird -----\tcard_games",
    "483": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code INNER JOIN set_translations AS T4 ON T3.code = T4.setCode WHERE T4.language = 'Italian' AND T3.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "484": "SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid INNER JOIN sets ON cards.setCode = sets.code WHERE sets.code = 'Coldsnap' AND foreign_data.language = 'Italian' ORDER BY cards.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "485": "SELECT rulings.date FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = 'CSP')) AS percentage FROM cards WHERE convertedManaCost = 7 AND setCode = 'CSP';\t----- bird -----\tcard_games",
    "487": "SELECT (SELECT COUNT(*) FROM cards WHERE power = 'Incredibly Powerful' AND setCode = 'Coldsnap') * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap') AS percentage FROM cards WHERE setCode = 'Coldsnap' LIMIT 1\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = 'From the Vault: Lore'\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT cards.name, rulings.text, cards.isAlternative, cards.isFullArt, cards.isOnlineOnly, cards.isOversized, cards.isPromo, cards.isReprint, cards.isReserved, cards.isStarter, cards.isStorySpotlight, cards.isTextless, cards.isTimeshifted FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT type FROM sets WHERE name = 'Huiti\u00e8me \u00e9dition'\t----- bird -----\tcard_games",
    "498": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(*) FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Tenth Edition')\t----- bird -----\tcard_games",
    "500": "SELECT T3.translation FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Fellwar Stone' AND T3.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Journey into Nyx Hero\\'s Path' ORDER BY cards.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "502": "SELECT releaseDate FROM sets WHERE name = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT T2.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(id) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'World Championship Decks 2004') AND convertedManaCost = 3\t----- bird -----\tcard_games",
    "505": "SELECT translation FROM set_translations WHERE setCode = 'Mirrodin' AND language = 'Simplified Chinese'\t----- bird -----\tcard_games",
    "506": "SELECT (SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isNonFoilOnly = 1) / (SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese') * 100 AS percentage\t----- bird -----\tcard_games",
    "507": "SELECT (SELECT COUNT(*) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Brazilian Portuguese' AND T1.isOnlineOnly = 1) / (SELECT COUNT(*) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Brazilian Portuguese') AS Percentage\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT printings FROM cards WHERE text IS NULL AND artist = 'Aleksi Briclot'\t----- bird -----\tcard_games",
    "509": "SELECT setCode FROM sets ORDER BY baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE hasAlternativeDeckLimit = 0 ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE hasFoil = 1 ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(id) FROM cards WHERE power IS NULL AND hasFoil = 0 AND duelDeck = 'A'\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "514": "SELECT name, convertedManaCost FROM cards WHERE duelDeck IS NOT NULL ORDER BY convertedManaCost DESC LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT T1.originalReleaseDate, T2.format, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' ORDER BY T1.originalReleaseDate ASC LIMIT 1\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Ba\u00c7\u00b5a' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Abundance' AND T1.type LIKE '%Enchantment%' AND T1.rarity = 'rare' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "518": "SELECT T1.format, T2.name FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' GROUP BY T1.format ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games",
    "519": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Battlebond')\t----- bird -----\tcard_games",
    "520": "SELECT T1.artist, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = (SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(id) ASC LIMIT 1)\t----- bird -----\tcard_games",
    "521": "SELECT T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.frameVersion = '1997' AND T2.artist = 'D. Alexander Gregory' AND T1.format = 'legacy' AND (T2.hasContentWarning = 1 OR T2.watermark = 'Wizards of the Coast')\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "523": "SELECT AVG(T1.totalSetSize) AS 'Average Number of Sets', T2.language AS 'Common Language' FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T2.language\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'Black' AND availability LIKE '%arena%'\t----- bird -----\tcard_games",
    "525": "SELECT uuid FROM legalities WHERE format = 'Old School' AND (status = 'Restricted' OR status = 'Banned')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND isOnlineOnly = 0\t----- bird -----\tcard_games",
    "527": "SELECT T2.text, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Kev Walker' ORDER BY T2.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT cards.name, legalities.format FROM cards INNER JOIN sets ON cards.setCode = sets.code INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE sets.name = 'Hour of Devastation'\t----- bird -----\tcard_games",
    "529": "SELECT T1.name FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode AND T2.language = 'Japanese' LEFT JOIN set_translations AS T3 ON T1.code = T3.setCode AND T3.language = 'Korean' WHERE T2.translation IS NULL AND T3.translation IS NOT NULL\t----- bird -----\tcard_games",
    "530": "SELECT T1.frameVersion, T1.name, T2.status FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE YEAR(CreationDate) = 2011\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(Id) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(Id) FROM users WHERE UpVotes > 100 AND DownVotes > 1\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND STRFTIME('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "542": "SELECT COUNT(*) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T3.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(T1.AnswerCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Body IS NOT NULL AND T1.Title IS NOT NULL AND T1.Tags IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score > 19\t----- bird -----\tcodebase_community",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId ORDER BY T2.Count DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "552": "SELECT b.Name FROM badges b INNER JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND YEAR(T1.Date) = 2011\t----- bird -----\tcodebase_community",
    "554": "SELECT DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.DisplayName ORDER BY COUNT(T2.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(T2.Count) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Views > 200\t----- bird -----\tcodebase_community",
    "557": "SELECT CAST(SUM(CASE WHEN T1.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Age) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Score > 5\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND DATE(CreationDate) = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT T1.Title FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount = 1910\t----- bird -----\tcodebase_community",
    "563": "SELECT FavoriteCount FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 3025 AND T2.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "564": "SELECT Text FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE ParentId = 107829) LIMIT 1\t----- bird -----\tcodebase_community",
    "565": "SELECT T1.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "566": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 65041\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "568": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) / (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS Ratio FROM dual\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT T.Text FROM comments AS T WHERE T.Score = 17\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'SilentGhost')\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "582": "SELECT T1.Title FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T3.DisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score), T3.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id WHERE T2.DisplayName = 'Yevgeny' GROUP BY T3.WebsiteUrl\t----- bird -----\tcodebase_community",
    "584": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.UserId = posts.LastEditorUserId WHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(BountyAmount) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT users.DisplayName FROM users INNER JOIN votes ON users.Id = votes.UserId INNER JOIN posts ON votes.PostId = posts.Id WHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT AVG(T1.ViewCount), T1.Title, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN tags AS T3 ON T1.Id = T3.ExcerptPostId WHERE T3.TagName = 'humor' GROUP BY T1.Id, T1.Title, T2.Text\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13\t----- bird -----\tcodebase_community",
    "589": "SELECT UserId FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "590": "SELECT UserId FROM users ORDER BY Views ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Supporter' AND YEAR(Date) = 2011\t----- bird -----\tcodebase_community",
    "592": "SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(Id) > 5\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location LIKE '%New York%' AND badges.Name IN ('Teacher', 'Supporter')\t----- bird -----\tcodebase_community",
    "594": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT T1.UserId, T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN postHistory AS T3 ON T2.Id = T3.PostId GROUP BY T3.PostId HAVING COUNT(T3.Id) = 1 AND T2.ViewCount >= 1000\t----- bird -----\tcodebase_community",
    "596": "SELECT T1.UserId, T1.Name FROM badges AS T1 INNER JOIN comments AS T2 ON T1.UserId = T2.UserId GROUP BY T1.UserId ORDER BY COUNT(T2.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location LIKE '%India%' AND T1.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT (CAST((SELECT COUNT(*) FROM badges WHERE strftime('%Y', Date) = '2011') AS REAL) - CAST((SELECT COUNT(*) FROM badges WHERE strftime('%Y', Date) = '2010') AS REAL)) / CAST((SELECT COUNT(*) FROM badges WHERE strftime('%Y', Date) = '2010') AS REAL) * 100 AS percentage_difference\t----- bird -----\tcodebase_community",
    "599": "SELECT T1.PostHistoryTypeId, COUNT(DISTINCT T2.UserId) FROM postHistory AS T1 LEFT JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.PostId = 3720\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.PostId, T1.RelatedPostId, T2.ViewCount AS Popularity FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT T1.Id, T1.OwnerUserId FROM posts AS T1 WHERE T1.Score > 60\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND YEAR(CreaionDate) = 2011\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(UpVotes), AVG(Age) FROM users WHERE Id IN (SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING COUNT(Id) > 10)\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "606": "SELECT T1.Name FROM badges AS T1 WHERE T1.Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 0\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community",
    "610": "SELECT b.Name FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT T1.Reputation FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT badges.Date FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (CAST(COUNT(DISTINCT T1.UserId) AS REAL) / COUNT(DISTINCT T2.Id)) * 100 AS per FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "615": "SELECT (CAST(COUNT(CASE WHEN users.Age BETWEEN 13 AND 19 THEN 1 END) AS REAL) / COUNT(badges.UserId)) * 100 AS percentage FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "616": "SELECT T2.Score FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CreaionDate = '2010-07-19 19:19:56'\t----- bird -----\tcodebase_community",
    "617": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:37:33'\t----- bird -----\tcodebase_community",
    "618": "SELECT U.Age FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE U.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age >= 18\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(T2.Views) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "621": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Reputation = ( SELECT MIN(Reputation) FROM users )\t----- bird -----\tcodebase_community",
    "622": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM badges WHERE Name = 'Supporter' AND UserId IN (SELECT Id FROM users WHERE Age > 65);\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(Id) FROM users WHERE Location LIKE '%New York%'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(Id) FROM votes WHERE STRFTIME('%Y', CreationDate) = '2010'\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age >= 18\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName, Views FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "629": "SELECT (CAST((SELECT COUNT(*) FROM votes WHERE STRFTIME('%Y', CreationDate) = '2010') AS REAL) / (SELECT COUNT(*) FROM votes WHERE STRFTIME('%Y', CreationDate) = '2011')) AS Ratio FROM votes LIMIT 1\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT T2.TagName FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id WHERE T3.DisplayName = 'John Salvatier'\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo'\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT T2.Title FROM posts AS T2 INNER JOIN users AS T1 ON T2.OwnerUserId = T1.Id WHERE T1.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY T2.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(T2.PostId) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN votes AS T3 ON T2.Id = T3.PostId WHERE T1.DisplayName = 'Matt Parker' GROUP BY T2.Id HAVING COUNT(T3.Id) > 4\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T3.DisplayName = 'Neil McGuigan' AND T1.Score < 0\t----- bird -----\tcodebase_community",
    "637": "SELECT T3.TagName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId LEFT JOIN comments AS T4 ON T2.Id = T4.PostId WHERE T1.DisplayName = 'Mark Meckes' AND T4.Id IS NULL\t----- bird -----\tcodebase_community",
    "638": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(SUM(CASE WHEN T2.Tags LIKE '%<r>%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "640": "SELECT (SELECT SUM(ViewCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Mornington')) - (SELECT SUM(ViewCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Amos')) AS difference\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND strftime('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(Id) FROM posts WHERE strftime('%Y-%m-%d', CreaionDate) = '2010-07-21'\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 0\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T3.DisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T2.Score > 0\t----- bird -----\tcodebase_community",
    "647": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE STRFTIME('%Y', T1.Date) = '2011' AND T2.Location = 'North Pole'\t----- bird -----\tcodebase_community",
    "648": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(T1.Id) AS PostHistoryCount, MAX(T1.CreationDate) AS LastEditDate FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'What is the best introductory Bayesian statistics textbook?'\t----- bird -----\tcodebase_community",
    "650": "SELECT T2.LastAccessDate, T2.Location FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'How to tell if something happened in a data set which monitors a value over time')\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.PostId, T2.Name FROM posts AS T1 INNER JOIN badges AS T2 ON T1.OwnerUserId = T2.UserId INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T3.DisplayName = 'Samuel' AND YEAR(T2.Date) = 2013\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts ORDER BY ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId WHERE T3.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?')\t----- bird -----\tcodebase_community",
    "656": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score = ( SELECT MAX(Score) FROM posts WHERE ParentId IS NOT NULL ) AND T1.ParentId IS NOT NULL LIMIT 1\t----- bird -----\tcodebase_community",
    "657": "SELECT T2.DisplayName, T2.WebsiteUrl FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 8 ORDER BY T1.BountyAmount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts ORDER BY Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT P.Id) FROM posts AS P INNER JOIN votes AS V ON P.Id = V.PostId WHERE YEAR(P.CreaionDate) = 2011 AND V.BountyAmount = 50\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users ORDER BY Age ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE date(CreaionDate) = '2010-07-19'\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(NumLinks) AS AvgMonthlyLinks FROM ( SELECT strftime('%Y-%m', CreationDate) AS Month, COUNT(*) AS NumLinks FROM postLinks WHERE PostId IN ( SELECT Id FROM posts WHERE AnswerCount <= 2 ) AND strftime('%Y', CreationDate) = '2010' GROUP BY Month )\t----- bird -----\tcodebase_community",
    "666": "SELECT T1.PostId FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 1465 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "667": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id ORDER BY T1.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "668": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM badges GROUP BY UserId ORDER BY COUNT(Id) DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "669": "SELECT CreationDate FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl') ORDER BY CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreaionDate) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId ORDER BY users.Age DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "671": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Date LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location LIKE '%United Kingdom%' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(T2.PostId) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId ORDER BY T1.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age >= 18\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Jay Stevens' AND YEAR(T1.CreaionDate) = 2010\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts ORDER BY Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ViewCount > 20000 AND YEAR(T2.CreaionDate) = 2011\t----- bird -----\tcodebase_community",
    "682": "SELECT T1.Id, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE YEAR(T1.CreaionDate) = 2010 ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "683": "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE Reputation > 1000 AND YEAR(CreationDate) = 2011)) / (SELECT COUNT(*) FROM posts) * 100 AS Percentage\t----- bird -----\tcodebase_community",
    "684": "SELECT (COUNT(CASE WHEN Age BETWEEN 13 AND 19 THEN 1 END) * 100.0) / COUNT(Id) AS TeenageUsersPercentage FROM users\t----- bird -----\tcodebase_community",
    "685": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T2.Id = 183\t----- bird -----\tcodebase_community",
    "690": "SELECT T1.Name, T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' ORDER BY T1.Date DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age >= 18 AND UpVotes > 5000\t----- bird -----\tcodebase_community",
    "692": "SELECT DATEDIFF(T1.Date, T2.CreationDate) AS 'Days to get badge' FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)) AS PostCount, (SELECT COUNT(*) FROM comments WHERE UserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)) AS CommentCount\t----- bird -----\tcodebase_community",
    "694": "SELECT T1.Text, T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id INNER JOIN posts AS T3 ON T1.PostId = T3.Id WHERE T3.Title = 'Analysing wind data with R' ORDER BY T1.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Citizen Patrol'\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE Tags LIKE '%<careers>%'\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT (SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')) AS CommentCount, (SELECT COUNT(*) FROM posts WHERE PostTypeId = 2 AND ParentId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')) AS AnswerCount\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(PostId) FROM votes WHERE BountyAmount > 30\t----- bird -----\tcodebase_community",
    "701": "SELECT (COUNT(*) * 100 / (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1))) AS percentage FROM posts WHERE Score > 50 AND OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT T1.Reputation, T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%linear regression%'\t----- bird -----\tcodebase_community",
    "707": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT T1.CreationDate, T1.Age FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text LIKE '%website%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T1.PostId) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments WHERE Score = 0 AND PostId IN (SELECT Id FROM posts WHERE CommentCount = 1)\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T2.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.PostId, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T3.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id INNER JOIN votes AS T3 ON T2.Id = T3.UserId WHERE T1.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT T2.Text FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (SELECT COUNT(*) FROM users WHERE UpVotes = 0 AND Id IN (SELECT UserId FROM comments WHERE Score BETWEEN 5 AND 10)) / (SELECT COUNT(*) FROM comments WHERE Score BETWEEN 5 AND 10) * 100 AS percentage\t----- bird -----\tcodebase_community",
    "717": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = (SELECT id FROM superhero WHERE superhero_name = '3-D Man')\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT hero_id) FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.full_name HAVING COUNT(T2.power_id) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero AS s INNER JOIN colour AS c ON s.eye_colour_id = c.id WHERE c.colour = 'blue'\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT colour.colour, COUNT(superhero.eye_colour_id) AS count FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour ORDER BY count DESC\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "730": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.publisher_name = 'Marvel Comics' AND T4.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id ORDER BY T1.speed ASC LIMIT 1\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blonde'\t----- bird -----\tsuperhero",
    "736": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Intelligence' ORDER BY hero_attribute.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT superhero_name FROM superhero AS S INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id WHERE A.attribute_name = 'Durability' AND HA.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.attribute_name = 'Strength' AND T2.attribute_value = 100 AND T4.gender = 'Female'\t----- bird -----\tsuperhero",
    "741": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id ORDER BY COUNT(T2.power_id) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT CAST(SUM(IIF(T1.alignment = 'Neutral' OR T1.alignment = 'Chaotic Neutral', 1, 0)) AS REAL) * 100 / COUNT(T2.id) AS percentage, SUM(IIF(T3.publisher_name = 'Marvel Comics' AND (T1.alignment = 'Neutral' OR T1.alignment = 'Chaotic Neutral'), 1, 0)) AS Marvel_Count FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id\t----- bird -----\tsuperhero",
    "744": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference FROM superhero LIMIT 1\t----- bird -----\tsuperhero",
    "745": "SELECT publisher_id FROM superhero WHERE superhero_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(id) FROM superhero WHERE full_name IS NULL OR full_name = ''\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "751": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T4.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT superhero_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE height_cm BETWEEN 170 AND 190 AND colour.colour IS NULL\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'bad'\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T3.race = 'Human' AND T1.height_cm = 185\t----- bird -----\tsuperhero",
    "759": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id ORDER BY T1.weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
    "760": "SELECT CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "761": "SELECT superhero_name FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Male' AND superhero.weight_kg > (SELECT AVG(weight_kg)*0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T2.power_name ORDER BY COUNT(T2.power_name) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT T1.attribute_name, T2.attribute_value FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT superpower.power_name FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(hero_id) FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'stealth')\t----- bird -----\tsuperhero",
    "766": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'strength' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(height_cm), AVG(weight_kg) FROM superhero WHERE skin_colour_id IS NULL\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.attribute_name = 'Durability' AND T4.publisher_name = 'Dark Horse Comics' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T1.superhero_name, T2.colour AS eye_colour, T3.colour AS hair_colour, T4.colour AS skin_colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN colour AS T4 ON T1.skin_colour_id = T4.id INNER JOIN gender AS T5 ON T1.gender_id = T5.id INNER JOIN publisher AS T6 ON T1.publisher_id = T6.id WHERE T5.gender = 'Female' AND T6.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T1.superhero_name, T5.publisher_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN colour AS T4 ON T1.skin_colour_id = T4.id INNER JOIN publisher AS T5 ON T1.publisher_id = T5.id WHERE T2.colour = T3.colour AND T3.colour = T4.colour\t----- bird -----\tsuperhero",
    "774": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT (CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female')) * 100 AS percentage FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE gender.gender = 'Female' AND colour.colour = 'Blue'\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T3.race FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(power_id) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.superhero_name, superhero.height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T3.colour = 'Gold'\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT superhero_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'strength' AND T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'strength'))\t----- bird -----\tsuperhero",
    "787": "SELECT T3.race, T4.alignment FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id INNER JOIN alignment AS T4 ON T1.alignment_id = T4.id WHERE T1.full_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) AS percentage\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "790": "SELECT ( SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky' ) - ( SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler' ) AS weight_difference\t----- bird -----\tsuperhero",
    "791": "SELECT superhero.superhero_name, AVG(superhero.height_cm) FROM superhero GROUP BY superhero.superhero_name\t----- bird -----\tsuperhero",
    "792": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero AS s INNER JOIN race AS r ON s.race_id = r.id INNER JOIN gender AS g ON s.gender_id = g.id WHERE r.race IN ('god', 'eternal') AND g.gender = 'M'\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "796": "SELECT T2.attribute_name, T3.attribute_value FROM superhero AS T1 INNER JOIN attribute AS T2 ON T1.id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "798": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL\t----- bird -----\tsuperhero",
    "800": "SELECT CAST(SUM(CASE WHEN colour.colour = 'blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN gender_id = (SELECT id FROM gender WHERE gender = 'Male') THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) FROM superhero\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis'\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg IS NULL\t----- bird -----\tsuperhero",
    "806": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T3.race FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute ) LIMIT 1\t----- bird -----\tsuperhero",
    "811": "SELECT alignment.alignment, superpower.power_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(attribute_value) FROM hero_attribute WHERE hero_id IN (SELECT id FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral'))\t----- bird -----\tsuperhero",
    "814": "SELECT T3.colour FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.gender = 'Female' AND T3.alignment = 'Good'\t----- bird -----\tsuperhero",
    "816": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT r.race FROM superhero AS s INNER JOIN race AS r ON s.race_id = r.id INNER JOIN colour AS c ON s.hair_colour_id = c.id INNER JOIN gender AS g ON s.gender_id = g.id WHERE c.colour = 'blue' AND g.gender = 'male'\t----- bird -----\tsuperhero",
    "818": "SELECT CAST(SUM(IIF(gender.gender = 'F', 1, 0)) AS REAL) * 100 / COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'bad'\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id IS NULL THEN 1 ELSE 0 END) AS dif FROM superhero AS T1 WHERE T1.weight_kg IS NULL\t----- bird -----\tsuperhero",
    "820": "SELECT attribute_value FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Hulk' AND attribute.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero AS S INNER JOIN colour AS C ON S.skin_colour_id = C.id INNER JOIN alignment AS A ON S.alignment_id = A.id WHERE C.colour = 'Green' AND A.alignment = 'Villain'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Control Wind' ORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T4.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics' ORDER BY weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.race != 'Human' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed'))\t----- bird -----\tsuperhero",
    "829": "SELECT (SELECT publisher_name FROM publisher WHERE publisher_name IN ('DC', 'Marvel Comics') GROUP BY publisher_name ORDER BY COUNT(superhero.id) DESC LIMIT 1) \"created more superheroes\", ABS((SELECT COUNT(superhero.id) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC') - (SELECT COUNT(superhero.id) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics')) \"difference in number of superheroes\" FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE publisher.publisher_name IN ('DC', 'Marvel Comics')\t----- bird -----\tsuperhero",
    "830": "SELECT T2.attribute_name FROM attribute AS T2 INNER JOIN hero_attribute AS T1 ON T2.id = T1.attribute_id INNER JOIN superhero AS T3 ON T3.id = T1.hero_id WHERE T3.superhero_name = 'Black Panther' ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT CAST(SUM(IIF(T2.gender = 'F', 1, 0)) AS REAL) * 100 / COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.alignment = 'good') / (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics') AS percentage_of_good_superheroes\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE superhero_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'Brown'\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero AS S INNER JOIN alignment AS A ON S.alignment_id = A.id WHERE A.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "843": "SELECT T1.hero_id FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT DISTINCT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.height_cm > 0.8 * ( SELECT AVG(height_cm) FROM superhero )\t----- bird -----\tsuperhero",
    "846": "SELECT drivers.driverRef FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE qualifying.raceId = 20 AND qualifying.q1 IS NOT NULL AND qualifying.q2 IS NULL\t----- bird -----\tformula_1",
    "847": "SELECT T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 19 AND T2.q2 IS NOT NULL ORDER BY T2.q2 ASC LIMIT 1\t----- bird -----\tformula_1",
    "848": "SELECT year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT url FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T1.position FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(DISTINCT T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.location NOT IN ('Asia', 'Europe')\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE name LIKE '%Australian Grand Prix%'\t----- bird -----\tformula_1",
    "855": "SELECT * FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit')\t----- bird -----\tformula_1",
    "856": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT T3.country FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN circuits AS T3 ON T3.circuitId = T1.raceId WHERE T1.points = 1 AND T1.raceId = 24\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna')\t----- bird -----\tformula_1",
    "860": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 = '0:01:40' AND T2.raceId = 355\t----- bird -----\tformula_1",
    "861": "SELECT T2.number FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q3 = '0:01:54' AND T1.raceId = 903\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Bahrain Grand Prix' AND T2.year = 2007 AND T1.statusId != 1\t----- bird -----\tformula_1",
    "863": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29') AND statusId IN (SELECT statusId FROM status WHERE status = 'Finished')\t----- bird -----\tformula_1",
    "865": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 592 ORDER BY T2.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT T1.url FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time = '0:01:27' AND T2.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 933 ORDER BY T2.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "868": "SELECT c.location, c.lat, c.lng FROM circuits AS c INNER JOIN races AS r ON c.circuitId = r.circuitId WHERE r.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructors AS T2 INNER JOIN constructorResults AS T1 ON T2.constructorId = T1.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi') AND raceId = 345\t----- bird -----\tformula_1",
    "871": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 = '0:01:15' AND T2.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 45 AND T2.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "873": "SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.surname = 'McLaren' AND T2.forename = 'Bruce' AND T1.raceId = 743\t----- bird -----\tformula_1",
    "874": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'San Marino Grand Prix' AND races.year = 2006 AND results.positionOrder = 2\t----- bird -----\tformula_1",
    "875": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29') AND statusId IN (SELECT statusId FROM status WHERE status NOT LIKE 'Finished')\t----- bird -----\tformula_1",
    "877": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.raceId = 872 ORDER BY drivers.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 348 ORDER BY T2.time LIMIT 1\t----- bird -----\tformula_1",
    "879": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "880": "SELECT (CAST(T1.fastestLapSpeed AS REAL) - CAST(T2.fastestLapSpeed AS REAL)) / CAST(T2.fastestLapSpeed AS REAL) * 100 FROM results AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Paul' AND T3.surname = 'di Resta' AND T1.raceId = 853 AND T2.raceId = (SELECT MIN(raceId) FROM results WHERE raceId > 853 AND driverId = T1.driverId)\t----- bird -----\tformula_1",
    "881": "SELECT drivers.driverRef, COUNT(results.statusId) * 1.0 / COUNT(races.raceId) as completion_rate FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE races.date = '1983-07-16' GROUP BY drivers.driverId\t----- bird -----\tformula_1",
    "882": "SELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(raceId), name FROM races WHERE year = 2005 ORDER BY name DESC\t----- bird -----\tformula_1",
    "884": "SELECT races.name FROM races WHERE races.date = (SELECT MIN(races.date) FROM races)\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(raceId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "887": "SELECT r1.name FROM races AS r1 WHERE r1.year = 2017 AND r1.name NOT IN ( SELECT r2.name FROM races AS r2 WHERE r2.year = 2000 )\t----- bird -----\tformula_1",
    "888": "SELECT T1.country, T1.name, T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'European Grand Prix' ORDER BY T2.date LIMIT 1\t----- bird -----\tformula_1",
    "889": "SELECT MAX(T1.year) FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Brands Hatch' AND T2.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT T2.year) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone Circuit' AND T2.name = 'United Kingdom Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT T2.forename, T2.surname, T1.positionOrder FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2010 AND T3.name = 'Singapore Grand Prix' ORDER BY T1.positionOrder\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename, drivers.surname, MAX(driverStandings.points) AS max_points FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId GROUP BY drivers.driverId ORDER BY max_points DESC LIMIT 1\t----- bird -----\tformula_1",
    "893": "SELECT drivers.forename, drivers.surname, results.points FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Chinese Grand Prix' AND races.year = 2017 ORDER BY results.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT T1.forename, T1.surname, T2.name, T3.time FROM drivers AS T1 INNER JOIN races AS T2 ON T2.raceId = T3.raceId INNER JOIN lapTimes AS T3 ON T1.driverId = T3.driverId ORDER BY T3.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Malaysian Grand Prix' AND T3.year = 2009\t----- bird -----\tformula_1",
    "896": "SELECT CAST(SUM(CASE WHEN T1.position != 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.position) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.surname = 'Hamilton' AND T3.year >= 2010 AND T3.round = 1\t----- bird -----\tformula_1",
    "897": "SELECT T1.forename, T1.surname, T1.nationality, MAX(T2.points) AS max_points FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY COUNT(T2.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT MIN(DATE('now') - dob) AS Age, forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT c.name, COUNT(r.raceId) as race_count FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.circuitId HAVING race_count = 4\t----- bird -----\tformula_1",
    "900": "SELECT c.name AS circuit_name, c.location AS circuit_location, r.name AS race_name FROM circuits AS c INNER JOIN races AS r ON c.circuitId = r.circuitId WHERE c.country = 'USA' AND r.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location AS circuit_location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE strftime('%Y-%m', races.date) = '2005-09'\t----- bird -----\tformula_1",
    "902": "SELECT T2.name FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverId = T2.raceId INNER JOIN results AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T3.grid < 20\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId INNER JOIN circuits AS T4 ON T1.circuitId = T4.circuitId WHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' AND T2.position = 1 AND T4.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "904": "SELECT races.name, races.year FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.surname = 'Schumacher' AND drivers.forename = 'Michael' ORDER BY results.fastestLapTime LIMIT 1\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Eddie' AND T2.surname = 'Irvine' AND T3.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT races.name, results.points FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.surname = 'Hamilton' ORDER BY races.date LIMIT 1\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country, races.date FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date\t----- bird -----\tformula_1",
    "908": "SELECT T1.name AS race_name, T1.year, T2.location AS circuit_location, MAX(T3.laps) AS most_laps FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId INNER JOIN results AS T3 ON T1.raceId = T3.raceId GROUP BY T1.raceId ORDER BY most_laps DESC LIMIT 1\t----- bird -----\tformula_1",
    "909": "SELECT (SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany' AND T1.name LIKE '%European Grand Prix%') * 100.0 / (SELECT COUNT(*) FROM races WHERE name LIKE '%European Grand Prix%') AS percentage\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT `name`, `lat` FROM `circuits` WHERE `name` IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY `lat` DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT `country` FROM `circuits` ORDER BY `alt` DESC LIMIT 1\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(driverId) FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1",
    "915": "SELECT country FROM drivers ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian'\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\t----- bird -----\tformula_1",
    "919": "SELECT c.name FROM races r INNER JOIN circuits c ON r.circuitId = c.circuitId WHERE r.name = 'Spanish Grand Prix' AND r.year = 2009\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT races.raceId, races.year, races.round, races.name, races.date, races.time, circuits.location, circuits.country FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.name = 'Abu Dhabi Circuit'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races AS r INNER JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT date FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Barcelona-Catalunya')\t----- bird -----\tformula_1",
    "925": "SELECT c.url FROM races r INNER JOIN circuits c ON r.circuitId = c.circuitId WHERE r.name = 'Spanish Grand Prix' AND r.year = 2009\t----- bird -----\tformula_1",
    "926": "SELECT MIN(fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "928": "SELECT T2.driverRef FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2007 AND T1.positionOrder = 1\t----- bird -----\tformula_1",
    "929": "SELECT races.name FROM races INNER JOIN results ON races.raceId = results.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT races.name FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.positionOrder ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) AS Fastest_Lap_Speed FROM results WHERE raceId = ( SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix' )\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T2.year FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverId = T2.driverId WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis'\t----- bird -----\tformula_1",
    "933": "SELECT T1.rank FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Chinese Grand Prix' AND T3.year = 2008\t----- bird -----\tformula_1",
    "934": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 1989 AND T3.name = 'Australian Grand Prix' AND T2.grid = 4\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND statusId = (SELECT statusId FROM status WHERE status = 'Finished')\t----- bird -----\tformula_1",
    "936": "SELECT MIN(T1.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Australian Grand Prix' AND T3.year = 2008\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.positionOrder = 2\t----- bird -----\tformula_1",
    "938": "SELECT T2.forename, T2.surname, T2.url FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2008 AND T3.name = 'Australian Grand Prix' AND T1.positionOrder = 1\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND drivers.nationality = 'UN'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2008 AND T3.name = 'Chinese Grand Prix' AND T2.statusId IN (SELECT statusId FROM status WHERE status = 'Finished')\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "942": "SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "943": "SELECT CAST(COUNT(CASE WHEN T1.laps = (SELECT MAX(laps) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 WHERE T1.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')\t----- bird -----\tformula_1",
    "944": "SELECT (CAST((SELECT MIN(T1.milliseconds) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix') AS REAL) / (SELECT MAX(T1.milliseconds) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix') - 1) * 100 AS Percentage_Faster FROM results LIMIT 1\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(circuitId) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "946": "SELECT location, lat, lng FROM circuits WHERE country = 'USA'\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01'\t----- bird -----\tformula_1",
    "948": "SELECT MAX(points) FROM constructorStandings WHERE constructorId IN (SELECT constructorId FROM constructors WHERE nationality = 'British')\t----- bird -----\tformula_1",
    "949": "SELECT T2.name FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "950": "SELECT T2.name FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 0 AND T1.raceId = 291\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(*) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Japanese' AND T2.points = 0 GROUP BY T1.constructorId HAVING COUNT(T2.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT name FROM constructors WHERE constructorId IN (SELECT constructorId FROM constructorStandings WHERE position = 1)\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructors.constructorId) FROM constructors INNER JOIN results ON constructors.constructorId = results.constructorId INNER JOIN lapTimes ON results.raceId = lapTimes.raceId AND results.driverId = lapTimes.driverId WHERE constructors.nationality = 'French' AND lapTimes.lap > 50\t----- bird -----\tformula_1",
    "954": "SELECT CAST(SUM(CASE WHEN r.statusId = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(r.statusId) AS Completion_Percentage FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.nationality = 'Japanese' AND ra.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "955": "SELECT races.year, AVG(results.time) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.year < 1975 AND results.position = 1 GROUP BY races.year\t----- bird -----\tformula_1",
    "956": "SELECT forename, surname FROM drivers WHERE dob > '1975-01-01' AND driverId IN (SELECT driverId FROM results WHERE rank = 2)\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN status ON results.statusId = status.statusId WHERE drivers.nationality = 'Italian' AND status.status NOT LIKE 'Finished'\t----- bird -----\tformula_1",
    "958": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "959": "SELECT fastestLap FROM results AS r INNER JOIN races AS ra ON r.raceId = ra.raceId INNER JOIN driverStandings AS ds ON r.driverId = ds.driverId AND ra.raceId = ds.raceId WHERE ra.year = 2009 AND ds.position = 1 ORDER BY r.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')\t----- bird -----\tformula_1",
    "961": "SELECT races.name, races.year FROM races INNER JOIN results ON races.raceId = results.raceId ORDER BY results.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "962": "SELECT CAST(SUM(CASE WHEN dob < '1985-01-01' AND lap > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(driverId) FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE races.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'French' AND lapTimes.time < '02:00.00'\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18\t----- bird -----\tformula_1",
    "967": "SELECT driverId, nationality FROM drivers WHERE nationality = 'Netherlands' ORDER BY dob DESC LIMIT 3\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND strftime('%Y', dob) = '1980'\t----- bird -----\tformula_1",
    "970": "SELECT drivers.forename, drivers.surname, MIN(lapTimes.time) as earliest_lap_time FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY drivers.driverId ORDER BY earliest_lap_time ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "972": "SELECT drivers.driverId, drivers.code FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE drivers.dob LIKE '1971%' ORDER BY results.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "973": "SELECT T1.forename, T1.surname, T1.dob, T2.time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spanish' AND STRFTIME('%Y', T1.dob) < '1982' ORDER BY T2.time DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN results AS T3 ON T2.raceId = T3.raceId ORDER BY T3.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "975": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId ORDER BY T2.fastestLapSpeed ASC LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(resultId) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = (SELECT statusId FROM status WHERE status = 'Disqualified')\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(circuitId), location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "979": "SELECT raceId FROM results WHERE statusId = 1 GROUP BY raceId ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 23 AND T2.q2 IS NOT NULL\t----- bird -----\tformula_1",
    "981": "SELECT races.year, drivers.forename, drivers.surname, races.date, races.time FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId INNER JOIN races ON qualifying.raceId = races.raceId WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) ORDER BY races.date ASC LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT d.driverId) FROM drivers d INNER JOIN results r ON d.driverId = r.driverId INNER JOIN status s ON r.statusId = s.statusId WHERE d.nationality = 'American' AND s.status = 'Puncture'\t----- bird -----\tformula_1",
    "983": "SELECT T2.name, T2.url FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'Italian' ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "984": "SELECT T2.url FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId GROUP BY T2.constructorId ORDER BY SUM(T1.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "985": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'French Grand Prix' AND T2.lap = 3 ORDER BY T2.time DESC LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT T1.raceId, MIN(T1.milliseconds) AS Fastest_Lap_Time FROM lapTimes AS T1 WHERE T1.lap = 1 GROUP BY T1.raceId ORDER BY Fastest_Lap_Time ASC LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'United States Grand Prix' AND year = 2006) ORDER BY fastestLapTime ASC LIMIT 10\t----- bird -----\tformula_1",
    "988": "SELECT drivers.driverRef, drivers.forename, drivers.surname, AVG(pitStops.milliseconds) as avgPitStopDuration FROM drivers JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverId ORDER BY avgPitStopDuration ASC LIMIT 3\t----- bird -----\tformula_1",
    "989": "SELECT T1.forename, T1.surname, T3.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2008 AND T2.positionOrder = 1\t----- bird -----\tformula_1",
    "990": "SELECT T1.constructorRef, T1.url FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2009 AND T3.name = 'Singapore Grand Prix' AND T2.positionOrder = 1\t----- bird -----\tformula_1",
    "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1",
    "992": "SELECT forename, surname, url, dob FROM drivers WHERE nationality = 'German' AND dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT MAX(T3.points) AS Score, T4.name AS TeamName, T4.nationality AS Nationality FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId INNER JOIN constructorResults AS T3 ON T1.raceId = T3.raceId INNER JOIN constructors AS T4 ON T3.constructorId = T4.constructorId WHERE T2.name = 'Monaco Grand Prix' AND T1.year BETWEEN 1980 AND 2010 GROUP BY T4.name ORDER BY Score DESC LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(Count) FROM (SELECT year, COUNT(raceId) as Count FROM races WHERE year BETWEEN 2000 AND 2009 GROUP BY year)\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(driverId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT COUNT(T2.driverId) FROM driverStandings AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.position = 91 AND T2.points > 0\t----- bird -----\tformula_1",
    "999": "SELECT races.name FROM races INNER JOIN results ON races.raceId = results.raceId ORDER BY results.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "1000": "SELECT T1.name, T1.location, T1.country FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId ORDER BY T2.date DESC LIMIT 1\t----- bird -----\tformula_1",
    "1001": "SELECT T3.forename, T3.surname FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId INNER JOIN circuits AS T4 ON T2.circuitId = T4.circuitId WHERE T1.position = 1 AND T2.round = 3 AND T4.name = 'Marina Bay Street Circuit' AND T2.year = 2008\t----- bird -----\tformula_1",
    "1002": "SELECT drivers.forename, drivers.surname, drivers.nationality, races.name AS first_race FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) ORDER BY races.date ASC LIMIT 1\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Canadian Grand Prix' AND T1.statusId IN (SELECT statusId FROM status WHERE status LIKE '%Accident%') GROUP BY T3.driverId ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "1004": "SELECT T1.forename || ' ' || T1.surname AS full_name, SUM(T3.wins) AS total_wins FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN driverStandings AS T3 ON T2.driverId = T3.driverId WHERE T1.dob = (SELECT MIN(dob) FROM drivers) GROUP BY full_name\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(milliseconds) FROM pitStops\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(time) FROM lapTimes\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(T1.duration) FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1008": "SELECT T1.lap FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Australian Grand Prix' AND T3.year = 2011\t----- bird -----\tformula_1",
    "1009": "SELECT T1.driverId, T1.duration FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2011 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(T1.time) AS 'Fastest Lap Time' FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1011": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.time ASC LIMIT 20\t----- bird -----\tformula_1",
    "1012": "SELECT T3.position, T4.name, T4.location, T4.country FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN results AS T3 ON T1.raceId = T3.raceId AND T1.driverId = T3.driverId INNER JOIN circuits AS T4 ON T3.raceId = T4.circuitId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.fastestLap = T1.lap ORDER BY T1.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(T1.time) AS 'Lap Record' FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1014": "SELECT T1.name, MIN(T3.time) AS lap_record FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN lapTimes AS T3 ON T2.raceId = T3.raceId WHERE T1.country = 'Italy' GROUP BY T1.name\t----- bird -----\tformula_1",
    "1015": "SELECT races.name, races.date FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit' ORDER BY lapTimes.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "1016": "SELECT T1.duration FROM pitStops AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.time = (SELECT MIN(time) FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit')))\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN results ON circuits.circuitId = results.raceId WHERE results.fastestLapTime = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(lapTimes.milliseconds) FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes) LIMIT 1\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 WHERE T1.overall_rating BETWEEN 60 AND 65 AND T1.attacking_work_rate = 'high' AND T1.defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2016' GROUP BY L.name ORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT home_team_api_id, COUNT(home_team_api_id) as losses FROM Match WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY losses ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1027": "SELECT player_name FROM Player WHERE player_api_id IN (SELECT player_api_id FROM Player_Attributes ORDER BY penalties DESC LIMIT 10)\t----- bird -----\teuropean_football_2",
    "1028": "SELECT away_team_api_id, COUNT(*) as wins FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League') AND season = '2010' AND away_team_goal > home_team_goal GROUP BY away_team_api_id ORDER BY wins DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT team_long_name, buildUpPlaySpeed FROM Team_Attributes INNER JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id ORDER BY buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2016' AND M.home_team_goal = M.away_team_goal GROUP BY L.id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT T1.player_name, (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) AS age FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND strftime('%Y', T2.date) BETWEEN '2013' AND '2015'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT L.name, COUNT(*) as total_matches FROM Match M JOIN League L ON M.league_id = L.id GROUP BY L.name ORDER BY total_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE strftime('%Y', birthday) BETWEEN '1990' AND '1995'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE date LIKE '2010%' ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.date LIKE '2012%' AND T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE date LIKE '2012%')\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(SUM(CASE WHEN T1.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE SUBSTR(T2.birthday, 1, 4) BETWEEN '1987' AND '1992'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT L.name, SUM(M.home_team_goal + M.away_team_goal) AS total_goals FROM League AS L JOIN Match AS M ON L.id = M.league_id GROUP BY L.name ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name, AVG(Player_Attributes.heading_accuracy) AS avg_heading_accuracy FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height > 180 GROUP BY Player.player_api_id ORDER BY avg_heading_accuracy DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.date LIKE '2014%' AND T2.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE date LIKE '2014%') ORDER BY T2.chanceCreationPassing DESC\t----- bird -----\teuropean_football_2",
    "1042": "SELECT L.name FROM League AS L JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.id HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE strftime('%Y', birthday) = '1970' AND strftime('%m', birthday) = '10'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT `attacking_work_rate` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Franco Zennaro')\t----- bird -----\teuropean_football_2",
    "1046": "SELECT buildUpPlaySpeed FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'ADO Den Haag')\t----- bird -----\teuropean_football_2",
    "1047": "SELECT finishing FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francois Affolter') AND date = '2014-09-18'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Gabriel Tamas') AND date LIKE '2011%'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON l.country_id = c.id WHERE m.season = '2015/2016' AND l.name = 'Scotland Premier League'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_name, potential FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE weight < 130) AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT `defensive_work_rate` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'David Wilson')\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1056": "SELECT name FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands')\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match INNER JOIN League ON Match.league_id = League.id INNER JOIN Country ON League.country_id = Country.id WHERE season = '2010/2011' AND Country.name = 'Poland'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT T1.player_name, AVG(T2.finishing) AS avg_finishing_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height IN ( SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player ) GROUP BY T1.player_name ORDER BY avg_finishing_rate DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(player_api_id) FROM Player WHERE STRFTIME('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating > 80 AND T1.date BETWEEN '2008-01-01' AND '2010-12-31'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT potential FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran')\t----- bird -----\teuropean_football_2",
    "1064": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_short_name = 'CLB')\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE height > 170) AND date BETWEEN '2010-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name, height FROM Player ORDER BY height ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeed = 31 AND T2.buildUpPlayDribbling = 53 AND T2.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran')\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON l.country_id = c.id WHERE c.name = 'Germany' AND l.name = '1. Bundesliga' AND m.date BETWEEN '2008-08-01' AND '2008-10-31'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id WHERE T2.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT player_name FROM Player WHERE id IN (SELECT player_api_id FROM Player_Attributes WHERE balance = (SELECT MAX(balance) FROM Player_Attributes) AND potential = 61)\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo')) - (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Appindangoye')) AS difference\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' ORDER BY birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'Left' AND attacking_work_rate = 'Medium'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT player_name FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes ORDER BY strength DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(player_api_id) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE STRFTIME('%Y', birthday) < '1986') AND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT player_name, MAX(crossing) as max_crossing FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') GROUP BY player_name ORDER BY max_crossing DESC\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 180 AND T1.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT player_name FROM Player WHERE id IN (SELECT player_api_id FROM Player_Attributes WHERE volleys > 70 AND dribbling > 70)\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match AS M JOIN League AS L ON M.league_id = L.id JOIN Country AS C ON L.country_id = C.id WHERE M.season = '2008/2009' AND C.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T1.long_passing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE L.name = 'Belgium Jupiler League' AND strftime('%Y-%m', M.date) = '2009-04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2008/2009' GROUP BY L.name ORDER BY COUNT(M.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE STRFTIME('%Y', birthday) < '1986')\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (CAST((SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')) AS REAL) - CAST((SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) AS REAL)) / CAST((SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) AS REAL) * 100 AS 'Percentage Difference' FROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T1.chanceCreationPassing), T1.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Ajax' ORDER BY T1.chanceCreationPassing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo')\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match AS M INNER JOIN Team AS T ON M.away_team_api_id = T.team_api_id INNER JOIN League AS L ON M.league_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE T.team_long_name = 'Parma' AND C.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1102": "SELECT player_name FROM Player WHERE player_api_id IN (SELECT player_api_id FROM Player_Attributes WHERE overall_rating = 77 AND date = '2016-06-23') ORDER BY birthday LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Mooy') AND date = '2016-02-04'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Francesco Parravicini') AND date = '2010-08-30'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore') AND date = '2015-05-01'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT `defensive_work_rate` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Kevin Berigaud') AND `date` = '2013-02-22'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') ORDER BY crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date = '2011-02-22'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T1.buildUpPlayDribblingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'LEI' AND T1.date = '2015-09-10'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'FC Lorient') AND date = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT chanceCreationPassingClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'PEC Zwolle') AND date = '2013-09-20'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T1.chanceCreationCrossingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Hull City' AND T1.date = '2010/2/22'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT `defenceAggressionClass` FROM `Team_Attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'Hannover 96') AND `date` = '2015-09-10'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (CAST((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') AS REAL) - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12')) / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12') * 100 AS percentage_increase\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (julianday('now') - julianday(birthday)) / 365 >= 35\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.home_player_1 = T2.player_api_id WHERE T2.player_name = 'Aaron Lennon'\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(Match.away_team_goal) FROM Match JOIN Player AS P1 ON Match.away_player_1 = P1.player_api_id JOIN Player AS P2 ON Match.away_player_2 = P2.player_api_id WHERE P1.player_name = 'Daan Smith' OR P2.player_name = 'Filipe Ferreira'\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(home_team_goal) FROM Match WHERE home_player_1 IN (SELECT player_api_id FROM Player WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', birthday) <= 30)\t----- bird -----\teuropean_football_2",
    "1122": "SELECT player_name FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes ORDER BY strength DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1123": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.potential = ( SELECT MAX(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2",
    "1124": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing = 1 ORDER BY Player.birthday LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT player_name FROM Player WHERE player_api_id IN (SELECT player_api_id FROM Player_Attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM Country WHERE name = 'Belgium'))\t----- bird -----\teuropean_football_2",
    "1127": "SELECT T1.player_name, T3.name AS country_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id INNER JOIN Country AS T3 ON T2.country_id = T3.id WHERE T1.vision >= 90\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name, AVG(Player.weight) AS Average_Weight FROM Player JOIN Country ON Player.country_id = Country.id GROUP BY Country.name ORDER BY Average_Weight DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(T1.height) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.country_id = (SELECT id FROM Country WHERE name = 'Italy')\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_api_id = 6) - (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23) AS Jumping_Difference;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'Right' ORDER BY potential ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'Left' AND attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (SELECT COUNT(*) FROM Player_Attributes WHERE strength > 80 AND stamina > 80) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes) AS percentage\t----- bird -----\teuropean_football_2",
    "1138": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match INNER JOIN League ON Match.league_id = League.id WHERE date = '2008-09-24' AND League.name = 'Belgian Jupiler League'\t----- bird -----\teuropean_football_2",
    "1140": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin')\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge')\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON l.country_id = c.id WHERE m.season = '2015/2016' AND l.name = 'Serie A' AND c.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match INNER JOIN League ON Match.league_id = League.id INNER JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Netherlands' AND League.name = 'Eredivisie'\t----- bird -----\teuropean_football_2",
    "1144": "SELECT T1.finishing, T1.curve FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.weight DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1145": "SELECT L.name, COUNT(M.id) AS num_games FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY num_games DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id GROUP BY T2.team_long_name ORDER BY SUM(T1.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_name FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes ORDER BY strength DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1148": "SELECT CAST(COUNT(CASE WHEN T1.height < 180 AND T2.strength > 70 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "1149": "SELECT CASE WHEN SUM(CASE WHEN Admission = 'Inpatient' THEN 1 ELSE 0 END) > SUM(CASE WHEN Admission = 'Outpatient' THEN 1 ELSE 0 END) THEN 'More Inpatient' ELSE 'More Outpatient' END AS 'More Admission Type', ABS(SUM(CASE WHEN Admission = 'Inpatient' THEN 1 ELSE 0 END) - SUM(CASE WHEN Admission = 'Outpatient' THEN 1 ELSE 0 END)) * 100 / COUNT(ID) AS 'Deviation Percentage' FROM Patient WHERE SEX = 'Male'\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (SELECT COUNT(*) FROM Patient WHERE SEX = 'Female' AND Birthday > '1931-01-01') / (SELECT COUNT(*) FROM Patient WHERE SEX = 'Female') * 100 AS percentage FROM Patient LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT (COUNT(DISTINCT T1.ID) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE strftime('%Y', Birthday) BETWEEN '1930' AND '1940')) AS 'Percentage' FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Admission = 'Inpatient' AND strftime('%Y', T1.Birthday) BETWEEN '1930' AND '1940'\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT (SELECT COUNT(*) FROM Patient WHERE Admission = 'Outpatient' AND Diagnosis = 'SLE') / (SELECT COUNT(*) FROM Patient WHERE Admission = 'Inpatient' AND Diagnosis = 'SLE') AS Ratio\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT P.Diagnosis, L.Date FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = '163109'\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > (SELECT MAX(LDH) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT T1.ID, strftime('%Y', 'now') - strftime('%Y', T1.Birthday) AS Age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.KCT = 'Positive'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 'severe'\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE YEAR(T1.Birthday) = 1937 AND T2.`T-CHO` > 200\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(DISTINCT T1.ID) * 100.0 / (SELECT COUNT(DISTINCT ID) FROM Patient WHERE SEX = 'F')) AS Percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.3)\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE ROUND((strftime('%J', 'now') - strftime('%J', T1.Birthday)) / 365) >= 50 AND T1.Admission = 'Inpatient'\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Female' AND YEAR(T1.`First Date`) = 1997 AND T1.Admission = 'Outpatient'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(`First Date` - Birthday) AS Age FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.`Examination Date`) = '1997' AND T1.Thrombosis = (SELECT MAX(Thrombosis) FROM Examination) AND T2.SEX = 'Female'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday)) - MIN(STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday)) AS Age_Gap FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG BETWEEN 150 AND 200\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT T1.Symptoms, T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T2.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(T1.count) FROM (SELECT COUNT(T1.ID) AS count, STRFTIME('%m', T2.Date) AS month FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Male' AND STRFTIME('%Y', T2.Date) = '1998' GROUP BY month) AS T1\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT T2.Date, STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) AS Age_At_Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST(SUM(CASE WHEN P.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN P.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.UA > (SELECT AVG(UA) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 LEFT JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` IS NULL OR T2.`Examination Date` > DATE(T1.`First Date`, '+1 year')\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31' AND (julianday(E.`Examination Date`) - julianday(P.Birthday)) / 365 < 18\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-BIL` > 1.2\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(Diagnosis) AS Frequency FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY Frequency DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - YEAR(Birthday)) AS Average_Age FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE MONTH(Date) = 10 AND YEAR(Date) = 1991 )\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT P.Birthday, E.`Examination Date`, E.Diagnosis FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.HGB = (SELECT MAX(HGB) FROM Laboratory) ORDER BY E.`Examination Date` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT `ANA` FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN `T-CHO` BETWEEN 150 AND 200 THEN 'Normal' ELSE 'Abnormal' END AS `Cholesterol Status` FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04'\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT T2.SEX FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'AORTITIS' ORDER BY T1.`Examination Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT `aCL IgG`, `aCL IgM`, `aCL IgA` FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND `First Date` = '1994-02-19') AND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT DATE('1991-10-21') - Birthday AS Age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA = 8.4 AND T2.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(*) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE `First Date` = '1991-06-13' AND Diagnosis = 'SJS') AND strftime('%Y', Date) = '1995'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT T1.Diagnosis FROM Patient AS T1 WHERE T1.ID = (SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND `First Date` = '1997-01-27') AND T1.`First Date` = (SELECT MIN(`First Date`) FROM Patient WHERE ID = T1.ID)\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.`Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (CAST((SELECT `T-CHO` FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date = '1981-11-01') AS REAL) - CAST((SELECT `T-CHO` FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date = '1981-12-01') AS REAL)) * 100 / CAST((SELECT `T-CHO` FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date = '1981-11-01') AS REAL) AS DecreaseRate\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'Behcet\\'s' AND T2.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'Female' AND STRFTIME('%Y', Birthday) = '1964' AND Admission IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 2 AND T1.`ANA Pattern` = 'S' AND T1.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT CAST(SUM(IIF(T2.UA < 3.5, 1, 0)) AS REAL) * 100 / COUNT(T2.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` BETWEEN 0 AND 0.15\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (COUNT(DISTINCT T1.ID) * 100.0 / (SELECT COUNT(DISTINCT ID) FROM Patient WHERE SEX = 'M' AND strftime('%Y', `First Date`) = '1981')) AS percentage FROM Patient AS T1 WHERE T1.SEX = 'M' AND T1.Diagnosis = 'BEHCET' AND strftime('%Y', T1.`First Date`) = '1981'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday, T1.Description, T1.`First Date`, T1.Admission, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = 'Outpatient' AND strftime('%Y-%m', T2.Date) = '1991-10' AND T2.`T-BIL` BETWEEN 0.1 AND 1.2\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.`ANA Pattern` != 'P' AND P.SEX = 'Female' AND P.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T2.SEX FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T1.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(T2.ALB) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Female' AND T2.PLT > 400 AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms, COUNT(*) AS Frequency FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY Frequency DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT T1.`First Date`, T1.Diagnosis FROM Patient AS T1 WHERE T1.ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T2.Date) = '1997' AND (T2.TP < 6.0 OR T2.TP > 8.3)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN T1.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 1\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT CAST(SUM(CASE WHEN Patient.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Patient.Birthday) = '1980' AND Laboratory.RA = 'Positive'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND T2.Diagnosis = 'Behcet disease' AND T1.Admission IS NULL\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT P.ID) FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'Female' AND L.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT strftime('%J', T2.`Examination Date`) - strftime('%J', T1.`First Date`) AS days FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 821298 ORDER BY T2.`Examination Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN UA >= 3.5 AND UA <= 7.2 THEN 'Yes' ELSE 'No' END AS 'Is_UA_Normal' FROM Laboratory WHERE ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT `Date` FROM Laboratory WHERE ID = 48473 AND GOT > (SELECT MAX(normal_range) FROM Normal_Range WHERE test_name = 'AST glutamic oxaloacetic transaminase')\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE L.GOT BETWEEN 10 AND 40 AND STRFTIME('%Y', L.Date) = '1994'\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT > (SELECT MAX(GPT) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT P.ID, P.Birthday, P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT > 40 ORDER BY P.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH BETWEEN 140 AND 280\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as Age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > 100 AND Laboratory.LDH < 300\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP BETWEEN 44 AND 147\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT T1.ID, T2.ALP FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01' AND T2.ALP BETWEEN 20 AND 140\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < (SELECT MIN(TP) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT P.ID, L.TP - N.Normal_TP AS Deviation FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Normal_Index AS N ON 1 = 1 WHERE P.SEX = 'Female' AND L.TP > N.Normal_TP\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT P.ID, P.SEX, P.Birthday, L.ALB FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'Male' AND (L.ALB < 3.5 OR L.ALB > 5.5) ORDER BY P.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT P.ID, P.Birthday, L.ALB, CASE WHEN L.ALB BETWEEN 3.5 AND 5.5 THEN 'Normal' ELSE 'Abnormal' END AS Albumin_Level FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) = '1982'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(DISTINCT T1.ID) * 100.0 / (SELECT COUNT(DISTINCT ID) FROM Patient WHERE SEX = 'F')) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.UA < 3.5 OR T2.UA > 7.2)\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(LAB.UA) AS Average_UA FROM Laboratory AS LAB INNER JOIN ( SELECT ID, MAX(Date) AS LatestDate FROM Laboratory WHERE UA BETWEEN 3.5 AND 7.2 GROUP BY ID ) AS LatestLab ON LAB.ID = LatestLab.ID AND LAB.Date = LatestLab.LatestDate\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN BETWEEN 7 AND 20\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'RA' AND T2.UN BETWEEN 7 AND 20\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.CRE < 0.7 OR T2.CRE > 1.3)\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN (SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.CRE < 0.6 OR T2.CRE > 1.2)) > (SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.CRE < 0.5 OR T2.CRE > 1.1)) THEN 'True' ELSE 'False' END\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`T-BIL` NOT BETWEEN 0.1 AND 1.2 GROUP BY Patient.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ORDER BY T1.Birthday, T2.`T-CHO` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG((julianday('now') - julianday(Patient.Birthday)) / 365) AS Average_Age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.`T-CHO` > 200\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT P.ID, P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG > 100\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > (SELECT MAX(NormalRange) FROM NormalValues WHERE Test = 'TG') AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK BETWEEN 10 AND 120 AND T1.Diagnosis = 'Outpatient'\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Male' AND T1.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND T2.CPK > (SELECT MAX(NormalRange) FROM NormalValues WHERE TestName = 'CPK')\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT P.ID, P.SEX, (julianday('now') - julianday(P.Birthday))/365 AS Age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE (L.GLU < 70 OR L.GLU > 100) AND (L.`T-CHO` >= 150 AND L.`T-CHO` <= 200)\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT P.ID, L.GLU FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE strftime('%Y', P.`First Date`) = '1991' AND L.GLU BETWEEN 70 AND 100\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.WBC > 11000 OR L.WBC < 4000 GROUP BY P.SEX ORDER BY P.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT P.ID, P.Diagnosis, (julianday('now') - julianday(P.Birthday))/365 as Age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RBC < (SELECT AVG(RBC) FROM Laboratory) ORDER BY L.RBC ASC\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (YEAR(CURRENT_DATE) - YEAR(T1.Birthday)) >= 50 AND T2.RBC NOT BETWEEN 4.5 AND 5.5\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HGB < (SELECT AVG(HGB) FROM Laboratory) AND T1.Admission = 'Outpatient'\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'SLE' AND T3.HGB BETWEEN 13.5 AND 17.5 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT P.ID, (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) AS Age FROM Patient AS P WHERE ( SELECT COUNT(*) FROM Laboratory AS L WHERE L.ID = P.ID AND L.HCT > (SELECT MAX(NormalRange) FROM NormalValues WHERE Test = 'HCT') ) >= 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date BETWEEN '1991-01-01' AND '1991-12-31' AND HCT < (SELECT MIN(NormalRange) FROM NormalRanges WHERE Test = 'HCT')\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT \"Abnormal Platelet Level\", COUNT(ID) AS \"Number of Patients\" FROM ( SELECT ID, CASE WHEN PLT < (SELECT AVG(PLT) FROM Laboratory) THEN 'Lower than Normal' WHEN PLT > (SELECT AVG(PLT) FROM Laboratory) THEN 'Higher than Normal' ELSE 'Normal' END AS \"Abnormal Platelet Level\" FROM Laboratory ) AS T GROUP BY \"Abnormal Platelet Level\"\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT P.ID, P.SEX, P.Birthday, P.Description, P.`First Date`, P.Admission, P.Diagnosis FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE STRFTIME('%Y', L.Date) = '1984' AND (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) < 50 AND L.PLT BETWEEN 150 AND 450\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (COUNT(DISTINCT T1.ID) * 100.0) / (SELECT COUNT(DISTINCT ID) FROM Patient WHERE SEX = 'F' AND (julianday('now') - julianday(Birthday)) / 365 > 55) AS Percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (julianday('now') - julianday(T1.Birthday)) / 365 > 55 AND T2.PT > (SELECT AVG(PT) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT P.ID, P.SEX, P.Birthday, P.Description, P.`First Date`, P.Admission, P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.`First Date`) > '1992' AND L.PT BETWEEN 11.0 AND 13.5\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(T1.ID) FROM Examination AS T1 WHERE STRFTIME('%Y-%m-%d', T1.`Examination Date`) > '1997-01-01' AND T1.KCT = 'inactivated'\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(*) FROM Examination WHERE `aCL IgG` IS NOT NULL AND Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC BETWEEN 4.5 AND 11 AND T2.FG NOT BETWEEN 200 AND 400\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday > '1980-01-01' AND L.FG > 400\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`U-PRO` > 'Normal'\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` = 'Normal' AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG > (SELECT AVG(IGG) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.IGG BETWEEN 700 AND 1600 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.IGA BETWEEN 'normal range lower limit' AND 'normal range upper limit' ORDER BY T1.IGA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 70 AND 400 AND T1.`First Date` > '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Examination WHERE `aCL IgM` NOT BETWEEN 0.0 AND 1.0 GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP = 'Abnormal' AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE > 1.2 AND (YEAR(CURRENT_DATE) - YEAR(T1.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.RF = 'Normal' AND E.KCT = 'Positive'\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1985-1-1' AND T2.RF = 'Normal'\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE RF = 'Normal') AND Birthday <= DATE_SUB(CURDATE(), INTERVAL 60 YEAR)\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RF = 'Normal' AND E.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.C3 >= 90 AND T3.C3 <= 180 AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.HCT NOT BETWEEN 38.8 AND 50.0 ORDER BY T2.`aCL IgG` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Thrombosis = 1 AND T3.C4 BETWEEN 16 AND 47\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP = 'Normal' AND T1.Admission IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP != 'normal' ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.SM = 'Normal' AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE SM != 'normal') ORDER BY Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y-%m-%d', T1.`Examination Date`) > '1997-01-01' AND T2.SC170 = 'Normal'\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.SEX = 'F' AND T2.Symptoms IS NULL AND T3.SC170 = 'Normal'\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SSA = 'Normal' AND STRFTIME('%Y', Patient.`First Date`) < '2000'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA = 'Abnormal' ORDER BY T1.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT E.ID) FROM Examination E INNER JOIN Patient P ON E.ID = P.ID WHERE E.SSB = 'Normal' AND E.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Symptoms IS NOT NULL AND T1.SSB = 'normal'\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA = 'Normal' AND T2.SSB = 'Normal' AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.DNA = 'Abnormal'\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 LEFT JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA = 'Normal' AND T2.ID IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG BETWEEN 700 AND 1600 AND T1.Admission IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT CAST(SUM(CASE WHEN T2.GOT > 40 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT BETWEEN 10 AND 40\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT > 40\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT BETWEEN 10 AND 40 ORDER BY T2.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT BETWEEN 10 AND 40 AND T2.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT `First Date` FROM Patient WHERE ID = ( SELECT ID FROM Laboratory WHERE LDH BETWEEN 140 AND 280 ORDER BY LDH DESC LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(T1.`Examination Date`) FROM Examination AS T1 WHERE T1.`LDH` > (SELECT AVG(T2.`LDH`) FROM Laboratory AS T2 WHERE T2.ID = T1.ID)\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP > (SELECT AVG(ALP) FROM Laboratory) AND T2.Admission IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Laboratory WHERE ALP BETWEEN 20 AND 140\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < (SELECT AVG(TP) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP BETWEEN 6.0 AND 8.3\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT `Examination Date` FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB BETWEEN 3.5 AND 5.5 ORDER BY T2.ALB DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB >= 3.5 AND T2.ALB <= 5.5 AND T2.TP >= 6.0 AND T2.TP <= 8.3\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT `aCL IgG`, `aCL IgM`, `aCL IgA` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T2.SEX = 'Female' AND T3.UA BETWEEN 3.5 AND 7.2 ORDER BY T3.UA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE BETWEEN 0.6 AND 1.2\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CRE BETWEEN 0.6 AND 1.2 ORDER BY T3.`aCL IgG` DESC, T3.`aCL IgM` DESC, T3.`aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` > 1.2 AND T3.`ANA Pattern` = 'Peripheral'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT `ANA` FROM Examination WHERE ID = ( SELECT ID FROM Laboratory WHERE `T-BIL` BETWEEN 0.1 AND 1.2 ORDER BY `T-BIL` DESC LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` > (SELECT AVG(`T-CHO`) FROM Laboratory) AND T2.PT < 0\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-CHO` BETWEEN 150 AND 200 AND T3.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.TG <= 150 AND T3.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG BETWEEN 'Normal Range Lower Limit' AND 'Normal Range Upper Limit' ORDER BY L.TG DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Thrombosis = 0 AND T3.CPK > (SELECT AVG(CPK) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK BETWEEN 10 AND 120 AND T2.PT > 1.5\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE GLU > 140 ORDER BY Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.GLU BETWEEN 70 AND 100 AND T3.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC BETWEEN 4.5 AND 11.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SLE' AND Laboratory.WBC BETWEEN 4.0 AND 11.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC > (SELECT AVG(RBC) FROM Laboratory) AND T1.Admission = 'Outpatient'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.PLT BETWEEN 150 AND 450 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.ID, T2.PLT FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'MCTD' AND T2.PLT BETWEEN 150 AND 450\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.PT BETWEEN 11 AND 13.5\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Thrombosis = 'Severe' AND T3.PT = 'Normal'\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = \"Women's Soccer\"\t----- bird -----\tstudent_club",
    "1316": "SELECT M.phone FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = \"Women's Soccer\"\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = \"Women's Soccer\" AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_name ORDER BY COUNT(T2.link_to_member) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President' AND member.email LIKE '%Student_Club%'\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(T1.event_id) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.first_name = 'Sacha' AND T3.last_name = 'Harrison' AND T2.event_date LIKE '2019%' AND T2.type = 'Student_Club'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 10) AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'meeting'\t----- bird -----\tstudent_club",
    "1323": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 20) AND type <> 'fundraiser'\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM ( SELECT COUNT(*) as attendance_count FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.type = 'meeting' AND STRFTIME('%Y', event.event_date) = '2020' GROUP BY event.event_id )\t----- bird -----\tstudent_club",
    "1325": "SELECT T1.expense_description, MAX(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.event_status = 'support'\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT last_name FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Law and Constitutional Studies')\t----- bird -----\tstudent_club",
    "1329": "SELECT county FROM zip_code WHERE zip_code = (SELECT zip FROM member WHERE first_name = 'Sherri' AND last_name = 'Ramsey')\t----- bird -----\tstudent_club",
    "1330": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT amount FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Food' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Meeting' AND link_to_member IN (SELECT member_id FROM member WHERE position = 'Student_Club'))\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code.city, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'President' AND member.organization = 'Student_Club'\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T2.category = 'advertisement' AND T3.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT T2.department FROM major AS T2 INNER JOIN member AS T1 ON T2.major_id = T1.link_to_major WHERE T1.first_name = 'Pierce' OR T1.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Speaker')\t----- bird -----\tstudent_club",
    "1338": "SELECT expense_id, expense_description, approved FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Meeting' AND T2.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Elijah' AND T2.last_name = 'Allen' AND (STRFTIME('%m', T1.expense_date) = '09' OR STRFTIME('%m', T1.expense_date) = '10')\t----- bird -----\tstudent_club",
    "1340": "SELECT (SUM(CASE WHEN strftime('%Y', T1.event_date) = '2020' THEN T2.spent ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T1.event_date) = '2019' THEN T2.spent ELSE 0 END)) AS difference FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019/9/4'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM event WHERE event_date = '2019/9/14' AND type = 'fundraising'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "1347": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = \"O'Gallagher\"\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(budget_id) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'November Meeting') AND spent > amount\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker')\t----- bird -----\tstudent_club",
    "1350": "SELECT T1.status FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Post Cards, Posters' AND T3.expense_date = '2019/8/20'\t----- bird -----\tstudent_club",
    "1351": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.source = 'dues' ORDER BY T1.date_received ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1359": "SELECT CASE WHEN (SELECT spent FROM budget WHERE category = 'Advertisement' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')) > (SELECT spent FROM budget WHERE category = 'Advertisement' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting')) THEN 1 ELSE 0 END AS Result\t----- bird -----\tstudent_club",
    "1360": "SELECT (T1.spent / T2.total_spent) * 100 AS percentage FROM budget AS T1 INNER JOIN ( SELECT link_to_event, SUM(spent) AS total_spent FROM budget GROUP BY link_to_event ) AS T2 ON T1.link_to_event = T2.link_to_event INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T1.category = 'Parking' AND T3.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description LIKE '%pizza%'\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T2.expense_description, T2.cost FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget ORDER BY T1.remaining ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1366": "SELECT T2.first_name, T2.last_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1370": "SELECT expense_description, cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(*) FROM \"attendance\" WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = \"Women's Soccer\")\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(DISTINCT member_id) FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(*) FROM attendance WHERE link_to_member = (SELECT member_id FROM member WHERE phone = '954-555-6240')\t----- bird -----\tstudent_club",
    "1375": "SELECT first_name, last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'closed' ORDER BY (T2.spent / T2.amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(member_id) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS HighestSpent FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE type = 'meeting' AND event_date LIKE '2020-%'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT first_name, last_name FROM member WHERE member_id IN (SELECT link_to_member FROM attendance GROUP BY link_to_member HAVING COUNT(link_to_event) > 7)\t----- bird -----\tstudent_club",
    "1382": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.major_name = 'Interior Design' AND T4.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT first_name, last_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE city = 'Georgetown' AND state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Grant' AND T2.last_name = 'Gilmour'\t----- bird -----\tstudent_club",
    "1385": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff'))\t----- bird -----\tstudent_club",
    "1387": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN budget AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT T1.first_name, T1.last_name, T2.source, SUM(T2.amount) AS total_income FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id ORDER BY total_income DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1389": "SELECT T1.event_name FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event ORDER BY T2.cost ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1390": "SELECT (CAST((SELECT cost FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff'))) AS REAL) * 100 / (SELECT SUM(cost) FROM expense)) AS \"percentage\"\t----- bird -----\tstudent_club",
    "1391": "SELECT (SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Finance')) / (SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics')) AS ratio\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE STRFTIME('%Y-%m', date_received) = '2019-09' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(*) FROM attendance AS A INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'Community Theater' AND E.event_date LIKE '2019%'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.link_to_event), T3.major_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(cost) FROM expense WHERE expense_description LIKE '%food%' AND approved = 'Yes' AND link_to_budget IN (SELECT budget_id FROM budget WHERE category = 'Food' AND event_status = 'Past')\t----- bird -----\tstudent_club",
    "1398": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1399": "SELECT CASE WHEN EXISTS ( SELECT 1 FROM \"attendance\" AS T1 INNER JOIN \"event\" AS T2 ON T1.link_to_event = T2.event_id INNER JOIN \"member\" AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women's Soccer' AND T3.first_name = 'Maya' AND T3.last_name = 'Mclean' ) THEN 'Yes' ELSE 'No' END AS \"Did Maya Mclean attend the 'Women's Soccer' event?\"\t----- bird -----\tstudent_club",
    "1400": "SELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM event WHERE event_date LIKE '2019%'\t----- bird -----\tstudent_club",
    "1401": "SELECT expense.cost FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND expense.expense_description = 'posters'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(t_shirt_size) AS count FROM member GROUP BY t_shirt_size ORDER BY count DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'closed' ORDER BY (T2.spent - T2.amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT T1.expense_description, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T1.approved = 'Yes' GROUP BY T1.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT category, amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') ORDER BY amount ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, amount FROM budget WHERE category = 'Advertising' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(T2.spent) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T1.category = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date LIKE '2019-08-20%'\t----- bird -----\tstudent_club",
    "1410": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) AS total_cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.member_id\t----- bird -----\tstudent_club",
    "1411": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT T2.zip FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT CAST(COUNT(CASE WHEN T2.major_name = 'Business' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT T1.type FROM event AS T1 WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(income_id) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(member_id) FROM member WHERE t_shirt_size = 'XL'\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT M.last_name, MA.major_name, MA.department, MA.college FROM member AS M INNER JOIN major AS MA ON M.link_to_major = MA.major_id WHERE MA.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T1.type = 'guest speaker' AND T2.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T1.type = 'Social' AND T1.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T1.last_name, T1.position FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'pizza' AND T2.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T2.last_name FROM \"attendance\" AS T1 INNER JOIN \"member\" AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'women\\'s soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT (CAST(SUM(CASE WHEN T2.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(T2.income_id) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'medium'\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT T2.country FROM zip_code AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T1.type = 'Post Office Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'Post Office Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T2.link_to_event FROM income AS T1 INNER JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member WHERE T1.amount > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T1.first_name, T1.last_name, T2.link_to_event FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN expense AS T3 ON T1.member_id = T3.link_to_member WHERE T3.approved = 'Yes' AND DATE(T3.expense_date) BETWEEN '2019-10-01' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND major.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount > 20 AND T1.date_received BETWEEN '9/10/2019' AND '11/19/2019'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Education' AND T2.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT CAST(SUM(CASE WHEN T1.spent > T1.amount THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.budget_id) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description, AVG(cost) AS average_cost FROM expense GROUP BY expense_description HAVING AVG(cost) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'XL'\t----- bird -----\tstudent_club",
    "1446": "SELECT CAST(COUNT(CASE WHEN type = 'PO Box' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent < T2.amount\t----- bird -----\tstudent_club",
    "1448": "SELECT event.event_name, event.event_date FROM event INNER JOIN budget ON event.event_id = budget.link_to_event INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description LIKE '%pizza%' AND expense.cost > 50 AND expense.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT T2.first_name, T2.last_name, T4.major_name FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T4 ON T2.link_to_major = T4.major_id WHERE T1.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT T3.city, T3.county FROM event AS T1 INNER JOIN income AS T2 ON T1.event_id = T2.link_to_member INNER JOIN zip_code AS T3 ON T1.location = T3.zip_code GROUP BY T1.event_id HAVING COUNT(T2.income_id) > 40\t----- bird -----\tstudent_club",
    "1451": "SELECT T1.first_name, T1.last_name, SUM(T3.cost) AS total_expense FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id GROUP BY T1.member_id HAVING COUNT(DISTINCT T3.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(T2.amount) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position != 'member'\t----- bird -----\tstudent_club",
    "1453": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE category = 'Parking' AND spent < (SELECT AVG(spent) FROM budget WHERE category = 'Parking'))\t----- bird -----\tstudent_club",
    "1454": "SELECT CAST(SUM(expense.cost) AS REAL) * 100 / (SELECT SUM(cost) FROM expense) AS percentage FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.type = 'meeting'\t----- bird -----\tstudent_club",
    "1455": "SELECT T1.budget_id FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description IN ('water', 'chips', 'cookies') ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name, m.last_name FROM member m INNER JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id ORDER BY SUM(e.cost) DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT 100.0 * (SUM(CASE WHEN T2.state = 'New Jersey' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE 0 END)) / COUNT(*) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT T1.first_name, T1.last_name, T2.expense_description, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description IN ('water', 'veggie tray', 'supplies')\t----- bird -----\tstudent_club",
    "1461": "SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T2.category, T2.amount FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT M.first_name, M.last_name, I.amount FROM member AS M INNER JOIN income AS I ON M.member_id = I.link_to_member WHERE I.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "1465": "SELECT T2.category FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT T1.first_name, T1.last_name, T3.college FROM member AS T1 INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT event.event_name, SUM(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'speaker gifts' GROUP BY event.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT zip_code.city, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T1.zip = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS Ratio FROM customers\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '2012%' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND STRFTIME('%Y', T1.Date) = '2013'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN \"transactions_1k\" AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date LIKE '2011%' GROUP BY T1.CustomerID ORDER BY SUM(T2.Amount) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(CustomerID) FROM yearmonth WHERE Date LIKE '2012%' AND Consumption < 30000 AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM')\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT (SUM(T1.Consumption) - SUM(T2.Consumption)) AS Difference FROM yearmonth AS T1 INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID INNER JOIN yearmonth AS T2 INNER JOIN customers AS T4 ON T2.CustomerID = T4.CustomerID WHERE T3.Currency = 'CZK' AND T4.Currency = 'EUR' AND T1.Date LIKE '2012%' AND T2.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT STRFTIME('%Y', T1.Date) AS Year FROM \"transactions_1k\" AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY Year ORDER BY SUM(T1.Amount) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM yearmonth GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT STRFTIME('%Y', T1.Date) AS Year, SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT Date, MAX(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND STRFTIME('%Y', Date) = '2013' GROUP BY Date ORDER BY MAX(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT (SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T2.Currency = 'CZK' AND T1.Date LIKE '2013%') - (SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T2.Currency = 'CZK' AND T1.Date LIKE '2013%') AS 'SME-LAM', (SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T2.Currency = 'CZK' AND T1.Date LIKE '2013%') - (SELECT AVG(T1.Consumption) FROM\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment, ((SUM(CASE WHEN Date BETWEEN '2013-01-01' AND '2013-12-31' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Date BETWEEN '2012-01-01' AND '2012-12-31' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN Date BETWEEN '2012-01-01' AND '2012-12-31' THEN Consumption ELSE 0 END)) * 100 AS PercentageIncrease FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T2.Segment IN ('SME', 'LAM', 'KAM') GROUP BY Segment ORDER BY PercentageIncrease DESC, PercentageIncrease ASC LIMIT 1,1\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '2013-08-01' AND '2013-11-30'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Segment = 'discount' AND Country = 'Czech Republic') - (SELECT COUNT(*) FROM gasstations WHERE Segment = 'discount' AND Country = 'Slovakia') AS Difference\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = '2013-04') - (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = '2013-04') AS Consumption_Difference\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'Czech koruna') - (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'Euro') AS Difference FROM customers WHERE Segment = 'SME' AND (Currency = 'Czech koruna' OR Currency = 'Euro')\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID, T1.Segment, T1.Currency, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'Euro' AND T2.Date LIKE '2013-10%' ORDER BY T2.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, T2.Segment, MAX(T1.Consumption) AS Max_Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' GROUP BY T1.CustomerID ORDER BY Max_Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) FROM yearmonth WHERE Date = '2013-05' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM')\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (SELECT COUNT(*) FROM yearmonth WHERE Consumption > 46.73 AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM')) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM') AS Percentage\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) as NumberOfValueForMoneyStations FROM gasstations WHERE Segment = 'Value for Money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'KAM' AND Currency = 'Euro') * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'KAM') AS Percentage FROM customers\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (CAST((SELECT COUNT(*) FROM yearmonth WHERE Consumption > 528.3 AND Date LIKE '2012-02%') AS REAL) / (SELECT COUNT(*) FROM customers)) * 100 AS Percentage FROM customers\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'Premium') * 100.0 / (SELECT COUNT(*) FROM gasstations WHERE Country = 'Slovakia') AS Percentage\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date LIKE '2013-09-%' ORDER BY Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT T1.Segment FROM customers AS T1 INNER JOIN \"yearmonth\" AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '2013-09%' GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND STRFTIME('%Y-%m', T2.Date) = '2012-06' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT DISTINCT P.Description FROM products AS P INNER JOIN transactions_1k AS T ON P.ProductID = T.ProductID WHERE T.Date LIKE '2013-09%'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T2.Country FROM \"transactions_1k\" AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE strftime('%Y-%m', T1.Date) = '2013-06'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT T2.ChainID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT DISTINCT T3.Description FROM \"transactions_1k\" AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Amount * Price) AS AverageTotalPrice FROM transactions_1k WHERE strftime('%Y-%m', Date) = '2012-01'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'Euro' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'Czech Republic'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T2.Time FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'Czech Republic' AND T1.Price > 1000\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'Czech Republic' AND T1.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(T1.Price * T1.Amount) FROM \"transactions_1k\" AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'Czech Republic'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(T4.Price) FROM customers AS T1 INNER JOIN transactions_1k AS T4 ON T1.CustomerID = T4.CustomerID WHERE T1.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM \"transactions_1k\" WHERE Date = '2012-08-25' ORDER BY Amount DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' ORDER BY T2.Time ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T1.Segment FROM customers AS T1 INNER JOIN \"transactions_1k\" AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' AND transactions_1k.Date = '2012-08-26' AND transactions_1k.Time LIKE 'AM%'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers ORDER BY CustomerID ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT T2.Date, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Price = 124.05 AND strftime('%Y-%m', T2.Date) = '2012-01'\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT T1.Currency FROM customers AS T1 INNER JOIN \"transactions_1k\" AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y-%m', T2.Date) = '2013-06' AND T2.Amount = 214582.17\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T2.Country FROM customers AS T1 INNER JOIN gasstations AS T2 ON T1.CustomerID = T2.GasStationID INNER JOIN \"transactions_1k\" AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.CardID = 667467\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T2.Country FROM \"transactions_1k\" AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR')) / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25') AS Percentage\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT CAST((SUM(CASE WHEN strftime('%Y', T2.Date) = '2012' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T2.Date) = '2013' THEN T2.Consumption ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN strftime('%Y', T2.Date) = '2012' THEN T2.Consumption ELSE 0 END) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' AND Price * Amount = 634.8)\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Price*Amount) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT CAST(SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM gasstations WHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(T1.Amount * T1.Price) AS TotalSpent FROM \"transactions_1k\" AS T1 WHERE T1.CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID GROUP BY T2.Description ORDER BY SUM(T1.Amount) DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, AVG(T2.Price) AS AveragePrice, T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY SUM(T2.Amount * T2.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT T2.Country FROM \"transactions_1k\" AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ProductID = 2 ORDER BY T1.Price DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T1.CustomerID, T3.Consumption FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T2.ProductID = 5 AND T1.Price > 29.00 AND T3.Date = '2012-08'\t----- bird -----\tdebit_card_specializing"
}