{
    "0": "SELECT MAX(T1.`Percent (%) Eligible Free (K-12)`) FROM frpm AS T1 WHERE T1.`County Name` = 'Alameda'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT frpm.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`EdOpsCode` = 'CON' AND frpm.`Percent (%) Eligible Free (Ages 5-17)` IS NOT NULL ORDER BY frpm.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT Zip FROM schools WHERE Charter = 1 AND District = 'Fresno County Office of Education'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT T2.MailStreet FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE FundingType = 'Directly funded' AND Charter = 1 AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T1.sname FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 500 AND T2.Magnet = 1\t----- bird -----\tcalifornia_schools",
    "7": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores WHERE NumGE1500 > 1500)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT s.NumTstTakr  FROM satscores AS s  INNER JOIN frpm AS f ON s.cds = f.CDSCode  WHERE f.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath > 560 AND T1.FundingType = 'Directly funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM frpm INNER JOIN satscores ON frpm.`CDSCode` = satscores.`cds` WHERE satscores.`AvgScrRead` = (SELECT MAX(`AvgScrRead`) FROM satscores WHERE `AvgScrRead` IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "11": "SELECT S.CDSCode FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE F.`Enrollment (K-12)` > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(frpm.`Percent (%) Eligible Free (Ages 5-17)`)  FROM frpm  INNER JOIN satscores ON frpm.CDSCode = satscores.cds  WHERE (satscores.NumGE1500 * 1.0 / satscores.NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT schools.Phone FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr > 0 ORDER BY (satscores.NumGE1500 / satscores.NumTstTakr) DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT schools.NCESSchool FROM frpm INNER JOIN schools ON CAST(frpm.CDSCode AS TEXT) = schools.CDSCode ORDER BY frpm.\"Enrollment (Ages 5-17)\" DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T1.District, MAX(T2.AvgScrRead) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Active' GROUP BY T1.District ORDER BY MAX(T2.AvgScrRead) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Merged' AND T1.County = 'Alameda' AND T2.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT schools.CharterNum, satscores.AvgScrWrite FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrWrite > 499 ORDER BY satscores.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno' AND T1.FundingType = 'Directly funded' AND T2.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT s.Phone FROM schools AS s INNER JOIN satscores AS ss ON ss.cds = s.CDSCode ORDER BY ss.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.City = 'Los Angeles' AND T2.`Free Meal Count (K-12)` > 500.0 AND T2.`FRPM Count (K-12)` < 700.0\t----- bird -----\tcalifornia_schools",
    "22": "SELECT T1.sname FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Contra Costa' ORDER BY T1.NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "23": "SELECT T2.School, T2.Street || ', ' || T2.City || ', ' || T2.State || ' ' || T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE ABS(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT T1.`School Name` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T2.`NumGE1500` > 0\t----- bird -----\tcalifornia_schools",
    "25": "SELECT T2.School, T2.FundingType FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cname = 'Riverside' AND T1.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "26": "SELECT T2.School, T2.Street, T2.City, T2.State, T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`School Type` = 'High Schools (Public)' AND T2.City = 'Monterey' AND T1.`FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "27": "SELECT T2.School, T2.Phone, T2.Ext, AVG(T1.AvgScrWrite)  FROM satscores AS T1  INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode  WHERE T2.OpenDate > '1991-12-31' OR T2.ClosedDate < '2000-01-01'  GROUP BY T2.School, T2.Phone, T2.Ext\t----- bird -----\tcalifornia_schools",
    "28": "SELECT T2.School, T2.DOCType  FROM frpm AS T1  INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode  WHERE T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` >  (SELECT AVG(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`)   FROM frpm AS T1   INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode   WHERE T2.FundingType = 'Locally funded')\t----- bird -----\tcalifornia_schools",
    "29": "SELECT T1.OpenDate FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.enroll12 = (SELECT MAX(enroll12) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "30": "SELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `frpm`.`Percent (%) Eligible Free (K-12)` FROM `frpm` ORDER BY `frpm`.`Enrollment (K-12)` DESC LIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "32": "SELECT T1.School, (T2.`Free Meal Count (K-12)` / T2.`Enrollment (K-12)`) AS EligibleMealRate  FROM frpm AS T2  INNER JOIN schools AS T1 ON T2.CDSCode = T1.CDSCode  WHERE T1.SOC = '66'  ORDER BY T2.`Free Meal Count (K-12)` DESC  LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T2.Website, T1.\"School Name\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Free Meal Count (Ages 5-17)\" BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT T2.`Percent (%) Eligible Free (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`AdmFName1` = 'Kacey' AND T1.`AdmLName1` = 'Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T1.AdmEmail1  FROM schools AS T1  INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds  WHERE T1.Charter = 1  ORDER BY T2.enroll12 ASC  LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2  FROM satscores AS T1  INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode  WHERE T1.NumGE1500 = (SELECT MAX(T3.NumGE1500) FROM satscores AS T3)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT T2.Street, T2.City, T2.Zip, T2.State FROM (SELECT cds, MIN(NumGE1500 * 1.0 / NumTstTakr) AS min_excellence_rate FROM satscores WHERE NumTstTakr > 0 GROUP BY cds) AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.min_excellence_rate LIMIT 1\t----- bird -----\tcalifornia_schools",
    "38": "SELECT schools.Website FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.cname = 'Los Angeles' AND satscores.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Fresno' AND T2.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T2.Phone  FROM schools AS T2  INNER JOIN satscores AS T1 ON T2.CDSCode = T1.cds  WHERE T2.District = 'Fresno Unified'  AND T1.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores WHERE cds IN (SELECT CDSCode FROM schools WHERE District = 'Fresno Unified'))\t----- bird -----\tcalifornia_schools",
    "41": "WITH RankedSchools AS (     SELECT T1.AvgScrRead, T2.County, T2.School,            ROW_NUMBER() OVER (PARTITION BY T2.County ORDER BY T1.AvgScrRead DESC) AS rank     FROM satscores AS T1     INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode     WHERE T2.Virtual IN ('F', 'V') ) SELECT School FROM RankedSchools WHERE rank <= 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T2.EdOpsName FROM schools AS T2 WHERE T2.CDSCode = (SELECT T1.cds FROM satscores AS T1 ORDER BY T1.AvgScrMath DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "43": "SELECT T1.AvgScrMath, T2.County FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY (T1.AvgScrMath + T1.AvgScrRead + T1.AvgScrWrite) / 3 LIMIT 1\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(T1.AvgScrWrite), T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T1.sname, AVG(T1.AvgScrWrite) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich' GROUP BY T1.sname\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T2.sname FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.SOCType = 'State Special Schools' AND T2.enroll12 = (SELECT MAX(enroll12) FROM satscores WHERE cds IN (SELECT T1.CDSCode FROM schools AS T1 WHERE T1.SOCType = 'State Special Schools'))\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(CDSCode) / 12.0 AS Monthly_Average FROM schools WHERE County = 'Alameda' AND DOCType = 'Elementary School District' AND STRFTIME('%Y', OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT      (SUM(CASE WHEN DOCType = 'Unified School District' THEN 1 ELSE 0 END) * 1.0) /      (SUM(CASE WHEN DOCType = 'Elementary School District' THEN 1 ELSE 0 END)) AS ratio  FROM schools  WHERE StatusType = 'Merged' AND County = 'Orange';\t----- bird -----\tcalifornia_schools",
    "49": "SELECT T2.School, T2.ClosedDate FROM schools AS T2 INNER JOIN (SELECT County, COUNT(StatusType) AS ClosedCount FROM schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY ClosedCount DESC LIMIT 1) AS T1 ON T2.County = T1.County WHERE T2.StatusType = 'Closed'\t----- bird -----\tcalifornia_schools",
    "50": "SELECT T1.Street, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T2.MailStrAbr, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.MailCity = 'Lakeport' AND T2.NumGE1500 >= 1\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE (AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian') OR (AdmFName2 = 'Avetik' AND AdmLName2 = 'Atoian')\t----- bird -----\tcalifornia_schools",
    "55": "SELECT      (SELECT COUNT(*) FROM schools WHERE County = 'Colusa' AND MailState = 'CA') * 1.0 /      NULLIF((SELECT COUNT(*) FROM schools WHERE County = 'Humboldt' AND MailState = 'CA'), 0) AS ratio\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active' AND MailCity = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT S.Phone, S.Ext FROM satscores AS SS INNER JOIN schools AS S ON SS.cds = S.CDSCode ORDER BY SS.AvgScrWrite DESC LIMIT 1 OFFSET 332\t----- bird -----\tcalifornia_schools",
    "58": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE ( (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName2 = 'Mike' AND AdmLName2 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez') OR (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez') )\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = '1' AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = '1' AND City = 'Hickman' AND DOCType = 'Elementary School District';\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(DISTINCT CDSCode) FROM frpm WHERE `Charter School (Y/N)` = 0 AND `County Name` = 'Los Angeles' AND `Percent (%) Eligible Free (K-12)` < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT AdmFName1, AdmLName1, AdmFName2, AdmLName2, School, City FROM schools WHERE CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(CASE WHEN schools.FundingType = 'Locally funded' AND schools.Charter = '1' THEN 1 END) * 100.0 / COUNT(CASE WHEN schools.Charter = '1' THEN 1 END)) AS percentage FROM schools WHERE schools.County = 'Santa Clara'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE FundingType = 'Directly funded' AND County = 'Stanislaus' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE StatusType = 'Closed' AND DOCType = 'Community College District' AND strftime('%Y', ClosedDate) = '1989' AND City = 'San Francisco';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(*) as closure_count FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOCType = 'Youth Authority Facilities' GROUP BY County ORDER BY closure_count DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = '31';\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE SOCType = 'District Community Day Schools' AND County = 'Alpine' AND StatusType IN ('Active', 'Closed')\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT T1.`District Code`  FROM frpm AS T1  INNER JOIN schools AS T2  ON T1.CDSCode = T2.CDSCode  WHERE T2.City = 'Fresno' AND T2.Magnet = 0\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(T1.\"Enrollment (Ages 5-17)\") FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOCType = 'State Special Schools' AND T2.City = 'Fremont' AND T1.\"Academic Year\" = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`EdOpsName` = 'Youth Authority School' AND schools.`MailStreet` = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT frpm.`Low Grade` FROM schools INNER JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` WHERE schools.`EdOpsName` = 'District Special Education Consortia School' AND schools.`NCESDist` = '0613360'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.EILName, T2.`School Name` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`NSLP Provision Status` = 'Breakfast Provision 2' AND T2.`County Code` = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T1.City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Merced' AND T2.`NSLP Provision Status` = 'Lunch Provision 2' AND T2.`Low Grade` = '9' AND T2.`High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT schools.School, frpm.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.GSserved = 'K-9' AND frpm.`County Name` = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) FROM schools WHERE Virtual = 'F' AND County IN ('San Diego', 'Santa Barbara') GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT SOCType, School, Latitude FROM schools WHERE Latitude = (SELECT MAX(Latitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT T1.City, T1.School, T2.`Low Grade` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.State = 'CA' AND T1.Latitude = (SELECT MIN(Latitude) FROM schools WHERE State = 'CA')\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools WHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "SELECT (SELECT COUNT(*) FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE S.Magnet = 1 AND S.GSserved = 'K-8' AND F.\"NSLP Provision Status\" = 'Multiple Provision Types') AS SchoolsOfferingMultipleProvisionTypes, City, COUNT(*) AS SchoolCount FROM schools WHERE GSserved = 'K-8' GROUP BY City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT name, District FROM ( SELECT AdmFName1 AS name, District FROM schools WHERE AdmFName1 IS NOT NULL UNION ALL SELECT AdmFName2 AS name, District FROM schools WHERE AdmFName2 IS NOT NULL ) AS combined_names GROUP BY name, District ORDER BY COUNT(*) DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT T1.`Percent (%) Eligible Free (K-12)`, T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`AdmFName1` = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "86": "SELECT AdmLName1, District, County, School FROM schools WHERE CharterNum = '0040'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT DISTINCT AdmEmail1, AdmEmail2 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOCType = 'Intermediate/Middle Schools (Public)' OR SOCType = 'Unified School District') AND AdmEmail1 IS NOT NULL AND AdmEmail2 IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T1.AdmEmail1, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores WHERE NumGE1500 >= 1500)\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT CASE WHEN AVG(A12) > AVG(A13) THEN '1995' ELSE '1996' END AS higher_year, AVG(A12) AS avg_1995, AVG(A13) AS avg_1996 FROM district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT T1.district_id)  FROM district AS T1  INNER JOIN client AS T2 ON T1.district_id = T2.district_id  WHERE T1.A11 BETWEEN 6000 AND 10000 AND T2.gender = 'F'\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT DISTINCT A.account_id, (SELECT MAX(D.A11) FROM district D) - (SELECT MIN(D.A11) FROM district D) AS salary_gap FROM client C INNER JOIN disp D ON C.client_id = D.client_id INNER JOIN account A ON D.account_id = A.account_id WHERE C.gender = 'F' AND C.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\t----- bird -----\tfinancial",
    "95": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.birth_date = (SELECT MAX(birth_date) FROM client) AND T3.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district) LIMIT 1)\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT T3.client_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT C.client_id FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id WHERE A.frequency = 'POPLATEK PO OBRATU' AND D.type = 'DISPONENT'\t----- bird -----\tfinancial",
    "98": "SELECT T2.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T1.date) = '1997' AND T1.amount = (SELECT MIN(T3.amount) FROM loan AS T3 WHERE STRFTIME('%Y', T3.date) = '1997') AND T2.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id  FROM loan AS T2  INNER JOIN account AS T1 ON T1.account_id = T2.account_id  WHERE T2.duration > 12 AND STRFTIME('%Y', T1.date) = '1993'  GROUP BY T1.account_id  HAVING MAX(T2.amount) = (SELECT MAX(amount) FROM loan WHERE duration > 12 AND account_id IN (SELECT account_id FROM account WHERE STRFTIME('%Y', date) = '1993'))\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id WHERE C.gender = 'F' AND C.birth_date < '1950-01-01' AND A.district_id IN (SELECT district_id FROM district WHERE A2 = 'Sokolov')\t----- bird -----\tfinancial",
    "101": "SELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1995-03-24'\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.balance > 3000\t----- bird -----\tfinancial",
    "103": "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT account.date FROM trans INNER JOIN account ON trans.account_id = account.account_id WHERE trans.amount = 840 AND trans.date = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT T2.district_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T4.amount) FROM trans AS T4 WHERE T4.account_id IN (SELECT T2.account_id FROM disp AS T2 INNER JOIN card AS T1 ON T1.disp_id = T2.disp_id WHERE T1.issued = '1996-10-21')\t----- bird -----\tfinancial",
    "107": "SELECT T2.gender FROM client AS T2 INNER JOIN disp AS T3 ON T2.client_id = T3.client_id INNER JOIN account AS T4 ON T3.account_id = T4.account_id INNER JOIN district AS T5 ON T4.district_id = T5.district_id WHERE T3.type = 'OWNER' AND T5.A11 = (SELECT MAX(A11) FROM district) AND T2.birth_date = (SELECT MIN(T6.birth_date) FROM client AS T6 INNER JOIN disp AS T7 ON T6.client_id = T7.client_id INNER JOIN account AS T8 ON T7.account_id = T8.account_id INNER JOIN district AS T9 ON T8.district_id = T9.district_id WHERE T7.type = 'OWNER' AND T9.A11 = (SELECT MAX(A11) FROM district))\t----- bird -----\tfinancial",
    "108": "SELECT MIN(trans.amount) FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE trans.date >= account.date AND disp.type = 'OWNER' AND loan.amount = (SELECT MAX(amount) FROM loan)\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT T3.client_id) FROM client AS T3 INNER JOIN disp AS T4 ON T3.client_id = T4.client_id INNER JOIN account AS T5 ON T4.account_id = T5.account_id INNER JOIN district AS T6 ON T5.district_id = T6.district_id WHERE T3.gender = 'F' AND T6.A2 = 'Jesenik' AND T4.type = 'OWNER'\t----- bird -----\tfinancial",
    "110": "SELECT disp.disp_id FROM disp INNER JOIN trans ON disp.account_id = trans.account_id WHERE trans.amount = 5100 AND trans.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice' AND STRFTIME('%Y', T1.date) = '1996'\t----- bird -----\tfinancial",
    "112": "SELECT D2.A2 AS district_name FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN district AS D2 ON A.district_id = D2.district_id WHERE C.gender = 'F' AND C.birth_date = '1976-01-29' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "113": "SELECT client.birth_date FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE loan.amount = 98832 AND loan.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Hl.m. Praha' ORDER BY T1.date ASC LIMIT 1\t----- bird -----\tfinancial",
    "115": "WITH MaxDistrict AS (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1) SELECT (COUNT(client_id) * 100.0 / (SELECT COUNT(client_id) FROM client WHERE district_id = (SELECT district_id FROM MaxDistrict))) AS percentage FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM MaxDistrict);\t----- bird -----\tfinancial",
    "116": "SELECT (balance_1998 - balance_1993) * 1.0 / balance_1993 AS increase_rate FROM ( SELECT T1.account_id, (SELECT T2.balance FROM trans AS T2 WHERE T2.account_id = T1.account_id AND T2.date <= '1993-03-22' ORDER BY T2.date DESC LIMIT 1) AS balance_1993, (SELECT T3.balance FROM trans AS T3 WHERE T3.account_id = T1.account_id AND T3.date <= '1998-12-27' ORDER BY T3.date DESC LIMIT 1) AS balance_1998 FROM loan AS T1 INNER JOIN disp AS T4 ON T1.account_id = T4.account_id WHERE T1.date = '1993-07-05' AND T4.type = 'OWNER' ) AS balances WHERE balance_1993 IS NOT NULL AND balance_1998 IS NOT NULL\t----- bird -----\tfinancial",
    "117": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / NULLIF(SUM(amount), 0)) AS percentage FROM loan;\t----- bird -----\tfinancial",
    "118": "SELECT (COUNT(DISTINCT CASE WHEN loan.status = 'C' THEN loan.account_id END) * 100.0 / COUNT(DISTINCT loan.account_id)) AS percentage FROM loan WHERE loan.amount < 100000;\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T3.A2, T3.A3 FROM account AS T1 INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.date LIKE '1993%' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT A.account_id, A.frequency FROM account AS A INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id INNER JOIN district AS D2 ON C.district_id = D2.district_id WHERE A.date BETWEEN '1995-01-01' AND '2000-12-31' AND D2.A3 = 'east Bohemia' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "121": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT district.A2, district.A3 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.loan_id = '4990'\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT T1.loan_id, T3.A2, T3.A11 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT T3.A2, ((T3.A13 - T3.A12) / T3.A12 * 100) AS unemployment_increment FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT (COUNT(T1.account_id) * 100.0 / NULLIF(COUNT(CASE WHEN strftime('%Y', T1.date) = '1993' THEN 1 END), 0)) AS percentage FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Decin' AND strftime('%Y', T1.date) = '1993';\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT district.A2, COUNT(client.client_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' AND disp.type = 'OWNER' GROUP BY district.A2 ORDER BY COUNT(client.client_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "129": "SELECT district.A2, SUM(trans.amount) FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.operation = 'VYBER' AND trans.date BETWEEN '1996-01-01' AND '1996-01-31' GROUP BY district.A2 ORDER BY SUM(trans.amount) DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(*) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id LEFT JOIN card AS T4 ON T1.disp_id = T4.disp_id WHERE T1.type = 'OWNER' AND T3.A3 = 'south Bohemia' AND T4.disp_id IS NULL\t----- bird -----\tfinancial",
    "131": "SELECT district.A2 FROM district INNER JOIN (SELECT account.district_id, COUNT(*) AS loan_count FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.status IN ('C', 'D') GROUP BY account.district_id) AS loan_counts ON district.district_id = loan_counts.district_id ORDER BY loan_counts.loan_count DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(L.amount) FROM loan AS L INNER JOIN disp AS D ON L.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id WHERE C.gender = 'M' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "133": "SELECT district_id, A2 FROM district WHERE A13 = (SELECT MAX(A13) FROM district)\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A16 = (SELECT MAX(A16) FROM district)\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.operation = 'VYBER KARTOU' AND T1.frequency = 'POPLATEK MESICNE' AND T2.balance < 0\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.amount >= 250000 AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT A.account_id) FROM account AS A INNER JOIN loan AS L ON A.account_id = L.account_id WHERE L.status IN ('C', 'D') AND A.district_id = 1\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(client.client_id) FROM client WHERE district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1) AND gender = 'M'\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT district.A2 FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN trans ON account.account_id = trans.account_id WHERE trans.amount > 10000 AND STRFTIME('%Y', trans.date) = '1997'\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT T1.account_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT T1.account_id FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T2.type = 'gold'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(T3.amount) FROM trans AS T3 INNER JOIN account AS T2 ON T3.account_id = T2.account_id INNER JOIN disp AS T1 ON T1.account_id = T2.account_id WHERE T3.operation = 'VYBER KARTOU' AND T1.type = 'OWNER' AND STRFTIME('%Y', T3.date) = '2021' GROUP BY STRFTIME('%m', T3.date)\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT disp.client_id  FROM trans  INNER JOIN disp ON trans.account_id = disp.account_id  WHERE trans.operation = 'VYBER KARTOU'  AND trans.amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND STRFTIME('%Y', date) = '1998')  AND STRFTIME('%Y', trans.date) = '1998'  AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT T1.client_id  FROM client AS T1  INNER JOIN disp AS T2 ON T1.client_id = T2.client_id  INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id  INNER JOIN loan AS T4 ON T2.account_id = T4.account_id  WHERE T1.gender = 'F' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT T1.account_id) FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T2.gender = 'F' AND T3.A3 = 'south Bohemia' AND T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "148": "SELECT DISTINCT T1.account_id  FROM account AS T1  INNER JOIN district AS T2 ON T1.district_id = T2.district_id  INNER JOIN loan AS T3 ON T1.account_id = T3.account_id  WHERE T2.A2 = 'Tabor'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT T1.frequency FROM account AS T1 LEFT JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.account_id IS NULL AND T3.A11 > 8000 AND T3.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'north Bohemia' AND T3.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ'\t----- bird -----\tfinancial",
    "152": "SELECT AVG(T1.A15) FROM district AS T1 WHERE T1.A15 > 4000 AND T1.district_id IN (SELECT T2.district_id FROM account AS T2 WHERE T2.date >= '1997-01-01')\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT (COUNT(CASE WHEN issued < '1998-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_gold_issued_prior_to_1998 FROM card WHERE type = 'gold';\t----- bird -----\tfinancial",
    "156": "SELECT T1.client_id  FROM disp AS T1  WHERE T1.type = 'OWNER'  AND T1.account_id = (SELECT T2.account_id                       FROM loan AS T2                       GROUP BY T2.account_id                       ORDER BY MAX(T2.amount) DESC                       LIMIT 1)\t----- bird -----\tfinancial",
    "157": "SELECT T2.A15 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.account_id = 532\t----- bird -----\tfinancial",
    "158": "SELECT T2.district_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.order_id = 33333\t----- bird -----\tfinancial",
    "159": "SELECT T1.amount, T1.date FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.operation = 'VYBER' AND T3.client_id = 3356\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account AS A INNER JOIN loan AS L ON A.account_id = L.account_id WHERE A.frequency = 'POPLATEK TYDNE' AND L.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT T3.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 13539 AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "162": "SELECT T2.A3 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT T3.A2 FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.status = 'A' GROUP BY T3.A2 ORDER BY COUNT(DISTINCT T1.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT T3.client_id FROM `order` AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.order_id = 32423 AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "165": "SELECT * FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'junior' AND T3.issued > '1996-12-31'\t----- bird -----\tfinancial",
    "168": "SELECT (COUNT(CASE WHEN T1.gender = 'F' THEN 1 END) * 100.0 / COUNT(T1.client_id)) AS percentage  FROM client AS T1  INNER JOIN disp AS T2 ON T1.client_id = T2.client_id  INNER JOIN account AS T3 ON T2.account_id = T3.account_id  INNER JOIN district AS T4 ON T3.district_id = T4.district_id  WHERE T4.A11 > 10000 AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(CASE WHEN strftime('%Y', L.date) = '1997' THEN L.amount END) - SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount END)) / NULLIF(SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount END), 0)) * 100 AS growth_rate FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id AND D.type = 'OWNER' INNER JOIN loan AS L ON D.account_id = L.account_id WHERE C.gender = 'M' AND strftime('%Y', L.date) IN ('1996', '1997')\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT ABS(SUM(CASE WHEN A3 = 'east Bohemia' THEN A16 END) - SUM(CASE WHEN A3 = 'north Bohemia' THEN A16 END)) FROM district\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE type IN ('OWNER', 'DISPONENT') AND account_id BETWEEN 1 AND 10\t----- bird -----\tfinancial",
    "173": "SELECT (SELECT COUNT(*) FROM trans WHERE account_id = 3 AND k_symbol = 'SLUZBY') AS statement_requests, (SELECT k_symbol FROM \"order\" WHERE amount = 3539.0) AS aim_of_debiting;\t----- bird -----\tfinancial",
    "174": "SELECT strftime('%Y', T1.birth_date) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 130 AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT D.account_id) FROM disp AS D INNER JOIN trans AS T ON D.account_id = T.account_id WHERE D.type = 'OWNER' AND T.k_symbol = 'SLUZBY'\t----- bird -----\tfinancial",
    "176": "SELECT T1.amount, T1.status FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.client_id = 992 AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "177": "SELECT SUM(T1.balance) AS total_balance, T2.gender  FROM trans AS T1  JOIN disp AS T3 ON T1.account_id = T3.account_id  JOIN client AS T2 ON T3.client_id = T2.client_id  WHERE T1.trans_id = 851 AND T3.type = 'OWNER' AND T3.client_id = 4\t----- bird -----\tfinancial",
    "178": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(T3.amount) FROM trans AS T3 INNER JOIN disp AS T2 ON T3.account_id = T2.account_id INNER JOIN client AS T1 ON T2.client_id = T1.client_id WHERE T1.client_id = 617 AND T3.type = 'VYDAJ' AND STRFTIME('%Y', T3.date) = '1998'\t----- bird -----\tfinancial",
    "180": "SELECT C.client_id FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN district AS DT ON A.district_id = DT.district_id WHERE strftime('%Y', C.birth_date) BETWEEN '1983' AND '1987' AND DT.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "181": "SELECT C.client_id FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN loan AS L ON D.account_id = L.account_id WHERE C.gender = 'F' AND D.type = 'OWNER' ORDER BY L.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T3.k_symbol = 'SIPO' AND T3.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date > '1996-12-31' AND T2.A2 = 'Beroun'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CR ON D.disp_id = CR.disp_id WHERE C.gender = 'F' AND CR.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT CAST(COUNT(DISTINCT CASE WHEN T4.gender = 'F' THEN T4.client_id END) AS REAL) / COUNT(DISTINCT T4.client_id) AS proportion FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.A2 = 'Hl.m. Praha' AND T3.type = 'OWNER'\t----- bird -----\tfinancial",
    "186": "SELECT COUNT(DISTINCT CASE WHEN account.frequency = 'POPLATEK TYDNE' THEN client.client_id END) * 100.0 / COUNT(DISTINCT client.client_id) FROM client INNER JOIN account ON client.district_id = account.district_id WHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id WHERE A.frequency = 'POPLATEK TYDNE' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "188": "SELECT T2.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND T2.date < '1997-01-01' AND T1.amount = (SELECT MIN(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND T2.date < '1997-01-01')\t----- bird -----\tfinancial",
    "189": "SELECT T3.account_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T1.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND T4.district_id IN (SELECT district_id FROM district WHERE A11 = (SELECT MIN(AVG(A11)) FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'F' GROUP BY district.district_id))\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.birth_date) = '1920' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 24 AND T2.frequency = 'POPLATEK TYDNE' AND T1.status NOT IN ('A', 'B', 'C', 'D')\t----- bird -----\tfinancial",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T3.A2 FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "194": "SELECT C.client_id, (STRFTIME('%Y', 'now') - STRFTIME('%Y', C.birth_date)) AS age FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CA ON D.disp_id = CA.disp_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN loan AS L ON A.account_id = L.account_id WHERE CA.type = 'gold' AND L.status = 'A' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(COALESCE(oxygen_count, 0)) FROM (SELECT m.molecule_id, COUNT(a.atom_id) AS oxygen_count FROM molecule AS m LEFT JOIN atom AS a ON m.molecule_id = a.molecule_id AND a.element = 'o' WHERE m.molecule_id IN (SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '-') GROUP BY m.molecule_id) AS counts\t----- bird -----\ttoxicology",
    "198": "SELECT CAST(COUNT(T1.bond_id) AS FLOAT) / NULLIF(COUNT(DISTINCT T2.molecule_id), 0) AS average_single_bonded_carcinogenic_molecules FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT (COUNT(CASE WHEN T1.element = 'c' THEN 1 END) * 100.0 / COUNT(T1.element)) AS percentage FROM atom AS T1 WHERE T1.molecule_id IN (SELECT DISTINCT T2.molecule_id FROM bond AS T2 WHERE T2.bond_type = '=')\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM (SELECT * FROM molecule WHERE label = '+' ORDER BY molecule_id ASC LIMIT 100) AS subquery\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT T3.element  FROM connected AS T1  INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id  INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id  WHERE T2.bond_id = 'TR004_8_9' AND T3.atom_id IN ('TR004_8', 'TR004_9')\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT T3.element  FROM bond AS T1  INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id  INNER JOIN atom AS T3 ON T2.atom_id IN (T3.atom_id, T2.atom_id2)  WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "208": "SELECT T2.label, COUNT(*) AS label_count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY label_count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'cl'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T1.atom_id2  FROM connected AS T1  INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id  WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT DISTINCT T1.atom_id, T1.atom_id2  FROM connected AS T1  INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id  INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id  WHERE T3.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T1.bond_type  FROM bond AS T1  INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id  WHERE T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20';\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT label FROM molecule WHERE molecule_id NOT IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'sn')\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element IN ('i', 's') AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT `T1`.`atom_id` FROM `connected` AS `T1` INNER JOIN `bond` AS `T2` ON `T1`.`bond_id` = `T2`.`bond_id` WHERE `T2`.`molecule_id` = 'TR181' UNION SELECT DISTINCT `T1`.`atom_id2` FROM `connected` AS `T1` INNER JOIN `bond` AS `T2` ON `T1`.`bond_id` = `T2`.`bond_id` WHERE `T2`.`molecule_id` = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT (COUNT(DISTINCT molecule.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+')) AS percentage FROM molecule WHERE label = '+' AND NOT EXISTS (SELECT 1 FROM atom WHERE atom.molecule_id = molecule.molecule_id AND atom.element = 'f');\t----- bird -----\ttoxicology",
    "219": "SELECT (COUNT(DISTINCT CASE WHEN T4.label = '+' THEN T3.molecule_id END) * 100.0 / COUNT(DISTINCT T3.molecule_id)) AS percentage  FROM bond AS T3  INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id  WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "220": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR000' GROUP BY T1.element ORDER BY COUNT(*) DESC, T1.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_2_6' AND T2.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "222": "SELECT COUNT(CASE WHEN label = '+' THEN molecule_id END) - COUNT(CASE WHEN label = '-' THEN molecule_id END) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT T1.molecule_id, COUNT(T2.bond_id) AS bond_count FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY T1.molecule_id LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT ROUND((COUNT(CASE WHEN bond.bond_type = '=' THEN 1 END) * 100.0) / COUNT(*), 5) AS percentage FROM bond WHERE bond.molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND((COUNT(CASE WHEN label = '+' THEN 1 END) * 1.0 / COUNT(molecule_id)) * 100, 3) AS percentage FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND((COUNT(CASE WHEN element = 'h' THEN 1 END) * 100.0 / COUNT(*)), 4) FROM atom WHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT bond_type FROM bond WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT DISTINCT T1.element, T2.label  FROM atom AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T1.bond_type, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC, T1.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id ASC LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND (T2.atom_id = 'TR009_12' OR T2.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id LIKE '%_19' OR atom_id2 LIKE '%_19'\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT T2.molecule_id FROM molecule AS T2 INNER JOIN atom AS T1 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, INSTR(T1.atom_id, '_') + 1) IN ('21', '22', '23', '24', '25')\t----- bird -----\ttoxicology",
    "243": "SELECT DISTINCT T1.bond_id FROM bond AS T1  INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id  INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id  INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id  WHERE (T3.element = 'p' AND T4.element = 'n') OR (T3.element = 'n' AND T4.element = 'p')\t----- bird -----\ttoxicology",
    "244": "SELECT CASE WHEN T3.label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic  FROM (SELECT T2.molecule_id, COUNT(T2.bond_id) AS double_bond_count        FROM bond AS T2        WHERE T2.bond_type = '='        GROUP BY T2.molecule_id        ORDER BY double_bond_count DESC        LIMIT 1) AS T1  INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(count_bonds) FROM (SELECT COUNT(connected.bond_id) AS count_bonds FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id WHERE atom.element = 'i' GROUP BY atom.atom_id)\t----- bird -----\ttoxicology",
    "246": "SELECT T1.bond_type, T2.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = '45' OR T2.atom_id2 = '45'\t----- bird -----\ttoxicology",
    "247": "SELECT T1.element FROM atom AS T1 WHERE NOT EXISTS (SELECT 1 FROM connected AS T2 WHERE T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2)\t----- bird -----\ttoxicology",
    "248": "SELECT T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#' AND T1.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "249": "SELECT T2.element FROM bond AS T1 INNER JOIN connected AS T3 ON T1.bond_id = T3.bond_id INNER JOIN atom AS T2 ON T3.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT DISTINCT T3.atom_id2 FROM connected AS T3 INNER JOIN atom AS T1 ON T3.atom_id = T1.atom_id WHERE T1.element = 'pb' UNION SELECT DISTINCT T3.atom_id FROM connected AS T3 INNER JOIN atom AS T1 ON T3.atom_id2 = T1.atom_id WHERE T1.element = 'pb'\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "SELECT (MAX(bond_count) * 100.0 / total_bonds) AS percentage  FROM (     SELECT COUNT(c.bond_id) AS bond_count     FROM connected AS c     INNER JOIN atom AS a1 ON c.atom_id = a1.atom_id     INNER JOIN atom AS a2 ON c.atom_id2 = a2.atom_id     GROUP BY          CASE              WHEN a1.element < a2.element THEN a1.element || '-' || a2.element              ELSE a2.element || '-' || a1.element          END ) AS common_bonds, (SELECT COUNT(*) AS total_bonds FROM bond) AS total_bonds;\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND((SUM(CASE WHEN T1.bond_type = '-' AND T2.label = '+' THEN 1 ELSE 0 END) * 100.0) / NULLIF(SUM(CASE WHEN T1.bond_type = '-' THEN 1 ELSE 0 END), 0), 5) AS proportion FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(atom_id) FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T2.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T3.element) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(*) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element IN ('p', 'br') AND T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "261": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT DISTINCT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (SUM(CASE WHEN T3.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(T3.atom_id)) AS chlorine_percentage  FROM bond AS T1  INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id  INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id  WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR030'\t----- bird -----\ttoxicology",
    "267": "SELECT bond.bond_type FROM bond WHERE bond.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11' UNION SELECT DISTINCT T3.element FROM atom AS T3 INNER JOIN connected AS T4 ON T3.atom_id = T4.atom_id2 WHERE T4.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T2.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT T2.label, COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca' GROUP BY T2.label\t----- bird -----\ttoxicology",
    "271": "SELECT CASE WHEN COUNT(DISTINCT T3.element) = 2 THEN 'Yes' ELSE 'No' END FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_id = 'TR001_1_8' AND (T3.element = 'cl' OR T3.element = 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-' AND T3.element = 'c' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT (COUNT(CASE WHEN T1.element = 'cl' THEN 1 END) * 100.0 / COUNT(T1.element)) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT DISTINCT T1.element  FROM connected AS T2  INNER JOIN atom AS T1 ON T1.atom_id IN (T2.atom_id, T2.atom_id2)  WHERE T2.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T1.molecule_id)  FROM bond AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT T4.element, COUNT(*) FROM (SELECT T3.atom_id, T3.element, ROW_NUMBER() OVER (PARTITION BY T3.molecule_id ORDER BY T3.atom_id) AS rowNum FROM atom AS T3 INNER JOIN molecule AS T2 ON T3.molecule_id = T2.molecule_id WHERE T2.label = '+') AS T4 WHERE T4.rowNum = 4 GROUP BY T4.element\t----- bird -----\ttoxicology",
    "282": "SELECT (COUNT(CASE WHEN T1.element = 'h' THEN 1 END) * 1.0 / NULLIF(COUNT(T1.atom_id), 0)) AS ratio, T2.label  FROM atom AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT DISTINCT molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'ca'\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT T2.bond_type  FROM atom AS T1  INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.element = 'c'\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT a.element FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id WHERE c.bond_id = 'TR001_10_11' UNION SELECT DISTINCT a2.element FROM atom AS a2 INNER JOIN connected AS c2 ON a2.atom_id = c2.atom_id2 WHERE c2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / NULLIF(COUNT(DISTINCT T2.molecule_id), 0)) AS percentage  FROM bond AS T1  JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "287": "SELECT (SUM(bond.bond_type = '=') * 100.0) / COUNT(*) FROM bond WHERE bond.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT T3.label FROM atom AS T1 INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "290": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id, molecule_id, element FROM atom WHERE molecule_id BETWEEN 'TR010' AND 'TR050' AND element = 'c'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT DISTINCT T1.bond_id  FROM bond AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR000_1_2' AND T2.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / NULLIF((SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+'), 0)) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'h'\t----- bird -----\ttoxicology",
    "299": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id, element FROM atom WHERE molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(T1.bond_id) AS double_bond_count, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' AND T1.bond_type = '='\t----- bird -----\ttoxicology",
    "304": "SELECT T1.molecule_id, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT T2.molecule_id, T3.element FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "307": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T2.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT T1.atom_id, COUNT(DISTINCT T2.bond_type) FROM atom AS T1 LEFT JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346' GROUP BY T1.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(molecule.molecule_id) FROM molecule LEFT JOIN atom ON molecule.molecule_id = atom.molecule_id AND atom.element = 's' LEFT JOIN bond ON molecule.molecule_id = bond.molecule_id AND bond.bond_type = '=' WHERE atom.molecule_id IS NULL AND bond.molecule_id IS NULL\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'c'\t----- bird -----\ttoxicology",
    "317": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / NULLIF(COUNT(DISTINCT CASE WHEN T1.label = '+' THEN T1.molecule_id END), 0)) AS percentage  FROM molecule AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T2.element = 'cl' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 WHERE T1.atom_id IN (SELECT T2.atom_id FROM connected AS T2 WHERE T2.bond_id = 'TR001_3_4')\t----- bird -----\ttoxicology",
    "320": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE (T2.atom_id = 'TR000_1' AND T2.atom_id2 = 'TR000_2') OR (T2.atom_id = 'TR000_2' AND T2.atom_id2 = 'TR000_1')\t----- bird -----\ttoxicology",
    "321": "SELECT DISTINCT `molecule_id` FROM `atom` WHERE `atom_id` IN ('TR000_2', 'TR000_4')\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT (COUNT(DISTINCT T1.atom_id) * 100.0 / (SELECT COUNT(DISTINCT T2.atom_id) FROM atom AS T2)) AS percentage_single_bond  FROM connected AS T1  INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id  WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 WHERE T1.label = '+' AND EXISTS (SELECT 1 FROM atom AS T2 WHERE T2.molecule_id = T1.molecule_id AND T2.element = 'n')\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT molecule.molecule_id FROM atom INNER JOIN connected ON (connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id) INNER JOIN bond ON connected.bond_id = bond.bond_id INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE atom.element = 's' AND bond.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=' AND T3.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT M.molecule_id  FROM molecule AS M  INNER JOIN atom AS A ON M.molecule_id = A.molecule_id  WHERE M.label = '+'  GROUP BY M.molecule_id  HAVING COUNT(A.atom_id) = (SELECT MAX(atom_count) FROM (SELECT COUNT(A.atom_id) AS atom_count FROM molecule AS M INNER JOIN atom AS A ON M.molecule_id = A.molecule_id WHERE M.label = '+' GROUP BY M.molecule_id))\t----- bird -----\ttoxicology",
    "330": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / NULLIF((SELECT COUNT(DISTINCT T2.molecule_id) FROM molecule AS T2 WHERE T2.label = '+'), 0)) AS percentage FROM connected AS T3 INNER JOIN atom AS T4 ON T3.atom_id = T4.atom_id OR T3.atom_id2 = T4.atom_id INNER JOIN bond AS T5 ON T3.bond_id = T5.bond_id INNER JOIN molecule AS T1 ON T5.molecule_id = T1.molecule_id WHERE T4.element = 'h' AND T5.bond_type = '#' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR004' AND 'TR010' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE element = 'c' AND molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_type = '=' AND T3.element = 'o'\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR002' AND T2.molecule_id = 'TR002'\t----- bird -----\ttoxicology",
    "338": "SELECT DISTINCT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=' AND T1.element = 'c' AND T1.molecule_id = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT T1.uuid, T1.name FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor = 'borderless' AND hasNonFoil = 1 AND cardKingdomFoilId IS NULL\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost > 0;\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT DISTINCT T1.name  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type LIKE '%Artifact%' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*') AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T1.name, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "348": "SELECT R.text, R.date FROM cards AS C INNER JOIN rulings AS R ON C.uuid = R.uuid WHERE C.name = 'Sublime Epiphany' AND C.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T1.uuid ORDER BY COUNT(T2.id) DESC LIMIT 1\t----- bird -----\tcard_games",
    "350": "SELECT DISTINCT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Annul' AND T2.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT (COUNT(DISTINCT T1.uuid) * 1.0 / COUNT(DISTINCT T2.uuid)) * 100 AS percentage FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "353": "SELECT T1.setCode, T2.totalSetSize FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT types) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '\u221e';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT T3.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT DISTINCT R.text FROM rulings AS R INNER JOIN cards AS C ON R.uuid = C.uuid WHERE C.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT text FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(id) * 100.0 / (SELECT COUNT(id) FROM cards)) AS percentage FROM cards WHERE borderColor = 'borderless';\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(DISTINCT FD.uuid) * 100.0 / COUNT(DISTINCT C.uuid)) AS percentage  FROM cards AS C  INNER JOIN foreign_data AS FD ON C.uuid = FD.uuid  WHERE C.isStorySpotlight = 1 AND FD.language = 'French'\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0.0;\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%Flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE hasFoil = 1 AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.* FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T3.language FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(T1.uuid), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' GROUP BY T2.status\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT T1.name, T3.language FROM cards AS T1 INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5.0\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT T1.name, T2.name AS foreign_name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.types LIKE '%Artifact%' AND T1.colors = 'B'\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' GROUP BY T1.uuid ORDER BY MIN(T2.date) ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE cards.artist = 'John Avon' AND cards.hasFoil = 1 AND (cards.cardKingdomFoilId IS NULL OR cards.cardKingdomId IS NULL)\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power IS NOT NULL AND power != '*';\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability LIKE '%mtgo%' AND hand = '-1';\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability LIKE '%paper%' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(CAST(REPLACE(REPLACE(REPLACE(manaCost, '{', ''), '}', ''), ' ', '') AS INTEGER)) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability LIKE '%arena%'\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT T1.setCode FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT (COUNT(CASE WHEN cards.frameEffects LIKE '%legendary%' AND cards.isOnlineOnly = 1 THEN 1 END) * 1.0 / COUNT(CASE WHEN cards.frameEffects LIKE '%legendary%' THEN 1 END)) * 100 AS percentage FROM cards;\t----- bird -----\tcard_games",
    "402": "SELECT (COUNT(CASE WHEN isTextless = 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage, GROUP_CONCAT(id) AS textless_ids  FROM cards  WHERE isStorySpotlight = 1\t----- bird -----\tcard_games",
    "403": "SELECT (COUNT(DISTINCT CASE WHEN foreign_data.language = 'Spanish' THEN cards.uuid END) * 100.0 / COUNT(DISTINCT cards.uuid)) AS percentage, foreign_data.name  FROM cards  INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid  GROUP BY foreign_data.name  HAVING foreign_data.language = 'Spanish'\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Portuguese (Brazil)' AND T1.block = 'Commander'\t----- bird -----\tcard_games",
    "406": "SELECT DISTINCT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types LIKE '%Creature%' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT type FROM foreign_data WHERE language = 'German';\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE (cards.power IS NULL OR cards.power = '*') AND cards.text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS C INNER JOIN legalities AS L ON C.uuid = L.uuid INNER JOIN rulings AS R ON C.uuid = R.uuid WHERE L.format = 'premodern' AND R.text = 'This is a triggered mana ability.' AND C.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T2.status = 'Legal' AND T1.availability LIKE '%paper%'\t----- bird -----\tcard_games",
    "411": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorText COLLATE NOCASE = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'French' AND T2.type LIKE 'Creature%' AND T2.layout = 'normal' AND T2.borderColor = 'black' AND T2.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T2.date = '2007-02-01'\t----- bird -----\tcard_games",
    "414": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.totalSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(CASE WHEN T1.hasContentWarning = 0 THEN T1.uuid END) * 100.0 / COUNT(T1.uuid)) AS percentage FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "416": "SELECT (COUNT(T1.uuid) * 100.0 / (SELECT COUNT(T2.uuid) FROM cards AS T2 WHERE T2.power IS NULL OR T2.power = '*')) AS percentage FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'French' AND (T2.power IS NULL OR T2.power = '*')\t----- bird -----\tcard_games",
    "417": "SELECT (SUM(CASE WHEN T2.type = 'expansion' THEN 1 ELSE 0 END) * 100.0 / COUNT(T2.code)) AS percentage  FROM set_translations AS T1  INNER JOIN sets AS T2 ON T1.setCode = T2.code  WHERE T1.language = 'Japanese';\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE colors IS NOT NULL AND borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE power IS NULL OR power = '*' AND promoTypes = 'arenaleague' ORDER BY name LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "WITH TopPairs AS (SELECT id, cardKingdomFoilId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY CAST(power AS INTEGER) DESC LIMIT 3) SELECT id FROM TopPairs ORDER BY cardKingdomFoilId ASC\t----- bird -----\tcard_games",
    "424": "SELECT (SUM(CASE WHEN cards.isTextless = 1 AND cards.layout = 'normal' THEN 1 ELSE 0 END) * 1.0) / (SUM(CASE WHEN cards.layout = 'normal' THEN 1 ELSE 0 END)) AS proportion FROM cards\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'\t----- bird -----\tcard_games",
    "426": "WITH TopSets AS (SELECT sets.name FROM sets WHERE sets.mtgoCode IS NULL ORDER BY sets.totalSetSize DESC LIMIT 3) SELECT TopSets.name FROM TopSets ORDER BY TopSets.name ASC;\t----- bird -----\tcard_games",
    "427": "SELECT T2.language FROM set_translations AS T2 INNER JOIN sets AS T1 ON T2.setCode = T1.code WHERE T1.name = 'Archenemy' AND T1.code = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T1.type, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT sets.code, cards.id FROM sets INNER JOIN cards ON cards.setCode = sets.code INNER JOIN foreign_data ON foreign_data.uuid = cards.uuid WHERE foreign_data.language = 'Italian' AND sets.block = 'Shadowmoor' ORDER BY sets.code ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT sets.code FROM sets INNER JOIN cards ON sets.code = cards.setCode INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE sets.isForeignOnly = 0 AND cards.hasFoil = 1 AND foreign_data.language = 'Japanese'\t----- bird -----\tcard_games",
    "432": "SELECT T1.setCode FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Russian' AND T2.totalSetSize = (SELECT MAX(totalSetSize) FROM sets AS T3 INNER JOIN set_translations AS T4 ON T3.code = T4.setCode WHERE T4.language = 'Russian')\t----- bird -----\tcard_games",
    "433": "SELECT (COUNT(T1.id) * 100.0 / NULLIF(COUNT(T2.id), 0)) AS percentage FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.mtgoCode IS NULL\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(*) AS total_count, id FROM cards WHERE borderColor = 'black' GROUP BY id;\t----- bird -----\tcard_games",
    "436": "SELECT `T1`.`id` FROM `cards` AS `T1` WHERE `T1`.`frameEffects` LIKE '%extendedart%'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 174\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT T2.name, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT foreign_data.language, foreign_data.flavorText, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(T3.convertedManaCost = 10.0) * 100.0 / COUNT(T3.convertedManaCost)) FROM sets AS T1 INNER JOIN cards AS T3 ON T1.code = T3.setCode WHERE T1.name = 'Abyssal Horror'\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'commander';\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T1.language, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT manaCost FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power IS NULL OR power = '*');\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT types FROM cards WHERE name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT T1.name FROM cards AS T1 WHERE T1.frameVersion = '2003' ORDER BY T1.convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T2.translation FROM set_translations AS T2 INNER JOIN cards AS T1 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(T2.translation) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS(SELECT 1 FROM foreign_data AS FD INNER JOIN cards AS C ON FD.uuid = C.uuid WHERE C.name = 'Ancestor''s Chosen' AND FD.language = 'Korean')\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT T2.translation FROM set_translations AS T2 INNER JOIN sets AS T1 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "469": "SELECT EXISTS (SELECT 1 FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy' AND T2.mtgoCode IS NOT NULL)\t----- bird -----\tcard_games",
    "470": "SELECT sets.releaseDate FROM sets INNER JOIN cards ON sets.code = cards.setCode WHERE cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT EXISTS(SELECT 1 FROM cards AS C INNER JOIN sets AS S ON C.setCode = S.code WHERE C.name = 'Adarkar Valkyrie' AND S.isForeignOnly = 1)\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 100\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost = (SELECT MAX(T3.convertedManaCost) FROM cards AS T3 INNER JOIN sets AS T4 ON T3.setCode = T4.code WHERE T4.name = 'Coldsnap')\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "478": "SELECT T1.* FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.number = '4' AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND setCode = 'CSP' AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "480": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Italian' AND T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T1.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT T1.text FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.language = 'Italian' AND T3.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "484": "SELECT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.language = 'Italian' AND T3.name = 'Coldsnap' AND T2.convertedManaCost = (SELECT MAX(T2.convertedManaCost) FROM cards AS T2 INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T3.name = 'Coldsnap')\t----- bird -----\tcard_games",
    "485": "SELECT T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT (COUNT(T1.id) * 100.0 / T2.baseSetSize) AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.convertedManaCost = 7.0 AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT (COUNT(T1.id) * 100.0 / COUNT(T1.id)) AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = date('2017-06-09')\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT sets.releaseDate FROM sets INNER JOIN cards ON sets.code = cards.setCode WHERE cards.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT T2.baseSetSize FROM sets AS T2 INNER JOIN set_translations AS T1 ON T1.setCode = T2.code WHERE T1.translation = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT T2.type FROM sets AS T2 INNER JOIN set_translations AS T1 ON T1.setCode = T2.code WHERE T1.translation = 'Huiti\u00e8me \u00e9dition'\t----- bird -----\tcard_games",
    "498": "SELECT T3.translation FROM set_translations AS T3 INNER JOIN sets AS T2 ON T3.setCode = T2.code INNER JOIN cards AS T1 ON T2.code = T1.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T3.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(T1.translation) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Tenth Edition'\t----- bird -----\tcard_games",
    "500": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Fellwar Stone' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT T2.name FROM cards AS T2 INNER JOIN sets AS T1 ON T1.code = T2.setCode WHERE T1.name = 'Journey into Nyx Hero''s Path' AND T2.convertedManaCost = (SELECT MAX(T3.convertedManaCost) FROM cards AS T3 INNER JOIN sets AS T4 ON T4.code = T3.setCode WHERE T4.name = 'Journey into Nyx Hero''s Path')\t----- bird -----\tcard_games",
    "502": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de fr\u00edo' AND T2.language = 'Spanish'\t----- bird -----\tcard_games",
    "503": "SELECT T2.type FROM sets AS T2 INNER JOIN cards AS T1 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3.0\t----- bird -----\tcard_games",
    "505": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Mirrodin' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "506": "SELECT (COUNT(T1.id) * 100.0 / NULLIF(COUNT(*), 0)) AS percentage  FROM cards AS T1  INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid  WHERE T2.language = 'Japanese' AND T1.hasNonFoil = 1 AND T1.hasFoil = 0\t----- bird -----\tcard_games",
    "507": "SELECT (SUM(CASE WHEN T2.isOnlineOnly = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE isTextless = 1 AND artist = 'Aleksi Briclot'\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets)\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE side IS NULL AND convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE side IS NULL)\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power = '*' OR power IS NULL) AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "514": "SELECT T1.name, SUM(CASE WHEN T1.manaCost IS NOT NULL THEN (SELECT SUM(CASE WHEN SUBSTR(T1.manaCost, i, 1) GLOB '[0-9]' THEN CAST(SUBSTR(T1.manaCost, i, 1) AS INTEGER) ELSE 1 END) FROM (SELECT 1 AS i UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) AS numbers WHERE i <= LENGTH(T1.manaCost)) ELSE 0 END) AS sum FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'duel' AND T2.status = 'Legal' GROUP BY T1.name ORDER BY sum DESC LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT MIN(T2.releaseDate) AS oldest_release_date, GROUP_CONCAT(DISTINCT T3.format) AS legal_formats  FROM cards AS T1  INNER JOIN sets AS T2 ON T1.setCode = T2.code  INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid  WHERE T1.rarity = 'mythic' AND T3.status = 'Legal'\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Ba\u01f5a' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(DISTINCT T1.uuid)  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE T1.rarity = 'rare'  AND T1.types LIKE '%Enchantment%'  AND T1.name = 'Abundance'  AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "518": "SELECT T1.format, GROUP_CONCAT(T2.name) AS card_names FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned'  GROUP BY T1.format HAVING COUNT(T1.status) = (     SELECT MAX(banned_count)     FROM (         SELECT COUNT(status) AS banned_count         FROM legalities         WHERE status = 'Banned'         GROUP BY format     ) AS counts )\t----- bird -----\tcard_games",
    "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT T2.artist, T3.format FROM cards AS T2 INNER JOIN legalities AS T3 ON T2.uuid = T3.uuid WHERE T2.artist = (SELECT artist FROM cards AS T1 INNER JOIN legalities AS T4 ON T1.uuid = T4.uuid GROUP BY T1.artist ORDER BY COUNT(T1.id) ASC LIMIT 1)\t----- bird -----\tcard_games",
    "521": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T1.hasContentWarning = 1 AND T2.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "523": "SELECT (COUNT(T1.id) / 4) AS annual_average, (SELECT T3.language FROM foreign_data AS T3 INNER JOIN cards AS T2 ON T3.uuid = T2.uuid INNER JOIN sets AS T1 ON T2.setCode = T1.code WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T3.language ORDER BY COUNT(*) DESC LIMIT 1) AS common_language FROM sets AS T1 WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT T1.uuid FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'oldschool' AND T2.status IN ('Restricted', 'Banned')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT T2.text, T2.date FROM rulings AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.artist = 'Kev Walker' ORDER BY T2.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T2.name, T3.format FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode INNER JOIN legalities AS T3 ON T2.uuid = T3.uuid WHERE T1.name = 'Hour of Devastation'\t----- bird -----\tcard_games",
    "529": "SELECT T1.name FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode AND T2.language = 'Korean' LEFT JOIN set_translations AS T3 ON T1.code = T3.setCode AND T3.language = 'Japanese' WHERE T2.setCode IS NOT NULL AND T3.setCode IS NULL\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT T1.frameVersion, T1.name, T2.status FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams'\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND CreationDate > '2013-12-31';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.Title IS NOT NULL\t----- bird -----\tcodebase_community",
    "539": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ViewCount = (SELECT MAX(T3.ViewCount) FROM posts AS T3 INNER JOIN users AS T4 ON T3.OwnerUserId = T4.Id WHERE T4.DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "541": "SELECT T2.DisplayName FROM users AS T2 INNER JOIN posts AS T1 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(posts.CommentCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(T1.AnswerCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ParentId IS NULL AND T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score > 19\t----- bird -----\tcodebase_community",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.Count = (SELECT MAX(Count) FROM tags)\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "552": "SELECT DISTINCT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND STRFTIME('%Y', T1.Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "WITH BadgeCounts AS (SELECT UserId, COUNT(Id) AS badge_count FROM badges GROUP BY UserId)  SELECT u.DisplayName  FROM users u  INNER JOIN BadgeCounts bc ON u.Id = bc.UserId  WHERE bc.badge_count = (SELECT MAX(badge_count) FROM BadgeCounts);\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_count) FROM (SELECT users.Id, COUNT(badges.Id) AS badge_count FROM users LEFT JOIN badges ON users.Id = badges.UserId WHERE users.Views > 200 GROUP BY users.Id)\t----- bird -----\tcodebase_community",
    "557": "SELECT (SUM(CASE WHEN T2.Age > 65 THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.Id)) AS percentage  FROM posts AS T1  INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id  WHERE T1.Score > 5\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "WITH VoteCounts AS (SELECT CreationDate, COUNT(Id) AS VoteCount FROM votes GROUP BY CreationDate) SELECT CreationDate FROM VoteCounts WHERE VoteCount = (SELECT MAX(VoteCount) FROM VoteCounts);\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT T2.Title FROM posts AS T2 INNER JOIN comments AS T1 ON T1.PostId = T2.Id WHERE T1.Score = (SELECT MAX(Score) FROM comments)\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT p.FavoriteCount FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.UserId = 3025 AND c.CreationDate = '2014-04-23 20:29:39';\t----- bird -----\tcodebase_community",
    "564": "SELECT T1.Text FROM comments AS T1 WHERE T1.PostId IN (SELECT T2.Id FROM posts AS T2 WHERE T2.ParentId = 107829) LIMIT 1\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN T2.ClosedDate IS NOT NULL THEN 'Yes' ELSE 'No' END AS IsWellFinished FROM comments AS T1  INNER JOIN posts AS T2 ON T1.PostId = T2.Id  WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 65041\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "568": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE Tags LIKE '%<data-visualization>%')\t----- bird -----\tcodebase_community",
    "570": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(T1.Id) * 1.0 / NULLIF(COUNT(T2.Id), 0) AS PostVoteRatio  FROM posts AS T1  LEFT JOIN votes AS T2 ON T1.OwnerUserId = T2.UserId  WHERE T1.OwnerUserId = 24 AND T2.UserId = 24\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "--error--\t----- bird -----\tcodebase_community",
    "575": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE LOWER(T2.DisplayName) = LOWER('A Lion')\t----- bird -----\tcodebase_community",
    "578": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT T1.Id, T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT DISTINCT U.DisplayName  FROM badges AS B  INNER JOIN users AS U ON B.UserId = U.Id  WHERE B.Name = 'Necromancer'  LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT LastEditorDisplayName FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
    "582": "SELECT T2.Title FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE LOWER(T1.UserDisplayName) = LOWER('Vebjorn Ljosa')\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(posts.Score), users.WebsiteUrl FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.LastEditorDisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT Text FROM comments WHERE UserId IN (SELECT postHistory.UserId FROM postHistory JOIN posts ON postHistory.PostId = posts.Id WHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?')\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT T3.DisplayName FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T1.UserId = T3.Id WHERE T1.BountyAmount = 50 AND T2.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT P.Title, C.Text, P.AverageViewCount FROM (SELECT Id, Title, AVG(ViewCount) AS AverageViewCount FROM posts WHERE Tags LIKE '%<humor>%' GROUP BY Id, Title) AS P INNER JOIN comments AS C ON P.Id = C.PostId\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users ORDER BY Views ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND Date BETWEEN '2011-01-01' AND '2011-12-31';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) FROM (SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(UserId) > 5);\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN (SELECT UserId FROM badges WHERE Name IN ('Teacher', 'Supporter') GROUP BY UserId HAVING COUNT(DISTINCT Name) = 2) AS T2 ON T1.Id = T2.UserId WHERE T1.Location LIKE '%New York%'\t----- bird -----\tcodebase_community",
    "594": "SELECT T1.OwnerUserId, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 1\t----- bird -----\tcodebase_community",
    "595": "--error--\t----- bird -----\tcodebase_community",
    "596": "WITH CommentCounts AS (     SELECT UserId, COUNT(UserId) AS comment_count     FROM comments     GROUP BY UserId ), MaxComments AS (     SELECT MAX(comment_count) AS max_count     FROM CommentCounts ) SELECT DISTINCT T2.Name  FROM CommentCounts AS CC INNER JOIN badges AS T2 ON CC.UserId = T2.UserId WHERE CC.comment_count = (SELECT max_count FROM MaxComments);\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location LIKE '%India%' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT ((COUNT(CASE WHEN strftime('%Y', `badges`.`Date`) = '2011' THEN 1 END) - COUNT(CASE WHEN strftime('%Y', `badges`.`Date`) = '2010' THEN 1 END)) / NULLIF(COUNT(CASE WHEN strftime('%Y', `badges`.`Date`) = '2010' THEN 1 END), 0)) * 100 AS percentage_difference FROM badges WHERE `badges`.`Name` = 'Student' AND strftime('%Y', `badges`.`Date`) IN ('2010', '2011')\t----- bird -----\tcodebase_community",
    "599": "SELECT T1.PostHistoryTypeId, COUNT(DISTINCT T2.UserId) FROM postHistory AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.PostId = 3720 GROUP BY T1.PostHistoryTypeId\t----- bird -----\tcodebase_community",
    "600": "SELECT PL.PostId, PL.RelatedPostId, P.ViewCount, P.Score, P.FavoriteCount  FROM postLinks AS PL  INNER JOIN posts AS P ON PL.RelatedPostId = P.Id  WHERE PL.PostId = 61217 OR PL.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT Id, OwnerUserId FROM posts WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND CreaionDate BETWEEN '2011-01-01' AND '2011-12-31';\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(users.UpVotes), AVG(users.Age) FROM users WHERE users.Id IN (SELECT posts.OwnerUserId FROM posts GROUP BY posts.OwnerUserId HAVING COUNT(posts.Id) > 10)\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score >= 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT DISTINCT T2.Name  FROM badges AS T2  INNER JOIN users AS T1 ON T2.UserId = T1.Id  WHERE T1.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT T1.Reputation FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT T2.Date FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (COUNT(DISTINCT T1.UserId) * 100.0 / COUNT(DISTINCT T2.Id)) AS percentage  FROM badges AS T1  INNER JOIN users AS T2 ON T1.UserId = T2.Id  WHERE T1.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "615": "SELECT (SUM(CASE WHEN T2.Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) * 100.0 / COUNT(T2.Id)) AS TeenagerPercentage FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "616": "SELECT T1.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreationDate = '2010-07-19 19:19:56'\t----- bird -----\tcodebase_community",
    "617": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT DISTINCT U.Age FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE U.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM users AS U INNER JOIN badges AS B ON B.UserId = U.Id WHERE U.Age BETWEEN 19 AND 65 AND B.Name = 'Supporter';\t----- bird -----\tcodebase_community",
    "620": "SELECT T1.Views FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT DISTINCT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T2.UserId = T1.Id WHERE T1.Reputation = (SELECT MIN(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "622": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Age > 65 AND T2.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location LIKE '%New York%'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(Id) FROM votes WHERE CreationDate LIKE '2010%'\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "629": "SELECT CAST(COUNT(CASE WHEN STRFTIME('%Y', CreationDate) = '2010' THEN 1 END) AS FLOAT) /              NULLIF(COUNT(CASE WHEN STRFTIME('%Y', CreationDate) = '2011' THEN 1 END), 0) AS vote_ratio FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'John Salvatier' AND T1.Tags IS NOT NULL\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo'\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT users.DisplayName, SUM(posts.ViewCount) AS TotalViewCount FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY users.DisplayName ORDER BY TotalViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM (SELECT P.Id FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id LEFT JOIN votes AS V ON P.Id = V.PostId WHERE U.DisplayName = 'Matt Parker' GROUP BY P.Id HAVING COUNT(V.Id) > 4) AS Subquery\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(C.Id) FROM comments AS C WHERE C.Score < 60 AND C.PostId IN (SELECT P.Id FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'Neil McGuigan')\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Mark Meckes' AND T1.CommentCount = 0 AND T1.Tags IS NOT NULL AND T1.Tags <> ''\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT COUNT(CASE WHEN P.Tags LIKE '%<r>%' THEN 1 END) * 100.0 / COUNT(P.Id) FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId WHERE U.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "640": "SELECT (COALESCE(SUM(CASE WHEN users.DisplayName = 'mornington' THEN posts.ViewCount END), 0) - COALESCE(SUM(CASE WHEN users.DisplayName = 'Amos' THEN posts.ViewCount END), 0)) AS view_count_difference FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND STRFTIME('%Y', Date) = '2014'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(Id) FROM posts WHERE DATE(CreaionDate) = '2010-07-21'\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = 13;\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'North Pole' AND T1.Date BETWEEN '2011-01-01 00:00:00' AND '2011-12-31 23:59:59'\t----- bird -----\tcodebase_community",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM users INNER JOIN posts ON posts.OwnerUserId = users.Id WHERE posts.FavoriteCount > 150 AND users.WebsiteUrl IS NOT NULL;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(PH.Id), P1.LastEditDate FROM posts AS P1 LEFT JOIN postHistory AS PH ON P1.Id = PH.PostId WHERE P1.Title = 'What is the best introductory Bayesian statistics textbook?'\t----- bird -----\tcodebase_community",
    "650": "SELECT T1.LastAccessDate, T1.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'How to tell if something happened in a data set which monitors a value over time')\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.Id AS PostId, T2.Name AS BadgeName  FROM posts AS T1  INNER JOIN badges AS T2 ON T1.OwnerUserId = T2.UserId  WHERE T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Samuel')  AND STRFTIME('%Y', T1.CreaionDate) = '2013'  AND STRFTIME('%Y', T2.Date) = '2013'\t----- bird -----\tcodebase_community",
    "653": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT T3.DisplayName, T3.Location FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T1.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId IN (SELECT T1.Id FROM posts AS T1 WHERE T1.Title = 'What are principal component scores?')\t----- bird -----\tcodebase_community",
    "656": "SELECT users.DisplayName FROM posts AS child INNER JOIN posts AS parent ON child.ParentId = parent.Id INNER JOIN users ON parent.OwnerUserId = users.Id WHERE child.Score = (SELECT MAX(Score) FROM posts WHERE ParentId IS NOT NULL)\t----- bird -----\tcodebase_community",
    "657": "SELECT T3.DisplayName, T3.WebsiteUrl FROM users AS T3 INNER JOIN posts AS T2 ON T3.Id = T2.OwnerUserId INNER JOIN votes AS T1 ON T2.Id = T1.PostId WHERE T1.VoteTypeId = 8 AND T1.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts AS P INNER JOIN votes AS V ON P.Id = V.PostId WHERE V.CreationDate BETWEEN '2011-01-01' AND '2011-12-31' AND V.BountyAmount = 50\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE DATE(CreaionDate) = '2010-07-19';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(monthly_count) FROM (SELECT COUNT(*) AS monthly_count FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE STRFTIME('%Y', T1.CreationDate) = '2010' AND (T2.AnswerCount <= 2 OR T2.AnswerCount IS NULL) GROUP BY STRFTIME('%Y-%m', T1.CreationDate))\t----- bird -----\tcodebase_community",
    "666": "SELECT T1.PostId FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 1465 AND T2.FavoriteCount = (SELECT MAX(T3.FavoriteCount) FROM posts AS T3 INNER JOIN votes AS T4 ON T3.Id = T4.PostId WHERE T4.UserId = 1465)\t----- bird -----\tcodebase_community",
    "667": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate = (SELECT MIN(CreationDate) FROM postLinks)\t----- bird -----\tcodebase_community",
    "668": "SELECT U.DisplayName FROM (SELECT UserId, COUNT(Id) AS BadgeCount FROM badges GROUP BY UserId) AS B INNER JOIN users AS U ON B.UserId = U.Id ORDER BY B.BadgeCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(votes.CreationDate) FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(T1.CreationDate) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "671": "SELECT T1.DisplayName  FROM users AS T1  INNER JOIN badges AS T2 ON T1.Id = T2.UserId  WHERE T2.Name = 'Autobiographer'  ORDER BY T2.Date ASC  LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location LIKE '%United Kingdom%' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(post_count) FROM (SELECT COUNT(T1.PostId) AS post_count FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Age = (SELECT MAX(Age) FROM users) GROUP BY T1.UserId)\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age >= 19 AND Age <= 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(P.Id) FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'Jay Stevens' AND STRFTIME('%Y', P.CreaionDate) = '2010'\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' AND T1.ViewCount = (SELECT MAX(T3.ViewCount) FROM posts AS T3 INNER JOIN users AS T4 ON T3.OwnerUserId = T4.Id WHERE T4.DisplayName = 'Harvey Motulsky')\t----- bird -----\tcodebase_community",
    "679": "SELECT T1.Id, T1.Title FROM posts AS T1 WHERE T1.Score = (SELECT MAX(T2.Score) FROM posts AS T2)\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ViewCount > 20000 AND STRFTIME('%Y', T2.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "682": "SELECT T1.Id, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE SUBSTRING(T1.CreaionDate, 1, 4) = '2010' AND T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE SUBSTRING(CreaionDate, 1, 4) = '2010')\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(CASE WHEN U.Reputation > 1000 THEN P.Id END) * 100.0 / COUNT(P.Id)) AS percentage FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE strftime('%Y', P.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "684": "SELECT (COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) * 100.0 / COUNT(Id)) AS percentage FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT p.ViewCount, u.DisplayName FROM posts AS p INNER JOIN users AS u ON p.LastEditorUserId = u.Id WHERE LOWER(p.Title) = LOWER('Computer Game Datasets')\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(T1.Id) FROM posts AS T1 WHERE T1.ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(C.Id) FROM comments AS C WHERE C.PostId = (SELECT P.Id FROM posts AS P WHERE P.Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT T2.DisplayName, T2.Location FROM posts AS T1 LEFT JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183\t----- bird -----\tcodebase_community",
    "690": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' AND T1.Date = (SELECT MAX(T3.Date) FROM badges AS T3 INNER JOIN users AS T4 ON T3.UserId = T4.Id WHERE T4.DisplayName = 'Emmett')\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT JULIANDAY(badges.Date) - JULIANDAY(users.CreationDate) AS time_taken FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(P.Id) AS PostCount, COUNT(C.Id) AS CommentCount FROM users AS U LEFT JOIN posts AS P ON P.OwnerUserId = U.Id LEFT JOIN comments AS C ON C.UserId = U.Id WHERE U.CreationDate = (SELECT MAX(CreationDate) FROM users)\t----- bird -----\tcodebase_community",
    "694": "SELECT comments.Text, users.DisplayName FROM comments INNER JOIN posts ON comments.PostId = posts.Id INNER JOIN users ON comments.UserId = users.Id WHERE posts.Title = 'Analysing wind data with R' ORDER BY comments.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE Tags LIKE '%<careers>%';\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT (SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')) + (SELECT COUNT(*) FROM posts WHERE ParentId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data') AND PostTypeId = 2) AS TotalCommentsAndAnswers;\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(DISTINCT PostId) FROM votes WHERE BountyAmount > 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT (COUNT(CASE WHEN posts.Score > 50 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users));\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT users.Reputation, users.UpVotes FROM users INNER JOIN comments ON users.Id = comments.UserId WHERE comments.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Title LIKE '%linear regression%' OR posts.Body LIKE '%linear regression%' OR posts.Tags LIKE '%<linear-regression>%'\t----- bird -----\tcodebase_community",
    "707": "SELECT T2.* FROM comments AS T2 INNER JOIN posts AS T1 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 AND T2.Score = (SELECT MAX(Score) FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150))\t----- bird -----\tcodebase_community",
    "708": "SELECT u.CreationDate, u.Age FROM comments AS c INNER JOIN users AS u ON c.UserId = u.Id WHERE u.WebsiteUrl IS NOT NULL\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(C.Id) FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.CommentCount = 1 AND C.Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.Id, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT C.* FROM comments AS C INNER JOIN users AS U ON C.UserId = U.Id WHERE U.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(CASE WHEN U.UpVotes = 0 THEN 1 END) / COUNT(*)) * 100 FROM comments AS C INNER JOIN users AS U ON C.UserId = U.Id WHERE C.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "717": "SELECT T3.power_name FROM superpower AS T3 INNER JOIN hero_power AS T2 ON T3.id = T2.power_id INNER JOIN superhero AS T1 ON T2.hero_id = T1.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT T2.full_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id GROUP BY T1.hero_id HAVING COUNT(T1.power_id) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.eye_colour_id = (SELECT T2.id FROM colour AS T2 WHERE T2.colour = 'Blue')\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT T1.superhero_name, T1.height_cm FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT colour.colour, COUNT(superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour ORDER BY COUNT(superhero.id) DESC\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.height_cm > 0\t----- bird -----\tsuperhero",
    "730": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T4.publisher_name = 'Marvel Comics' AND T3.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT publisher.publisher_name  FROM publisher  INNER JOIN superhero ON publisher.id = superhero.publisher_id  INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE attribute.attribute_name = 'Speed'  AND hero_attribute.attribute_value = (SELECT MIN(hero_attribute.attribute_value)                                         FROM hero_attribute                                         INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id                                         WHERE attribute.attribute_name = 'Speed')\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Intelligence') ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT T3.superhero_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Durability' AND T1.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "WITH PowerCounts AS (     SELECT hero_id, COUNT(power_id) AS power_count     FROM hero_power     GROUP BY hero_id ) SELECT superhero.superhero_name FROM superhero INNER JOIN PowerCounts ON superhero.id = PowerCounts.hero_id WHERE PowerCounts.power_count = (SELECT MAX(power_count) FROM PowerCounts)\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage, COUNT(CASE WHEN T1.publisher_id = (SELECT T2.id FROM publisher AS T2 WHERE T2.publisher_name = 'Marvel Comics') THEN 1 END) AS marvel_count FROM superhero AS T1 WHERE T1.alignment_id = (SELECT T3.id FROM alignment AS T3 WHERE T3.alignment = 'Neutral')\t----- bird -----\tsuperhero",
    "744": "SELECT COUNT(CASE WHEN publisher.publisher_name = 'DC Comics' THEN superhero.id END) - COUNT(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN superhero.id END) AS difference FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('DC Comics', 'Marvel Comics')\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL OR full_name = '-';\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.weight_kg > 0 AND T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT T4.power_name FROM gender AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.gender_id INNER JOIN hero_power AS T3 ON T2.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T1.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN race AS T1 ON T2.race_id = T1.id WHERE T1.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT T3.colour FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.race = 'Human' AND T1.height_cm = 185\t----- bird -----\tsuperhero",
    "759": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = (SELECT MAX(weight_kg) FROM superhero WHERE weight_kg > 0)\t----- bird -----\tsuperhero",
    "760": "SELECT MULTIPLY(DIVIDE(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 END), COUNT(T1.id)), 100) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180 AND T1.height_cm IS NOT NULL AND T1.height_cm > 0\t----- bird -----\tsuperhero",
    "761": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name, COUNT(T1.power_id) AS power_count FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T1.power_id ORDER BY power_count DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "766": "WITH MaxStrength AS (     SELECT MAX(T2.attribute_value) AS max_value     FROM hero_attribute AS T2     INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id     WHERE T3.attribute_name = 'Strength' ) SELECT T1.full_name  FROM superhero AS T1  INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id  INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id  WHERE T3.attribute_name = 'Strength' AND T2.attribute_value = (SELECT max_value FROM MaxStrength)\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(height_cm) AS average_height, AVG(weight_kg) AS average_weight FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T2.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T1.superhero_name  FROM superhero AS T1  INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id  INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id  INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id  WHERE T3.attribute_name = 'Durability' AND T4.publisher_name = 'Dark Horse Comics'  GROUP BY T1.superhero_name  ORDER BY MAX(T2.attribute_value) DESC  LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T4.colour AS eye_colour, T5.colour AS hair_colour, T6.colour AS skin_colour  FROM superhero AS T1  INNER JOIN gender AS T2 ON T1.gender_id = T2.id  INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id  INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id  INNER JOIN colour AS T5 ON T1.hair_colour_id = T5.id  INNER JOIN colour AS T6 ON T1.skin_colour_id = T6.id  WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT DISTINCT T1.superhero_name, T2.publisher_name  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.hair_colour_id = T1.skin_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT T2.alignment FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT (SUM(CASE WHEN T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female';\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T2.power_id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Black') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'Black')\t----- bird -----\tsuperhero",
    "783": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')\t----- bird -----\tsuperhero",
    "784": "SELECT T2.full_name FROM superhero AS T2 INNER JOIN race AS T3 ON T2.race_id = T3.id WHERE T3.race = 'Vampire' AND T2.alignment_id = 1\t----- bird -----\tsuperhero",
    "785": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 WHERE T1.attribute_value = (SELECT MAX(T2.attribute_value) FROM hero_attribute AS T2 INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength')\t----- bird -----\tsuperhero",
    "787": "SELECT T3.race, T4.alignment  FROM superhero AS T1  INNER JOIN race AS T3 ON T1.race_id = T3.id  INNER JOIN alignment AS T4 ON T1.alignment_id = T4.id  WHERE T1.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT (COUNT(DISTINCT CASE WHEN T3.gender = 'Female' THEN T1.id END) * 100.0) / COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien' AND T1.weight_kg > 0\t----- bird -----\tsuperhero",
    "790": "SELECT A.weight_kg - B.weight_kg  FROM superhero AS A, superhero AS B  WHERE A.full_name = 'Emil Blonsky' AND B.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) AS average_height FROM superhero WHERE height_cm > 0 GROUP BY superhero_name\t----- bird -----\tsuperhero",
    "792": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.race = 'God / Eternal' AND T3.gender = 'Male'\t----- bird -----\tsuperhero",
    "794": "WITH MaxSpeed AS (SELECT MAX(T2.attribute_value) AS max_value FROM hero_attribute AS T2 INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed') SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' AND T2.attribute_value = (SELECT max_value FROM MaxSpeed);\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "796": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown'\t----- bird -----\tsuperhero",
    "798": "SELECT DISTINCT T2.publisher_name  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT (COUNT(CASE WHEN T2.colour = 'Blue' THEN 1 END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id\t----- bird -----\tsuperhero",
    "801": "SELECT (COUNT(T1.gender_id) FILTER (WHERE T2.gender = 'Male') * 1.0 / NULLIF(COUNT(T1.gender_id) FILTER (WHERE T2.gender = 'Female'), 0)) AS ratio FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id\t----- bird -----\tsuperhero",
    "802": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.height_cm = (SELECT MAX(T2.height_cm) FROM superhero AS T2)\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg IS NULL OR weight_kg = 0;\t----- bird -----\tsuperhero",
    "806": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T3.race FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT race.race FROM race INNER JOIN superhero ON superhero.race_id = race.id WHERE superhero.id = (SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MAX(CAST(attribute_value AS INTEGER)) FROM hero_attribute))\t----- bird -----\tsuperhero",
    "811": "SELECT T2.alignment, T4.power_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T1.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT DISTINCT T2.full_name FROM superhero AS T2 INNER JOIN colour AS T1 ON T2.eye_colour_id = T1.id WHERE T1.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T3.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "814": "SELECT DISTINCT C.colour  FROM hero_attribute AS HA  INNER JOIN superhero AS S ON HA.hero_id = S.id  INNER JOIN colour AS C ON S.skin_colour_id = C.id  WHERE HA.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T3.alignment = 'Good' AND T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "816": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT T4.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN race AS T4 ON T1.race_id = T4.id WHERE T2.colour = 'Blue' AND T3.gender = 'Male'\t----- bird -----\tsuperhero",
    "818": "SELECT (COUNT(CASE WHEN T3.gender = 'Female' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "819": "SELECT COUNT(CASE WHEN C.colour = 'Blue' THEN 1 END) - COUNT(CASE WHEN C.colour IS NULL THEN 1 END) AS difference  FROM superhero AS S  LEFT JOIN colour AS C ON S.eye_colour_id = C.id  WHERE S.weight_kg IS NULL OR S.weight_kg = 0\t----- bird -----\tsuperhero",
    "820": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Hulk' AND T3.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE LOWER(T3.power_name) = 'control wind' ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT T1.superhero_name, T1.weight_kg FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' AND T1.weight_kg = (SELECT MAX(weight_kg) FROM superhero AS T3 INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T4.publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T3.race != '-' AND T2.publisher_name = 'Dark Horse Comics' AND T1.height_cm > 0\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(DISTINCT S.id) FROM superhero AS S INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id WHERE A.attribute_name = 'Speed' AND HA.attribute_value = (SELECT MAX(HA.attribute_value) FROM hero_attribute AS HA INNER JOIN attribute AS A ON HA.attribute_id = A.id WHERE A.attribute_name = 'Speed')\t----- bird -----\tsuperhero",
    "829": "SELECT ABS(SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END))  FROM superhero AS s  INNER JOIN publisher AS p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "830": "SELECT attribute.attribute_name  FROM hero_attribute  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  INNER JOIN superhero ON hero_attribute.hero_id = superhero.id  WHERE superhero.superhero_name = 'Black Panther'  ORDER BY hero_attribute.attribute_value ASC  LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero)\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT (COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero AS T1 WHERE T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'))) AS percentage FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Good' AND T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.weight_kg < 100 AND T1.eye_colour_id = (SELECT T2.id FROM colour AS T2 WHERE T2.colour = 'Brown')\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "843": "SELECT T1.hero_id FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm > 0.8 * (SELECT AVG(height_cm) FROM superhero WHERE height_cm > 0)\t----- bird -----\tsuperhero",
    "846": "SELECT T2.driverRef FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 IS NULL AND T1.raceId = 20\t----- bird -----\tformula_1",
    "847": "SELECT T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 19 AND T1.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT R.position FROM results AS R INNER JOIN constructors AS C ON R.constructorId = C.constructorId INNER JOIN races AS Ra ON R.raceId = Ra.raceId WHERE C.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN ('Japan', 'China', 'India', 'Malaysia', 'Singapore', 'Thailand', 'South Korea', 'Vietnam', 'Philippines', 'Indonesia', 'Brunei', 'Mongolia', 'Kazakhstan', 'Uzbekistan', 'Russia', 'Germany', 'France', 'Italy', 'Spain', 'United Kingdom', 'Netherlands', 'Belgium', 'Switzerland', 'Austria', 'Sweden', 'Norway', 'Denmark', 'Finland', 'Ireland', 'Portugal', 'Czech Republic', 'Hungary', 'Poland', 'Romania', 'Slovakia', 'Greece', 'Bulgaria', 'Croatia', 'Serbia', 'Slovenia', 'Estonia', 'Latvia', 'Lithuania', 'Cyprus', 'Malta')\t----- bird -----\tformula_1",
    "853": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 1.0 AND T1.raceId = 24\t----- bird -----\tformula_1",
    "859": "SELECT T2.q1 FROM qualifying AS T2 INNER JOIN drivers AS T1 ON T1.driverId = T2.driverId WHERE T1.forename = 'Bruno' AND T1.surname = 'Senna' AND T2.raceId = 354\t----- bird -----\tformula_1",
    "860": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '1:40.060' AND T1.qualifyId = 355\t----- bird -----\tformula_1",
    "861": "SELECT T2.number FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q3 = '0:01:54' AND T1.qualifyId = 903\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT results.driverId) FROM results INNER JOIN status ON results.statusId = status.statusId INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND status.status <> 'Finished'\t----- bird -----\tformula_1",
    "863": "SELECT T2.url FROM seasons AS T2 INNER JOIN races AS T1 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.date = '2015-11-29' AND T3.status = 'Finished'\t----- bird -----\tformula_1",
    "865": "SELECT MIN(T2.dob) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T3.status = 'Finished' AND T1.raceId = 592\t----- bird -----\tformula_1",
    "866": "SELECT drivers.url FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.time = '1:27.000' AND lapTimes.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT T3.nationality FROM results AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933) AND T1.raceId = 933\t----- bird -----\tformula_1",
    "868": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 AND T1.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9)\t----- bird -----\tformula_1",
    "870": "SELECT T2.q1 FROM qualifying AS T2 INNER JOIN drivers AS T1 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lucas' AND T1.surname = 'di Grassi' AND T2.raceId = 345\t----- bird -----\tformula_1",
    "871": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '1:15.000' AND T1.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT T2.code FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 45 AND T1.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "873": "SELECT T1.milliseconds FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren' AND T1.raceId = 743\t----- bird -----\tformula_1",
    "874": "SELECT T3.forename, T3.surname FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.name = 'San Marino Grand Prix' AND T1.year = 2006 AND T2.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT T2.url FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(DISTINCT R.driverId) FROM results AS R INNER JOIN races AS RACE ON R.raceId = RACE.raceId INNER JOIN status AS S ON R.statusId = S.statusId WHERE RACE.date = '2015-11-29' AND S.status != 'Finished'\t----- bird -----\tformula_1",
    "877": "SELECT MIN(D.dob) FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN status AS S ON R.statusId = S.statusId WHERE R.raceId = 872 AND S.status = 'Finished'\t----- bird -----\tformula_1",
    "878": "SELECT T2.forename, T2.surname  FROM results AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  WHERE T1.raceId = 348 AND T1.fastestLapTime = (SELECT MIN(T1.fastestLapTime) FROM results AS T1 WHERE T1.raceId = 348)\t----- bird -----\tformula_1",
    "879": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(T3.fastestLapSpeed) FROM results AS T3)\t----- bird -----\tformula_1",
    "880": "SELECT ((CAST(r1.fastestLapSpeed AS FLOAT) - CAST(r2.fastestLapSpeed AS FLOAT)) / CAST(r2.fastestLapSpeed AS FLOAT) * 100) AS percentage FROM results AS r1 INNER JOIN results AS r2 ON r1.driverId = r2.driverId INNER JOIN drivers ON r1.driverId = drivers.driverId WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta' AND r1.raceId = 853 AND r2.raceId = (SELECT MIN(results.raceId) FROM results WHERE results.driverId = drivers.driverId AND results.raceId > 853)\t----- bird -----\tformula_1",
    "881": "SELECT CAST(COUNT(Res.statusId) AS REAL) / COUNT(Res.driverId) AS completion_rate FROM races AS R INNER JOIN results AS Res ON R.raceId = Res.raceId INNER JOIN status AS S ON Res.statusId = S.statusId WHERE R.date = '1983-07-16' AND S.status = 'Finished'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix'\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(raceId) AS total_races, GROUP_CONCAT(name ORDER BY name DESC) AS race_names FROM races WHERE year = 2005;\t----- bird -----\tformula_1",
    "884": "SELECT T1.name FROM races AS T1 WHERE T1.date = (SELECT MIN(date) FROM races);\t----- bird -----\tformula_1",
    "885": "SELECT T1.name, T1.date FROM races AS T1 WHERE T1.year = 1999 AND T1.round = (SELECT MAX(round) FROM races WHERE year = 1999)\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year HAVING COUNT(raceId) = (SELECT MAX(count) FROM (SELECT COUNT(raceId) AS count FROM races GROUP BY year))\t----- bird -----\tformula_1",
    "887": "SELECT T1.name FROM races AS T1 WHERE T1.year = 2017 AND T1.name NOT IN (SELECT T2.name FROM races AS T2 WHERE T2.year = 2000)\t----- bird -----\tformula_1",
    "888": "SELECT T2.country, T2.name, T2.location  FROM races AS T1  INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId  WHERE T1.name = 'European Grand Prix'  AND T1.year = (SELECT MIN(year) FROM races WHERE name = 'European Grand Prix')\t----- bird -----\tformula_1",
    "889": "SELECT MAX(races.year) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Brands Hatch' AND races.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit' AND T1.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2010 AND races.name = 'Singapore Grand Prix' ORDER BY results.positionOrder ASC\t----- bird -----\tformula_1",
    "892": "SELECT T1.forename, T1.surname, SUM(T2.points) AS total_points FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY total_points DESC LIMIT 1\t----- bird -----\tformula_1",
    "893": "SELECT T3.forename || ' ' || T3.surname AS driver_name, T2.points  FROM results AS T2  INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId  INNER JOIN races AS T4 ON T2.raceId = T4.raceId  WHERE T4.year = 2017 AND T4.name = 'Chinese Grand Prix'  AND T2.positionOrder <= 3  ORDER BY T2.positionOrder  LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT CONCAT(T2.forename, ' ', T2.surname) AS driver, T3.name AS race, MIN(T1.fastestLapTime) AS best_lap_time  FROM results AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T1.raceId = T3.raceId  WHERE T1.fastestLapTime IS NOT NULL  GROUP BY T2.driverId, T3.raceId  ORDER BY MIN(T1.fastestLapTime) ASC  LIMIT 1;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T3.time) FROM lapTimes AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2009 AND T2.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT (SUM(CASE WHEN R.position != '1' THEN 1 ELSE 0 END) * 100.0 / COUNT(R.raceId)) AS percentage  FROM results AS R  INNER JOIN drivers AS D ON R.driverId = D.driverId  INNER JOIN races AS RA ON R.raceId = RA.raceId  WHERE D.driverRef = 'hamilton' AND RA.year >= 2010\t----- bird -----\tformula_1",
    "897": "SELECT T2.driverId, T2.nationality, MAX(T1.points)  FROM results AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  WHERE T1.position = 1  GROUP BY T2.driverId  ORDER BY COUNT(T1.position) DESC  LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT T1.forename, T1.surname, STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.dob) AS age  FROM drivers AS T1  WHERE T1.nationality = 'Japanese'  AND T1.dob = (SELECT MAX(T2.dob) FROM drivers AS T2 WHERE T2.nationality = 'Japanese');\t----- bird -----\tformula_1",
    "899": "SELECT circuits.name FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.year BETWEEN 1990 AND 2000 GROUP BY circuits.circuitId HAVING COUNT(races.raceId) = 4\t----- bird -----\tformula_1",
    "900": "SELECT T1.name, T1.location, T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT races.name, circuits.name, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.date LIKE '2005-09-%'\t----- bird -----\tformula_1",
    "902": "SELECT T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.grid < 20\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T3.position) FROM results AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN circuits AS T1 ON T2.circuitId = T1.circuitId INNER JOIN drivers AS T4 ON T3.driverId = T4.driverId WHERE T4.forename = 'Michael' AND T4.surname = 'Schumacher' AND T1.name = 'Sepang International Circuit' AND T3.position = 1\t----- bird -----\tformula_1",
    "904": "SELECT T3.name, T3.year FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher' AND T1.fastestLapTime = (SELECT MIN(T4.fastestLapTime) FROM results AS T4 INNER JOIN drivers AS T5 ON T4.driverId = T5.driverId WHERE T5.forename = 'Michael' AND T5.surname = 'Schumacher')\t----- bird -----\tformula_1",
    "905": "SELECT AVG(R.points) FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE D.surname = 'Irvine' AND RA.year = 2000\t----- bird -----\tformula_1",
    "906": "WITH FirstRace AS (   SELECT MIN(T4.date) AS FirstRaceDate   FROM races AS T4   INNER JOIN results AS T5 ON T4.raceId = T5.raceId   INNER JOIN drivers AS T6 ON T5.driverId = T6.driverId   WHERE T6.forename = 'Lewis' AND T6.surname = 'Hamilton' ) SELECT T3.date, T2.points  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.date = (SELECT FirstRaceDate FROM FirstRace)\t----- bird -----\tformula_1",
    "907": "SELECT T1.date, T2.country FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2017 ORDER BY T1.date\t----- bird -----\tformula_1",
    "908": "SELECT T1.name, T1.year, T2.location  FROM races AS T1  INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId  WHERE T1.raceId = (SELECT raceId FROM results WHERE laps = (SELECT MAX(laps) FROM results))\t----- bird -----\tformula_1",
    "909": "SELECT (COUNT(CASE WHEN circuits.country = 'Germany' THEN races.raceId END) * 100.0 / COUNT(races.raceId)) AS percentage  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE races.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT name, lat FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits WHERE alt IS NOT NULL);\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL OR code = '';\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT T2.year FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT * FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year BETWEEN 2010 AND 2019 AND LOWER(T2.name) = 'abu dhabi circuit'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT races.date FROM races INNER JOIN circuits ON circuits.circuitId = races.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT T2.url FROM circuits AS T2 INNER JOIN races AS T1 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "926": "SELECT MIN(T1.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "928": "SELECT T3.driverRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.position = 1 AND T2.name = 'Canadian Grand Prix' AND T2.year = 2007\t----- bird -----\tformula_1",
    "929": "SELECT DISTINCT T3.name  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT R2.name FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN races AS R2 ON R.raceId = R2.raceId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' ORDER BY R.positionOrder ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(T2.fastestLapSpeed) FROM results AS T2 INNER JOIN races AS T1 ON T1.raceId = T2.raceId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T3.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT T3.positionOrder FROM results AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2008 AND T2.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT T3.forename, T3.surname FROM results AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.grid = 4 AND T2.year = 1989 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT T3.driverId) FROM results AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN status AS T1 ON T3.statusId = T1.statusId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.status = 'Finished'\t----- bird -----\tformula_1",
    "936": "SELECT T3.fastestLap FROM results AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.positionOrder = 2 AND T2.year = 2008 AND T2.name IN ('Australian Grand Prix', 'Chinese Grand Prix')\t----- bird -----\tformula_1",
    "938": "SELECT T3.forename, T3.surname, T3.url FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.position = 1\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'UN' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT results.driverId) FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN status ON results.statusId = status.statusId WHERE status.status = 'Finished' AND races.year = 2008 AND races.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "942": "SELECT AVG(CAST(SUBSTR(T1.fastestLapTime, 1, INSTR(T1.fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T1.fastestLapTime, INSTR(T1.fastestLapTime, ':') + 1, 2) AS INTEGER) + CAST(SUBSTR(T1.fastestLapTime, INSTR(T1.fastestLapTime, '.') + 1) AS INTEGER) / 1000) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "943": "SELECT CAST(COUNT(R1.driverId) AS REAL) / (SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) AS completion_rate FROM results AS R1 INNER JOIN races AS R2 ON R1.raceId = R2.raceId INNER JOIN status AS S ON R1.statusId = S.statusId WHERE R2.year = 2008 AND R2.name = 'Australian Grand Prix' AND S.status = 'Finished' AND R1.laps = (SELECT MAX(R3.laps) FROM results AS R3 WHERE R3.raceId = R2.raceId)\t----- bird -----\tformula_1",
    "944": "SELECT ((last_driver.milliseconds - champion.milliseconds) * 100.0 / last_driver.milliseconds) AS percentage_faster  FROM (SELECT milliseconds FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND positionOrder = 1) AS champion,      (SELECT milliseconds FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') ORDER BY positionOrder DESC LIMIT 1) AS last_driver\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(T2.points) FROM constructorStandings AS T2 INNER JOIN constructors AS T1 ON T2.constructorId = T1.constructorId WHERE T1.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = (SELECT MAX(points) FROM constructorStandings)\t----- bird -----\tformula_1",
    "950": "SELECT T2.name FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 0.0 AND T1.raceId = 291\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Japanese' AND T2.points = 0 GROUP BY T1.constructorId HAVING COUNT(T2.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'French' AND T2.laps > 50\t----- bird -----\tformula_1",
    "954": "SELECT (COUNT(CASE WHEN S.status = 'Finished' THEN 1 END) * 100.0 / COUNT(*)) AS race_completion_percentage  FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN status AS S ON R.statusId = S.statusId WHERE D.nationality = 'Japanese' AND RA.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "955": "SELECT T2.year, AVG((CAST(SUBSTR(T1.time, 1, INSTR(T1.time, ':') - 1) AS INTEGER) * 3600) + (CAST(SUBSTR(T1.time, INSTR(T1.time, ':') + 1, INSTR(T1.time, '.') - INSTR(T1.time, ':') - 1) AS INTEGER) * 60) + (CAST(SUBSTR(T1.time, INSTR(T1.time, '.') + 1) AS INTEGER))) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.positionOrder = 1 AND T2.year < 1975 GROUP BY T2.year\t----- bird -----\tformula_1",
    "956": "SELECT DISTINCT T1.forename, T1.surname  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  WHERE T1.dob > '1975-12-31' AND T2.rank = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'Italian' AND T3.status != 'Finished'\t----- bird -----\tformula_1",
    "958": "SELECT drivers.forename, drivers.surname  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  WHERE results.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "959": "SELECT T1.fastestLap FROM results AS T1 WHERE T1.driverId = (SELECT T2.driverId FROM results AS T2 INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2009 AND T2.positionOrder = 1 GROUP BY T2.driverId ORDER BY COUNT(T2.positionOrder) DESC LIMIT 1)\t----- bird -----\tformula_1",
    "960": "SELECT AVG(cast(T1.fastestLapSpeed as real)) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "961": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.milliseconds = (SELECT MIN(milliseconds) FROM results)\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(DISTINCT CASE WHEN T3.dob < '1985-01-01' AND T1.laps > 50 THEN T1.driverId END) * 100.0 / COUNT(DISTINCT T1.driverId)) AS percentage FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.time < '2:00.000'\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "WITH YoungestDrivers AS (SELECT code, nationality FROM drivers ORDER BY dob DESC LIMIT 3)  SELECT COUNT(*) AS NetherlandicCount FROM YoungestDrivers WHERE nationality = 'Dutch';\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT T1.driverId, T1.forename, T1.surname, MIN(T2.milliseconds)  FROM drivers AS T1  INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId  WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1990-12-31'  GROUP BY T1.driverId  ORDER BY MIN(T2.milliseconds) ASC  LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'German')\t----- bird -----\tformula_1",
    "972": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.dob BETWEEN '1971-01-01' AND '1971-12-31' AND T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results WHERE raceId = T2.raceId)\t----- bird -----\tformula_1",
    "973": "SELECT T1.forename, T1.surname, MAX(T2.milliseconds) AS latest_lap_time  FROM drivers AS T1  INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId  WHERE T1.nationality = 'Spanish' AND T1.dob < '1982-01-01'  GROUP BY T1.driverId  ORDER BY latest_lap_time DESC  LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT races.year FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "975": "SELECT T2.year  FROM results AS T1  INNER JOIN races AS T2 ON T1.raceId = T2.raceId  GROUP BY T2.year  ORDER BY MIN(T1.fastestLapSpeed) ASC  LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY milliseconds ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T1.raceId BETWEEN 50 AND 100 AND T2.status = 'Disqualified'\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(*) AS count, location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "979": "SELECT T1.round FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T3.status = 'Finished' GROUP BY T1.round ORDER BY COUNT(T2.resultId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT T2.driverRef, T2.nationality, T2.dob FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 IS NOT NULL AND T1.raceId = 23\t----- bird -----\tformula_1",
    "981": "WITH YoungestDriver AS (     SELECT driverId FROM drivers WHERE dob = (SELECT MAX(dob) FROM drivers) ) SELECT races.year, races.name, races.date, races.time  FROM races  INNER JOIN qualifying ON races.raceId = qualifying.raceId  WHERE qualifying.driverId = (SELECT driverId FROM YoungestDriver)  AND races.date = (SELECT MIN(races.date)                    FROM qualifying                    INNER JOIN races ON qualifying.raceId = races.raceId                    WHERE qualifying.driverId = (SELECT driverId FROM YoungestDriver))\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'American' AND T3.status = 'Puncture'\t----- bird -----\tformula_1",
    "983": "SELECT T1.url FROM constructors AS T1 WHERE T1.nationality = 'Italian' AND T1.constructorId = (SELECT T2.constructorId FROM constructorStandings AS T2 GROUP BY T2.constructorId ORDER BY SUM(T2.points) DESC LIMIT 1)\t----- bird -----\tformula_1",
    "984": "SELECT T2.url  FROM constructors AS T2  INNER JOIN (SELECT constructorId, SUM(wins) AS total_wins              FROM constructorStandings              GROUP BY constructorId) AS T1  ON T1.constructorId = T2.constructorId  WHERE T1.total_wins = (SELECT MAX(total_wins)                          FROM (SELECT SUM(wins) AS total_wins                                FROM constructorStandings                                GROUP BY constructorId))\t----- bird -----\tformula_1",
    "985": "SELECT T3.forename, T3.surname, MAX(T1.milliseconds) AS slowest_time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'French Grand Prix' AND T1.lap = 3 GROUP BY T3.driverId ORDER BY slowest_time DESC LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT T2.name, MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.lap = 1 GROUP BY T2.name ORDER BY MIN(T1.milliseconds) LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.positionOrder <= 10 AND T2.year = 2006 AND T2.name = 'United States Grand Prix'\t----- bird -----\tformula_1",
    "988": "SELECT T1.driverId, T1.forename, T1.surname, AVG(T2.milliseconds) AS avg_pit_stop_duration FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T1.driverId ORDER BY avg_pit_stop_duration ASC LIMIT 3\t----- bird -----\tformula_1",
    "989": "SELECT T3.forename, T3.surname, T2.time FROM results AS T2 INNER JOIN races AS T1 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T2.position = 1 AND T1.name = 'Canadian Grand Prix' AND T1.year = 2008\t----- bird -----\tformula_1",
    "990": "SELECT T3.constructorRef, T3.url FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN constructors AS T3 ON T2.constructorId = T3.constructorId WHERE T1.year = 2009 AND T1.name = 'Singapore Grand Prix' AND T2.positionOrder = '1'\t----- bird -----\tformula_1",
    "991": "SELECT T1.forename, T1.surname, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'Austrian' AND T1.dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1",
    "992": "SELECT T1.forename || ' ' || T1.surname AS full_name, T1.url, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY T1.dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT T3.name, T3.nationality, SUM(T1.points) AS total_points  FROM constructorResults AS T1  INNER JOIN races AS T2 ON T1.raceId = T2.raceId  INNER JOIN constructors AS T3 ON T1.constructorId = T3.constructorId  WHERE T2.name = 'Monaco Grand Prix' AND T2.year BETWEEN 1980 AND 2010  GROUP BY T3.constructorId  HAVING SUM(T1.points) = (SELECT MAX(total_points)                           FROM (SELECT SUM(points) AS total_points                                 FROM constructorResults                                 INNER JOIN races ON constructorResults.raceId = races.raceId                                 WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010                                 GROUP BY constructorId))\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T3.points) FROM results AS T3 INNER JOIN drivers AS T1 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) FROM (SELECT COUNT(raceId) AS race_count FROM races WHERE year BETWEEN 2001 AND 2010 GROUP BY year);\t----- bird -----\tformula_1",
    "997": "SELECT drivers.nationality FROM drivers GROUP BY drivers.nationality ORDER BY COUNT(drivers.driverId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT SUM(wins) FROM driverStandings WHERE position = 91;\t----- bird -----\tformula_1",
    "999": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT T2.location || ', ' || T2.country AS full_location  FROM races AS T1  INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId  WHERE T1.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT T4.forename, T4.surname FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId INNER JOIN drivers AS T4 ON T1.driverId = T4.driverId WHERE T1.position = 1 AND T2.round = 3 AND T3.name = 'Marina Bay Street Circuit' AND T2.year = 2008\t----- bird -----\tformula_1",
    "1002": "SELECT T1.forename || ' ' || T1.surname AS full_name, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.dob = (SELECT MIN(dob) FROM drivers) ORDER BY T2.raceId LIMIT 1\t----- bird -----\tformula_1",
    "1003": "WITH MaxAccidents AS (     SELECT R.driverId      FROM results AS R      INNER JOIN status AS S ON R.statusId = S.statusId      INNER JOIN races AS RA ON R.raceId = RA.raceId      WHERE S.status = 'Accident'        AND RA.name = 'Canadian Grand Prix'      GROUP BY R.driverId      ORDER BY COUNT(S.status) DESC      LIMIT 1 ) SELECT COUNT(S.status)  FROM results AS R  INNER JOIN status AS S ON R.statusId = S.statusId  WHERE R.driverId = (SELECT driverId FROM MaxAccidents);\t----- bird -----\tformula_1",
    "1004": "SELECT COUNT(T2.resultId) AS wins, T1.forename || ' ' || T1.surname AS full_name FROM drivers AS T1 LEFT JOIN results AS T2 ON T1.driverId = T2.driverId AND T2.position = 1 WHERE T1.dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(milliseconds) FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT time FROM lapTimes WHERE milliseconds = (SELECT MIN(milliseconds) FROM lapTimes)\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(T1.duration) FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1008": "SELECT T3.lap FROM pitStops AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2011 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1009": "SELECT T3.forename, T3.surname, T2.duration FROM pitStops AS T2 INNER JOIN races AS T1 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2011 AND T1.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(T1.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1011": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes) AND T2.driverId IN (SELECT T1.driverId FROM lapTimes AS T1 ORDER BY T1.milliseconds ASC LIMIT 20)\t----- bird -----\tformula_1",
    "1012": "SELECT C.lat, C.lng FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN circuits AS C ON RA.circuitId = C.circuitId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND R.fastestLap IS NOT NULL\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(R.fastestLapTime) FROM results AS R INNER JOIN races AS R2 ON R.raceId = R2.raceId INNER JOIN circuits AS C ON R2.circuitId = C.circuitId WHERE C.name = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1014": "SELECT T1.fastestLapTime, T1.fastestLapSpeed FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1015": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId WHERE T3.country = 'Austria' AND T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results AS T4 INNER JOIN races AS T5 ON T4.raceId = T5.raceId WHERE T5.circuitId = T3.circuitId)\t----- bird -----\tformula_1",
    "1016": "SELECT SUM(pitStops.duration)  FROM pitStops  INNER JOIN results ON pitStops.raceId = results.raceId  INNER JOIN races ON results.raceId = races.raceId  WHERE races.name = 'Austrian Grand Prix'  AND results.fastestLapTime = (SELECT MIN(fastestLapTime)                                 FROM results                                 INNER JOIN races ON results.raceId = races.raceId                                 WHERE races.name = 'Austrian Grand Prix') AND pitStops.driverId = results.driverId;\t----- bird -----\tformula_1",
    "1017": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN results AS T3 ON T2.raceId = T3.raceId WHERE T3.fastestLapTime = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(T1.milliseconds) FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T3.milliseconds) FROM lapTimes AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN circuits AS T1 ON T2.circuitId = T1.circuitId WHERE T1.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT T1.player_name, T1.height FROM Player AS T1 WHERE T1.height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1022": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT T1.id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY SUM(T2.home_team_goal + T2.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T.team_long_name  FROM Team AS T  INNER JOIN Match AS M ON T.team_api_id = M.home_team_api_id  WHERE M.season = '2015/2016' AND M.home_team_goal < M.away_team_goal  GROUP BY T.team_long_name  HAVING COUNT(M.match_api_id) = (     SELECT MIN(losses)      FROM (         SELECT COUNT(M.match_api_id) AS losses          FROM Team AS T          INNER JOIN Match AS M ON T.team_api_id = M.home_team_api_id          WHERE M.season = '2015/2016' AND M.home_team_goal < M.away_team_goal          GROUP BY T.team_long_name     ) )\t----- bird -----\teuropean_football_2",
    "1027": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY T1.player_api_id ORDER BY MAX(T2.penalties) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T2.team_long_name, COUNT(*) AS wins  FROM Match AS T1  INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id  INNER JOIN League AS T3 ON T1.league_id = T3.id  WHERE T3.name = 'Scotland Premier League'  AND T1.season = '2010/2011'  AND T1.away_team_goal > T1.home_team_goal  GROUP BY T2.team_long_name  ORDER BY wins DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON M.league_id = L.id WHERE M.home_team_goal = M.away_team_goal AND M.season = '2015/2016' GROUP BY L.id ORDER BY COUNT(M.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) AS age FROM Player INNER JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player_Attributes.sprint_speed >= 97 AND Player_Attributes.date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT T2.name, COUNT(T1.league_id) AS match_count  FROM Match AS T1  INNER JOIN League AS T2 ON T1.league_id = T2.id  GROUP BY T2.name  ORDER BY match_count DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(CAST(height AS REAL)) FROM Player WHERE SUBSTR(birthday, 1, 4) BETWEEN '1990' AND '1995';\t----- bird -----\teuropean_football_2",
    "1034": "WITH AverageRating AS (     SELECT AVG(overall_rating) AS avg_rating     FROM Player_Attributes     WHERE date LIKE '2010%' ) SELECT player_api_id  FROM Player_Attributes  WHERE date LIKE '2010%'  ORDER BY (overall_rating - (SELECT avg_rating FROM AverageRating)) DESC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(T2.buildUpPlayPassing) FROM Team_Attributes AS T2 WHERE strftime('%Y', T2.date) = '2012') AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (COUNT(DISTINCT CASE WHEN T2.preferred_foot = 'left' THEN T1.player_api_id END) * 100.0 / COUNT(DISTINCT T1.player_api_id)) AS percentage FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE SUBSTR(T1.birthday, 1, 4) BETWEEN '1987' AND '1992';\t----- bird -----\teuropean_football_2",
    "1038": "SELECT League.name, SUM(Match.home_team_goal + Match.away_team_goal) AS total_goals FROM Match INNER JOIN League ON Match.league_id = League.id GROUP BY League.name ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T.team_long_name  FROM Team AS T  INNER JOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id  WHERE TA.buildUpPlayDribblingClass = 'Normal'  AND TA.date LIKE '2014%'  AND TA.chanceCreationPassing < (SELECT AVG(TA2.chanceCreationPassing)                                   FROM Team_Attributes AS TA2                                   WHERE TA2.buildUpPlayDribblingClass = 'Normal'                                   AND TA2.date LIKE '2014%') ORDER BY TA.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.name HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE birthday LIKE '1970-10-%';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT T1.finishing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Francois Affolter' AND T1.date = '2014-09-18'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Gabriel Tamas' AND T2.date LIKE '2011%'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.season = '2015/2016' AND L.name = 'Scotland Premier League'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.birthday = (SELECT MAX(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1051": "SELECT DISTINCT T1.player_name  FROM Player AS T1  INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  WHERE T2.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.weight < 130 AND PA.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T.team_short_name FROM Team AS T INNER JOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id WHERE TA.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT Player.birthday FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1056": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(Match.home_team_goal) FROM Match INNER JOIN League ON Match.league_id = League.id INNER JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT P.player_name  FROM Player AS P  INNER JOIN (     SELECT player_api_id, AVG(finishing) AS avg_finishing      FROM Player_Attributes      WHERE player_api_id IN (         SELECT player_api_id FROM Player WHERE height = (SELECT MAX(height) FROM Player)          UNION          SELECT player_api_id FROM Player WHERE height = (SELECT MIN(height) FROM Player)     )      GROUP BY player_api_id      ORDER BY avg_finishing DESC      LIMIT 1 ) AS A ON P.player_api_id = A.player_api_id\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE STRFTIME('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT P.player_name  FROM Player_Attributes AS PA  INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id  WHERE PA.overall_rating > 80 AND PA.date BETWEEN '2008-01-01 00:00:00' AND '2010-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT PA.potential  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE P.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT DISTINCT T1.team_short_name  FROM Team AS T1  INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T2.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 170 AND SUBSTRING(T1.date, 1, 4) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player WHERE height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(M.match_api_id) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE L.name = 'Germany 1. Bundesliga' AND M.date BETWEEN '2008-08-01' AND '2008-10-31'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = 61 AND T2.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61)\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (AVG(T1.ball_control) FILTER (WHERE T2.player_name = 'Abdou Diallo')) - (AVG(T1.ball_control) FILTER (WHERE T2.player_name = 'Aaron Appindangoye')) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday LIMIT 1\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.birthday < '1986-01-01' AND PA.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT T1.player_name, MAX(T2.crossing) AS max_crossing  FROM Player AS T1  INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  WHERE T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')  GROUP BY T1.player_name  ORDER BY max_crossing DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1086": "SELECT T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.height > 180 AND PA.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE season = '2008/2009' AND country_id = (SELECT id FROM Country WHERE name = 'Belgium');\t----- bird -----\teuropean_football_2",
    "1090": "SELECT long_passing FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE birthday = (SELECT MIN(birthday) FROM Player))\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE L.name = 'Belgium Jupiler League' AND M.date LIKE '2009-04%'\t----- bird -----\teuropean_football_2",
    "1092": "WITH MatchCounts AS (     SELECT league_id, COUNT(id) AS match_count      FROM Match      WHERE season = '2008/2009'      GROUP BY league_id ) SELECT League.name  FROM League  INNER JOIN MatchCounts ON League.id = MatchCounts.league_id  WHERE MatchCounts.match_count = (SELECT MAX(match_count) FROM MatchCounts);\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE SUBSTRING(T2.birthday, 1, 4) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((Ariel_rating - Paulin_rating) / Paulin_rating) * 100 AS percentage_difference FROM (SELECT (SELECT MAX(PA.overall_rating) FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_fifa_api_id = P.player_fifa_api_id WHERE P.player_name = 'Ariel Borysiuk' AND PA.date = (SELECT MAX(date) FROM Player_Attributes WHERE player_fifa_api_id = P.player_fifa_api_id)) AS Ariel_rating, (SELECT MAX(PA.overall_rating) FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_fifa_api_id = P.player_fifa_api_id WHERE P.player_name = 'Paulin Puel' AND PA.date = (SELECT MAX(date) FROM Player_Attributes WHERE player_fifa_api_id = P.player_fifa_api_id)) AS Paulin_rating)\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T1.buildUpPlaySpeed) FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T1.chanceCreationPassing), T1.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(M.away_team_goal) FROM Match AS M INNER JOIN Team AS T ON M.away_team_api_id = T.team_api_id INNER JOIN Country AS C ON M.country_id = C.id WHERE C.name = 'Italy' AND T.team_long_name = 'Parma'\t----- bird -----\teuropean_football_2",
    "1102": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = 77 AND T1.date LIKE '2016-06-23%' ORDER BY T2.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Parravicini' AND T2.date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore' AND SUBSTR(T2.date, 1, 10) = '2015-05-01'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Berigaud' AND T2.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MIN(T1.date) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Kevin Constant' AND T1.crossing = (SELECT MAX(T3.crossing) FROM Player_Attributes AS T3 INNER JOIN Player AS T4 ON T3.player_fifa_api_id = T4.player_fifa_api_id WHERE T4.player_name = 'Kevin Constant')\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date = '2011-02-22'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T2.buildUpPlayDribblingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'LEI' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015-09-10'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Marko Arnautovic' AND T1.date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ((DonovanRating - BoweryRating) * 100.0 / BoweryRating) AS percentage  FROM (     SELECT          (SELECT PA1.overall_rating           FROM Player_Attributes AS PA1           INNER JOIN Player AS P1 ON PA1.player_api_id = P1.player_api_id           WHERE P1.player_name = 'Landon Donovan' AND PA1.date LIKE '2013-07-12%') AS DonovanRating,                   (SELECT PA2.overall_rating           FROM Player_Attributes AS PA2           INNER JOIN Player AS P2 ON PA2.player_api_id = P2.player_api_id           WHERE P2.player_name = 'Jordan Bowery' AND PA2.date LIKE '2013-07-12%') AS BoweryRating ) AS Ratings WHERE BoweryRating IS NOT NULL;\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE STRFTIME('%Y', 'now') - STRFTIME('%Y', birthday) >= 35\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(M.home_team_goal)  FROM Match AS M  JOIN Player AS P ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11) WHERE P.player_name = 'Aaron Lennon'\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(M.away_team_goal)  FROM Match AS M  INNER JOIN Player AS P ON P.player_api_id IN (M.away_player_1, M.away_player_2, M.away_player_3, M.away_player_4, M.away_player_5, M.away_player_6, M.away_player_7, M.away_player_8, M.away_player_9, M.away_player_10, M.away_player_11)  WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(Match.home_team_goal) FROM Match INNER JOIN Player ON Player.player_api_id IN (Match.home_player_1, Match.home_player_2, Match.home_player_3, Match.home_player_4, Match.home_player_5, Match.home_player_6, Match.home_player_7, Match.home_player_8, Match.home_player_9, Match.home_player_10, Match.home_player_11) WHERE STRFTIME('%Y', 'now') - STRFTIME('%Y', Player.birthday) <= 30\t----- bird -----\teuropean_football_2",
    "1122": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1123": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1124": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE PA.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.finishing = 1 ORDER BY T1.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT DISTINCT P.player_name FROM Player AS P INNER JOIN Match AS M ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11, M.away_player_1, M.away_player_2, M.away_player_3, M.away_player_4, M.away_player_5, M.away_player_6, M.away_player_7, M.away_player_8, M.away_player_9, M.away_player_10, M.away_player_11) WHERE M.league_id IN (SELECT L.id FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Belgium')\t----- bird -----\teuropean_football_2",
    "1127": "SELECT DISTINCT C.name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  INNER JOIN Match AS M ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11, M.away_player_1, M.away_player_2, M.away_player_3, M.away_player_4, M.away_player_5, M.away_player_6, M.away_player_7, M.away_player_8, M.away_player_9, M.away_player_10, M.away_player_11)  INNER JOIN Country AS C ON C.id = M.country_id  WHERE PA.vision >= 90\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name  FROM Country  JOIN (SELECT Match.country_id, AVG(Player.weight) AS avg_weight        FROM Match        JOIN Player ON Match.home_player_1 = Player.player_api_id OR Match.away_player_11 = Player.player_api_id        GROUP BY Match.country_id) AS avg_weights  ON Country.id = avg_weights.country_id  WHERE avg_weight = (SELECT MAX(avg_weight)                      FROM (SELECT AVG(Player.weight) AS avg_weight                            FROM Match                            JOIN Player ON Match.home_player_1 = Player.player_api_id OR Match.away_player_11 = Player.player_api_id                            GROUP BY Match.country_id));\t----- bird -----\teuropean_football_2",
    "1129": "SELECT DISTINCT T1.team_long_name  FROM Team AS T1  INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(P.height) FROM Player AS P INNER JOIN Match AS M ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11, M.away_player_1, M.away_player_2, M.away_player_3, M.away_player_4, M.away_player_5, M.away_player_6, M.away_player_7, M.away_player_8, M.away_player_9, M.away_player_10, M.away_player_11) INNER JOIN League AS L ON M.league_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 ORDER BY T2.overall_rating DESC, T1.player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE birthday >= '2000-01-01 00:00:00' AND player_name LIKE 'Aaron %';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (SELECT Player_Attributes.jumping FROM Player_Attributes INNER JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.id = 6) - (SELECT Player_Attributes.jumping FROM Player_Attributes INNER JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.id = 23) AS jumping_difference\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (COUNT(DISTINCT CASE WHEN `strength` > 80 AND `stamina` > 80 THEN `player_api_id` END) * 100.0 / COUNT(DISTINCT `player_api_id`)) AS percentage FROM `Player_Attributes`\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT M.home_team_goal, M.away_team_goal FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.date = '2008-09-24' AND L.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge' AND T2.buildUpPlaySpeedClass IN ('Slow', 'Balanced', 'Fast')\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE L.name = 'Italy Serie A' AND M.season = '2015/2016'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(T1.home_team_goal) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Netherlands Eredivisie'\t----- bird -----\teuropean_football_2",
    "1144": "SELECT T1.finishing, T1.curve FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name, COUNT(Match.id) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY Match.league_id ORDER BY COUNT(Match.id) DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Team AS T2 INNER JOIN (SELECT away_team_api_id, SUM(away_team_goal) AS total_goals FROM Match GROUP BY away_team_api_id ORDER BY total_goals DESC LIMIT 1) AS T1 ON T1.away_team_api_id = T2.team_api_id\t----- bird -----\teuropean_football_2",
    "1147": "SELECT P.player_name FROM Player P INNER JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE PA.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (SUM(CASE WHEN T1.height < 180 AND T2.strength > 70 THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT T1.player_api_id)) * 100 AS percentage FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "1149": "SELECT CASE WHEN COUNT(CASE WHEN Admission = '+' AND SEX = 'M' THEN 1 END) > COUNT(CASE WHEN Admission = '-' AND SEX = 'M' THEN 1 END) THEN 'More In-Patients' ELSE 'More Out-Patients' END AS Patient_Type,        (ABS(COUNT(CASE WHEN Admission = '+' AND SEX = 'M' THEN 1 END) - COUNT(CASE WHEN Admission = '-' AND SEX = 'M' THEN 1 END)) * 100.0) / NULLIF((COUNT(CASE WHEN Admission = '+' AND SEX = 'M' THEN 1 END) + COUNT(CASE WHEN Admission = '-' AND SEX = 'M' THEN 1 END)), 0) AS Deviation_Percentage FROM Patient WHERE SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (COUNT(ID) * 100.0) / (SELECT COUNT(ID) FROM Patient WHERE SUBSTR(Birthday, 1, 4) > '1930') AS percentage FROM Patient WHERE SEX = 'F' AND SUBSTR(Birthday, 1, 4) > '1930';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT (COUNT(CASE WHEN Admission = '+' THEN 1 END) * 100.0 / COUNT(ID)) AS percentage FROM Patient WHERE EXTRACT(YEAR FROM Birthday) BETWEEN 1930 AND 1940\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(COUNT(CASE WHEN Admission = '-' THEN ID END) AS REAL) / NULLIF(COUNT(CASE WHEN Admission = '+' THEN ID END), 0) FROM Patient WHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT P.Diagnosis, L.Date  FROM Patient AS P  LEFT JOIN Laboratory AS L ON P.ID = L.ID  WHERE P.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = '163109'\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, (STRFTIME('%Y', 'now') - STRFTIME('%Y', Patient.Birthday)) AS age FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT T2.* FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE T2.Birthday LIKE '1937%' AND T1.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(DISTINCT CASE WHEN T2.TP <= 6.0 OR T2.TP >= 8.5 THEN T1.ID END) * 100.0 / COUNT(DISTINCT T1.ID)) AS percentage FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(E.`aCL IgG`)  FROM `Patient` AS P  INNER JOIN `Examination` AS E ON P.ID = E.ID  WHERE P.`Admission` = '+'  AND (julianday('now') - julianday(P.Birthday)) / 365.25 >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND substr(\"First Date\", 1, 4) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(strftime('%Y', `First Date`) - strftime('%Y', `Birthday`)) FROM Patient WHERE `First Date` IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT T2.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND SUBSTR(T1.\"Examination Date\", 1, 4) = '1997' AND T2.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT (MAX(P.Birthday) - MIN(P.Birthday)) AS age_gap  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.TG < 200\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT E.Symptoms, E.Diagnosis FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE P.Birthday = (SELECT MAX(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Examination))\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(monthly_count) FROM (SELECT COUNT(DISTINCT Patient.ID) AS monthly_count FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'M' AND Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY strftime('%m', Laboratory.Date))\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT T2.`Date`, (JULIANDAY(T1.`First Date`) - JULIANDAY(T1.Birthday)) AS Age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = (SELECT MIN(Birthday) FROM Patient WHERE Diagnosis LIKE '%SJS%' OR ID IN (SELECT ID FROM Examination WHERE Diagnosis LIKE '%SjS%'))\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT      COUNT(DISTINCT CASE WHEN Patient.SEX = 'M' AND Laboratory.UA <= 8.0 THEN Patient.ID END) * 1.0 /      NULLIF(COUNT(DISTINCT CASE WHEN Patient.SEX = 'F' AND Laboratory.UA <= 6.5 THEN Patient.ID END), 0) AS ratio  FROM      Patient  INNER JOIN      Laboratory ON Patient.ID = Laboratory.ID;\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) FROM Patient AS P LEFT JOIN Examination AS E ON P.ID = E.ID WHERE P.`First Date` IS NOT NULL GROUP BY P.ID HAVING (MIN(E.`Examination Date`) >= DATE_ADD(P.`First Date`, INTERVAL 1 YEAR) OR MIN(E.`Examination Date`) IS NULL)\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE P.Birthday > '1975-12-31' AND E.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-BIL` >= 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Examination.Diagnosis FROM Examination INNER JOIN Laboratory ON Laboratory.ID = Examination.ID WHERE Laboratory.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Examination.Diagnosis ORDER BY COUNT(Examination.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - CAST(strftime('%Y', T2.Birthday) AS INTEGER)) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date LIKE '1991-10%' AND T2.Birthday IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT (strftime('%Y', E.\"Examination Date\") - strftime('%Y', P.Birthday)) AS age, E.Diagnosis FROM Laboratory AS L INNER JOIN Examination AS E ON L.ID = E.ID AND L.Date = E.\"Examination Date\" INNER JOIN Patient AS P ON E.ID = P.ID WHERE L.HGB = (SELECT MAX(HGB) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT T1.ANA FROM Examination AS T1 WHERE T1.ID = 3605340 AND T1.`Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN `T-CHO` < 250 THEN 'Yes' ELSE 'No' END AS Cholesterol_Status FROM `Laboratory` WHERE `ID` = 2927464 AND `Date` = '1995-09-04'\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE UPPER(T2.Diagnosis) = 'AORTITIS' AND T2.`Examination Date` = (SELECT MIN(`Examination Date`) FROM Examination WHERE UPPER(Diagnosis) = 'AORTITIS')\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT `aCL IgG`, `aCL IgM`, `aCL IgA` FROM `Examination` WHERE `ID` = (SELECT `ID` FROM `Examination` WHERE `Diagnosis` LIKE '%SLE%' AND `Examination Date` = '1994-02-19') AND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT T2.SEX FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT = 9 AND T1.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT (STRFTIME('%Y', L.Date) - STRFTIME('%Y', P.Birthday)) - (CASE WHEN (STRFTIME('%m', L.Date) < STRFTIME('%m', P.Birthday)) OR (STRFTIME('%m', L.Date) = STRFTIME('%m', P.Birthday) AND STRFTIME('%d', L.Date) < STRFTIME('%d', P.Birthday)) THEN 1 ELSE 0 END) AS age FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.UA = 8.4 AND L.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.`First Date` = '1991-06-13' AND T2.Diagnosis = 'SJS' AND T1.Date BETWEEN '1995-01-01' AND '1995-12-31'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%SLE%' AND T1.\"Examination Date\" = '1997-01-27' AND T1.\"Examination Date\" = (SELECT MIN(T3.\"Examination Date\") FROM Examination AS T3 WHERE T3.ID = T1.ID)\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T2.Symptoms FROM Examination AS T2 INNER JOIN Patient AS T1 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-03-01' AND T2.`Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((AVG(CASE WHEN L.Date like '1981-12-%' THEN L.`T-CHO` END) - AVG(CASE WHEN L.Date like '1981-11-%' THEN L.`T-CHO` END)) / AVG(CASE WHEN L.Date like '1981-11-%' THEN L.`T-CHO` END)) * 100 FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday = '1959-02-18' AND (L.Date like '1981-11-%' OR L.Date like '1981-12-%')\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T2.`Examination Date` BETWEEN '1970-01-01' AND '1997-12-31'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T3.`GPT` > 30 AND T3.`ALB` < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(Patient.ID) FROM Patient WHERE Patient.SEX = 'F' AND strftime('%Y', Patient.Birthday) = '1964' AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Thrombosis = 2 AND E.\"ANA Pattern\" = 'S' AND E.\"aCL IgM\" > 1.2 * (SELECT AVG(E2.\"aCL IgM\") FROM Examination AS E2)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (COUNT(DISTINCT Lab.ID) * 100.0 / NULLIF((SELECT COUNT(DISTINCT Lab2.ID) FROM Laboratory AS Lab2 WHERE CAST(Lab2.\"U-PRO\" AS REAL) > 0 AND CAST(Lab2.\"U-PRO\" AS REAL) < 30), 0)) AS percentage FROM Laboratory AS Lab JOIN Patient AS Pat ON Lab.ID = Pat.ID WHERE ((Lab.UA < 8.0 AND Pat.SEX = 'M') OR (Lab.UA < 6.5 AND Pat.SEX = 'F')) AND CAST(Lab.\"U-PRO\" AS REAL) > 0 AND CAST(Lab.\"U-PRO\" AS REAL) < 30\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (COUNT(T1.ID) * 100.0 / (SELECT COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'M' AND SUBSTR(T1.`First Date`, 1, 4) = '1981')) AS percentage FROM Patient AS T1 WHERE T1.SEX = 'M' AND SUBSTR(T1.`First Date`, 1, 4) = '1981' AND T1.Diagnosis LIKE '%BEHCET%'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT T1.ID, T1.`First Date`, T1.Birthday, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.\"ANA Pattern\" != 'P' AND P.SEX = 'F' AND P.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT P.SEX FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Diagnosis LIKE '%PSS%' AND L.CRP = '2+' AND L.CRE = 1.0 AND L.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(LAB.ALB) FROM Laboratory AS LAB INNER JOIN Patient AS PAT ON LAB.ID = PAT.ID WHERE PAT.SEX = 'F' AND LAB.PLT > 400 AND PAT.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' GROUP BY T1.Symptoms ORDER BY COUNT(T1.Symptoms) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Description, Diagnosis FROM Patient WHERE ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 LEFT JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T1.Diagnosis LIKE '%APS%' OR T2.Diagnosis LIKE '%APS%')\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory WHERE strftime('%Y', Laboratory.Date) = '1997' AND (Laboratory.TP <= 6.0 OR Laboratory.TP >= 8.5);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT COUNT(DISTINCT T1.ID) * 1.0 / COUNT(DISTINCT T2.ID)  FROM (SELECT DISTINCT ID FROM Patient WHERE Diagnosis LIKE '%SLE%' UNION SELECT DISTINCT ID FROM Examination WHERE Diagnosis LIKE '%SLE%') AS T1  INNER JOIN (SELECT DISTINCT ID FROM Laboratory WHERE PLT < 100) AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (COUNT(ID) * 100.0) / (SELECT COUNT(ID) FROM Patient WHERE SUBSTR(Birthday, 1, 4) = '1980' AND Diagnosis = 'RA') AS percentage  FROM Patient  WHERE SEX = 'F' AND SUBSTR(Birthday, 1, 4) = '1980' AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND T2.Diagnosis LIKE '%Behcet%' AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT (E.`Examination Date` - P.`First Date`) AS Duration FROM `Patient` AS P INNER JOIN `Examination` AS E ON P.ID = E.ID WHERE P.ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN ((T1.UA > 8.0 AND T2.SEX = 'M') OR (T1.UA > 6.5 AND T2.SEX = 'F')) THEN 'Yes' ELSE 'No' END FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT `Date` FROM `Laboratory` WHERE `ID` = 48473 AND `GOT` > 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T2.Date BETWEEN '1994-01-01' AND '1994-12-31'\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GPT > 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT > 60 ORDER BY T2.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(T1.LDH) FROM Laboratory AS T1 WHERE T1.LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT Patient.ID, (STRFTIME('%Y', Laboratory.Date) - STRFTIME('%Y', Patient.Birthday)) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.Admission, COUNT(*) AS Count FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.ALP < 300 GROUP BY Patient.Admission\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01' AND T2.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT CASE WHEN T1.TP < 6.0 THEN 6.0 - T1.TP ELSE T1.TP - 8.5 END FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND (T1.TP < 6.0 OR T1.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.ALB <= 3.5 OR T2.ALB >= 5.5) ORDER BY T1.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT P.ID, CASE WHEN L.ALB BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Out of Normal Range' END AS Albumin_Status FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) = '1982'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(DISTINCT CASE WHEN T2.UA > 6.5 THEN T1.ID END) * 100.0 / COUNT(DISTINCT T1.ID)) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA)  FROM Laboratory AS L  INNER JOIN Patient AS P ON L.ID = P.ID  WHERE ((L.UA > 8.0 AND P.SEX = 'M') OR (L.UA > 6.5 AND P.SEX = 'F'))  AND L.Date = (SELECT MAX(L2.Date) FROM Laboratory AS L2 WHERE L2.ID = P.ID)\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT DISTINCT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.UN = 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE LOWER(T2.Diagnosis) LIKE '%ra%' AND T3.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE             WHEN COUNT(DISTINCT CASE WHEN P.SEX = 'M' AND L.CRE >= 1.5 THEN P.ID END) >                  COUNT(DISTINCT CASE WHEN P.SEX = 'F' AND L.CRE >= 1.5 THEN P.ID END)             THEN 'True'             ELSE 'False'         END AS Result FROM Patient P  INNER JOIN Laboratory L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.\"T-BIL\" = (SELECT MAX(\"T-BIL\") FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT T1.SEX, COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 GROUP BY T1.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T2.`T-CHO`  FROM Patient AS T1  INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID  WHERE T2.`T-CHO` = (SELECT MAX(`T-CHO`) FROM Laboratory)  AND T1.Birthday = (SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` = (SELECT MAX(`T-CHO`) FROM Laboratory)))\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(CURRENT_DATE - T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG >= 200 AND strftime('%Y', L.Date) - strftime('%Y', P.Birthday) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND P.SEX = 'M' AND L.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT T1.ID, T1.SEX, CAST((JULIANDAY(T2.Date) - JULIANDAY(T1.Birthday)) / 365.25 AS INTEGER) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT T1.ID, T2.GLU FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Description BETWEEN '1991-01-01' AND '1991-12-31' AND T2.GLU < 180\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC < 3.5 OR T2.WBC > 9.0 GROUP BY T1.SEX ORDER BY T1.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT P.ID, strftime('%Y', 'now') - strftime('%Y', P.Birthday) AS Age, P.Diagnosis  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50 AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT Patient.ID, Patient.SEX FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%SLE%' AND T2.HGB BETWEEN 10 AND 17 GROUP BY T1.ID, T1.SEX ORDER BY MIN(T1.Birthday) ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT P.ID, strftime('%Y', 'now') - strftime('%Y', P.Birthday) AS age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.HCT > 52 GROUP BY P.ID HAVING COUNT(L.HCT) >= 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE HCT < 29 AND Date BETWEEN '1991-01-01' AND '1991-12-31';\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(DISTINCT CASE WHEN PLT <= 100 THEN ID END) AS LowerCount, COUNT(DISTINCT CASE WHEN PLT >= 400 THEN ID END) AS HigherCount FROM Laboratory WHERE PLT < 100 OR PLT > 400\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT T2.ID, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date LIKE '1984%' AND STRFTIME('%Y', T2.Birthday) < '1935' AND T1.PLT > 100 AND T1.PLT < 400\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (COUNT(T1.ID) * 100.0 / NULLIF(COUNT(T2.ID), 0)) AS percentage  FROM Patient AS T1  INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID  WHERE STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday) > 55  AND T2.PT >= 14  AND T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.`First Date` > '1992-12-31' AND L.PT < 14 AND L.PT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` > '1997-01-01' AND T2.APTT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.APTT >= 45 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(*) FROM Patient AS P WHERE P.SEX = 'M' AND EXISTS (SELECT 1 FROM Laboratory AS L WHERE L.ID = P.ID AND L.WBC BETWEEN 3.5 AND 9.0) AND EXISTS (SELECT 1 FROM Laboratory AS L WHERE L.ID = P.ID AND (L.FG < 150 OR L.FG > 450))\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday > '1980-01-01' AND (L.FG < 150 OR L.FG > 450)\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.`U-PRO` > 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE (L.\"U-PRO\" = 'TR' OR (L.\"U-PRO\" IS NOT NULL AND CAST(L.\"U-PRO\" AS REAL) > 0 AND CAST(L.\"U-PRO\" AS REAL) < 30)) AND (P.Diagnosis LIKE '%SLE%' OR E.Diagnosis LIKE '%SLE%')\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 WHERE T1.IGG > 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Examination.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON L.ID = P.ID WHERE L.IGA = (SELECT MAX(IGA) FROM Laboratory WHERE IGA > 80 AND IGA < 500)\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 AND T1.`First Date` > '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT P.Diagnosis, COUNT(P.Diagnosis) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGM <= 40 OR L.IGM >= 400 GROUP BY P.Diagnosis ORDER BY COUNT(P.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Laboratory WHERE CAST(CRP AS FLOAT) >= 1.0 AND ID NOT IN (SELECT ID FROM Patient);\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND (strftime('%Y', T2.Date) - strftime('%Y', T1.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON L.ID = P.ID INNER JOIN Examination AS E ON E.ID = P.ID WHERE L.RA IN ('-', '+-') AND (E.KCT = '+' OR E.RVVT = '+' OR E.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT P.Diagnosis  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE P.Birthday > '1985-01-01' AND L.RA = '-'\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT P.ID  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.RA IN ('-', '+-')  AND (STRFTIME('%Y', L.Date) - STRFTIME('%Y', P.Birthday)) >= 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE (L.RF LIKE '<%' AND CAST(SUBSTRING(L.RF, 2) AS DECIMAL) < 20) OR (CAST(L.RF AS DECIMAL) < 20) AND E.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT P.ID) FROM Laboratory AS L INNER JOIN Examination AS E ON L.ID = E.ID INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.C3 > 35 AND E.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.HCT <= 29 OR L.HCT >= 52 ORDER BY (E.\"aCL IgG\" + E.\"aCL IgM\" + E.\"aCL IgA\") DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.Thrombosis IN (1, 2, 3) AND L.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.RNP = '0' AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT MAX(P.Birthday) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RNP = '1'\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Examination WHERE \"anti-SM\" = '0' AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM = '1' ORDER BY T1.Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT P.ID FROM Patient AS P LEFT JOIN Examination AS E ON P.ID = E.ID LEFT JOIN Laboratory AS L ON P.ID = L.ID WHERE E.`Examination Date` > '1997-01-01' AND (L.SC170 = 'negative' OR L.SC170 IS NULL)\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.SC170 = 'negative' AND P.SEX = 'F' AND E.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SSA = '0' AND substr(P.\"First Date\", 1, 4) < '2000'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SSA NOT IN ('-', '+-') AND L.SSA IS NOT NULL ORDER BY P.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.SSB IN ('N', '-') AND T3.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SSB IN ('-', '+-') AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-') AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE CAST(T1.DNA AS FLOAT) > 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE CAST(T2.DNA AS REAL) < 8 OR T2.DNA IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGG > 900 AND L.IGG < 2000 AND P.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (COUNT(DISTINCT T1.ID) * 100.0 / NULLIF(COUNT(DISTINCT T1.ID), 0))  FROM Patient AS T1  INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID  WHERE T2.GOT >= 60 AND T1.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(T2.Birthday) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT < 60 ORDER BY Laboratory.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT < 60 AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT P.Description FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.LDH = (SELECT MAX(LDH) FROM Laboratory WHERE LDH < 500) LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Date) FROM Laboratory WHERE LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALP >= 300 AND P.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '-' AND L.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT P.Diagnosis  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%SJS%' AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT T1.`Examination Date` FROM `Examination` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.ID = T2.ID WHERE T2.ALB BETWEEN 3.5 AND 5.5 AND T2.ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB BETWEEN 3.5 AND 5.5)\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT E.`aCL IgG`, E.`aCL IgM`, E.`aCL IgA` FROM `Examination` AS E JOIN `Patient` AS P ON E.`ID` = P.`ID` JOIN `Laboratory` AS L ON P.`ID` = L.`ID` WHERE P.`SEX` = 'F' AND L.`UA` = (SELECT MAX(`UA`) FROM `Laboratory` WHERE `UA` > 6.5)\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(T1.ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.CRE < 1.5 GROUP BY P.ID HAVING MAX(CASE WHEN E.`aCL IgG` >= E.`aCL IgM` AND E.`aCL IgG` >= E.`aCL IgA` THEN E.`aCL IgG` WHEN E.`aCL IgM` >= E.`aCL IgG` AND E.`aCL IgM` >= E.`aCL IgA` THEN E.`aCL IgM` ELSE E.`aCL IgA` END) = (SELECT MAX(CASE WHEN E2.`aCL IgG` >= E2.`aCL IgM` AND E2.`aCL IgG` >= E2.`aCL IgA` THEN E2.`aCL IgG` WHEN E2.`aCL IgM` >= E2.`aCL IgG` AND E2.`aCL IgM` >= E2.`aCL IgA` THEN E2.`aCL IgM` ELSE E2.`aCL IgA` END) FROM Examination AS E2 INNER JOIN Laboratory AS L2 ON E2.ID = L2.ID WHERE L2.CRE < 1.5)\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.`T-BIL` >= 2.0 AND E.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT Examination.ANA FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory WHERE `T-BIL` < 2.0) AND Laboratory.ID IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.\"T-CHO\" >= 250 AND (E.KCT = '-' OR E.RVVT = '-' OR E.LAC = '-')\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` < 250 AND T2.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.TG < 200 AND T1.TG IS NOT NULL AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG = (SELECT MAX(TG) FROM Laboratory WHERE TG < 200)\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Thrombosis = 0 AND L.CPK >= 250 AND L.CPK IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250 AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Patient.Birthday) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU >= 180\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.GLU < 180 AND E.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '+' AND L.WBC > 3.5 AND L.WBC < 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'SLE' AND L.WBC > 3.5 AND L.WBC < 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 WHERE EXISTS (SELECT 1 FROM Laboratory AS T2 WHERE T2.ID = T1.ID AND T2.PLT > 100 AND T2.PLT < 400) AND EXISTS (SELECT 1 FROM Examination AS T3 WHERE T3.ID = T1.ID AND T3.Symptoms IS NOT NULL)\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.PLT FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Diagnosis LIKE '%MCTD%'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(T2.PT) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.PT < 14 AND T2.PT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Thrombosis = 2 AND Laboratory.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name || ' ' || T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design Department'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT member.phone FROM member INNER JOIN attendance ON attendance.link_to_member = member.member_id INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'Women''s Soccer' AND M.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT T1.event_id FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id ORDER BY COUNT(T2.link_to_member) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT event.event_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison' AND T3.event_date BETWEEN '2019-01-01' AND '2019-12-31'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T2.link_to_event HAVING COUNT(T2.link_to_member) > 10 AND T1.type = 'Meeting'\t----- bird -----\tstudent_club",
    "1323": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20 AND T1.type != 'Fundraiser'\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM (SELECT COUNT(T1.link_to_member) AS attendance_count FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting' AND T2.event_date LIKE '2020%' GROUP BY T2.event_id)\t----- bird -----\tstudent_club",
    "1325": "SELECT e.expense_description  FROM expense e  INNER JOIN budget b ON e.link_to_budget = b.budget_id  WHERE e.cost = (SELECT MAX(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IS NOT NULL))\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT M.first_name || ' ' || M.last_name FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T2.last_name FROM member AS T2 INNER JOIN major AS T1 ON T2.link_to_major = T1.major_id WHERE T1.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT T1.amount FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T2.category = 'Food' AND T3.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T2.category = 'Advertisement' AND T3.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT DISTINCT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.last_name IN ('Pierce', 'Guidi')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Speaker'\t----- bird -----\tstudent_club",
    "1338": "SELECT COUNT(*) = (SELECT COUNT(*) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T3.event_date LIKE '2019-10-08%') FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T3.event_date LIKE '2019-10-08%' AND T1.approved = 'true'\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(T3.cost) FROM expense AS T3  INNER JOIN budget AS T2 ON T3.link_to_budget = T2.budget_id  INNER JOIN attendance AS T1 ON T2.link_to_event = T1.link_to_event  INNER JOIN member AS T4 ON T1.link_to_member = T4.member_id  INNER JOIN event AS T5 ON T2.link_to_event = T5.event_id  WHERE T4.first_name = 'Elijah' AND T4.last_name = 'Allen'  AND STRFTIME('%m', T5.event_date) IN ('09', '10')\t----- bird -----\tstudent_club",
    "1340": "SELECT (SUM(B.spent) FILTER (WHERE SUBSTR(E.event_date, 1, 4) = '2019') - SUM(B.spent) FILTER (WHERE SUBSTR(E.event_date, 1, 4) = '2020')) AS difference FROM budget AS B INNER JOIN event AS E ON B.link_to_event = E.event_id WHERE E.type = 'Student_Club'\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description LIKE '%Posters%' AND expense_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food')\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT T3.county FROM member AS T1 INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O''Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT T3.status FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT income.date_received FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT T2.first_name || ' ' || T2.last_name  FROM income AS T1  INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id  WHERE T1.source = 'Dues'  AND T1.date_received = (SELECT MIN(date_received) FROM income WHERE source = 'Dues')\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM budget AS B1 INNER JOIN event AS E1 ON B1.link_to_event = E1.event_id INNER JOIN budget AS B2 ON B1.category = B2.category INNER JOIN event AS E2 ON B2.link_to_event = E2.event_id WHERE B1.category = 'Advertisement' AND E1.event_name = 'Yearly Kickoff' AND B2.category = 'Advertisement' AND E2.event_name = 'October Meeting' AND B1.amount > B2.amount\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(CASE WHEN B.category = 'Parking' THEN B.amount ELSE 0 END) * 100.0 / SUM(B.amount)) AS parking_budget_percentage FROM budget AS B INNER JOIN event AS E ON B.link_to_event = E.event_id WHERE E.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T2.expense_description, T2.cost FROM expense AS T2 INNER JOIN budget AS T1 ON T2.link_to_budget = T1.budget_id WHERE T1.remaining = (SELECT MIN(remaining) FROM budget)\t----- bird -----\tstudent_club",
    "1366": "SELECT DISTINCT T3.first_name, T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major GROUP BY T1.college ORDER BY COUNT(T2.link_to_major) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.amount = (SELECT MAX(amount) FROM budget)\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.* FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240'\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT T2.event_id, (SUM(T1.spent) / SUM(T1.amount)) AS spend_to_budget_ratio FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.status = 'Closed' GROUP BY T2.event_id ORDER BY spend_to_budget_ratio DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND event_date LIKE '2020%'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.major_name = 'Interior Design' AND T4.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Grant' AND T2.last_name = 'Gilmour'\t----- bird -----\tstudent_club",
    "1385": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.link_to_major IS NOT NULL AND T2.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1387": "SELECT T2.first_name, T2.last_name FROM member AS T2 INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member INNER JOIN event AS T1 ON T3.link_to_event = T1.event_id WHERE T1.event_name = 'Yearly Kickoff' AND T2.position = 'Treasurer'\t----- bird -----\tstudent_club",
    "1388": "SELECT T2.first_name, T2.last_name, T1.source  FROM income AS T1  INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id  ORDER BY T1.amount DESC  LIMIT 1\t----- bird -----\tstudent_club",
    "1389": "SELECT EV.event_name FROM expense AS E INNER JOIN budget AS B ON E.link_to_budget = B.budget_id INNER JOIN event AS EV ON B.link_to_event = EV.event_id WHERE E.cost = (SELECT MIN(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(CASE WHEN T3.event_name = 'Yearly Kickoff' THEN T1.cost ELSE 0 END) / SUM(T1.cost)) * 100 AS percentage FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id\t----- bird -----\tstudent_club",
    "1391": "SELECT (SUM(CASE WHEN T2.major_name = 'Finance' THEN 1 ELSE 0 END) * 1.0) / (SUM(CASE WHEN T2.major_name = 'Physics' THEN 1 ELSE 0 END)) AS ratio FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id\t----- bird -----\tstudent_club",
    "1392": "SELECT source, SUM(amount) AS total_amount FROM income WHERE date_received LIKE '2019-09%' GROUP BY source ORDER BY total_amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT CONCAT(first_name, ' ', last_name) AS full_name, email FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND T2.event_date LIKE '2019-%'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(A.link_to_event), J.major_name FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN major AS J ON M.link_to_major = J.major_id WHERE M.first_name = 'Luisa' AND M.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T2.status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT event_name FROM event WHERE event_id = (SELECT link_to_event FROM budget WHERE category = 'Advertisement' ORDER BY spent DESC LIMIT 1);\t----- bird -----\tstudent_club",
    "1399": "SELECT EXISTS (SELECT 1 FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer') AS did_attend;\t----- bird -----\tstudent_club",
    "1400": "SELECT (COUNT(CASE WHEN event.type = 'Community Service' THEN 1 END) * 100.0 / COUNT(event.event_id)) AS percentage FROM event WHERE SUBSTR(event.event_date, 1, 4) = '2019'\t----- bird -----\tstudent_club",
    "1401": "SELECT SUM(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'September Speaker' AND T3.expense_description LIKE '%Posters%'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT T1.event_name  FROM event AS T1  INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event  INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget  WHERE T1.status = 'Closed'  GROUP BY T1.event_id  HAVING SUM(T3.cost) > T2.remaining  ORDER BY SUM(T3.cost) - T2.remaining DESC  LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT T1.expense_description, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T1.approved = 'true' GROUP BY T1.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT T2.category, T2.amount FROM budget AS T2 INNER JOIN event AS T1 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' ORDER BY T2.amount ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(amount) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1407": "SELECT amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(T1.cost) FROM expense AS T1 WHERE T1.link_to_budget IN (SELECT T2.budget_id FROM budget AS T2 WHERE T2.category = 'Parking')\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, SUM(T2.cost) AS total_cost  FROM member AS T1  INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member  WHERE T2.link_to_member = 'rec4BLdZHS2Blfp4v'  GROUP BY T1.first_name, T1.last_name\t----- bird -----\tstudent_club",
    "1411": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT DISTINCT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT M.zip FROM member AS M INNER JOIN expense AS E ON M.member_id = E.link_to_member WHERE E.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'School of Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'School of Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT T2.type FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT T1.type FROM event AS T1 WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT type FROM event WHERE event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (COUNT(T1.member_id) FILTER (WHERE T2.major_name = 'Business') * 100.0 / COUNT(T1.member_id)) AS percentage FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(income_id) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major.major_id) FROM major WHERE major.college = 'College of Agriculture and Applied Sciences' AND major.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT DISTINCT T1.category  FROM budget AS T1  INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id  WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0.0\t----- bird -----\tstudent_club",
    "1428": "SELECT Z.city, Z.state FROM member AS M INNER JOIN major AS MA ON M.link_to_major = MA.major_id INNER JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE MA.department = 'Electrical and Computer Engineering Department'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Social' AND T1.location = '900 E. Washington St.' AND T3.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T2.last_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.notes = 'Attend Women''s soccer game as a group.'\t----- bird -----\tstudent_club",
    "1432": "SELECT (COUNT(CASE WHEN income.amount = 50 THEN 1 END) * 100.0 / COUNT(income.amount)) AS percentage FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.t_shirt_size = 'Medium' AND income.source = 'Student_Club'\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE status = 'Closed' AND type = 'Game' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT DISTINCT T2.link_to_event FROM income AS T1 LEFT JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member WHERE T1.amount > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T3.first_name, T3.last_name, T2.link_to_event FROM expense AS T1 INNER JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.approved = 'true' AND T1.expense_date BETWEEN '2019-10-01' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT DISTINCT M.email  FROM expense AS E  INNER JOIN member AS M ON E.link_to_member = M.member_id  WHERE E.cost > 20.0 AND E.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT (COUNT(DISTINCT CASE WHEN T2.remaining < 0 THEN T1.event_id END) * 100.0 / COUNT(DISTINCT T1.event_id)) AS percentage FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT * FROM expense WHERE cost > 50.0;\t----- bird -----\tstudent_club",
    "1445": "SELECT DISTINCT first_name || ' ' || last_name AS full_name FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT (COUNT(CASE WHEN type = 'PO Box' THEN 1 END) * 100.0 / COUNT(zip_code)) AS percentage_po_box FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent < T2.amount\t----- bird -----\tstudent_club",
    "1448": "SELECT T3.event_name, T3.event_date FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Pizza' AND T1.cost > 50 AND T1.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT DISTINCT T1.first_name, T1.last_name, T3.major_name  FROM member AS T1  INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member  INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id  WHERE T2.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT Z.city, Z.state FROM event AS E INNER JOIN attendance AS A ON E.event_id = A.link_to_event INNER JOIN member AS M ON A.link_to_member = M.member_id INNER JOIN zip_code AS Z ON M.zip = Z.zip_code INNER JOIN income AS I ON M.member_id = I.link_to_member GROUP BY E.event_id HAVING COUNT(I.link_to_member) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) AS member_name, SUM(T2.cost) AS total_paid FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id GROUP BY T1.member_id HAVING COUNT(DISTINCT T3.link_to_event) > 1 ORDER BY total_paid DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent < (SELECT AVG(T3.spent) FROM budget AS T3 WHERE T3.category = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(CASE WHEN T3.type = 'Meeting' THEN T1.cost ELSE 0 END) / SUM(T1.cost)) * 100 AS percentage FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id\t----- bird -----\tstudent_club",
    "1455": "SELECT MAX(T2.amount) FROM budget AS T2 INNER JOIN expense AS T1 ON T2.budget_id = T1.link_to_budget WHERE LOWER(T1.expense_description) LIKE '%water%' OR LOWER(T1.expense_description) LIKE '%chips%' OR LOWER(T1.expense_description) LIKE '%cookies%'\t----- bird -----\tstudent_club",
    "1456": "SELECT T2.first_name || ' ' || T2.last_name AS full_name, SUM(T1.cost) AS total_spending FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T2.member_id ORDER BY total_spending DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "--error--\t----- bird -----\tstudent_club",
    "1458": "SELECT (COUNT(CASE WHEN zip_code.state = 'New Jersey' THEN member.member_id END) * 100.0) / COUNT(member.member_id) - (COUNT(CASE WHEN zip_code.state = 'Vermont' THEN member.member_id END) * 100.0) / COUNT(member.member_id) AS percentage_difference FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT CONCAT(T2.first_name, ' ', T2.last_name), T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description LIKE '%water%' AND T1.expense_description LIKE '%veggie tray%' AND T1.expense_description LIKE '%supplies%'\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT M.first_name || ' ' || M.last_name AS full_name, I.amount FROM member AS M INNER JOIN income AS I ON I.link_to_member = M.member_id WHERE I.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "1465": "SELECT budget.category FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT CONCAT(T1.first_name, ' ', T1.last_name), T3.college FROM member AS T1 INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT T3.event_name, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T2.category = 'Speaker Gifts' GROUP BY T3.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T1.zip = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN CustomerID END) * 1.0 / NULLIF(COUNT(CASE WHEN Currency = 'CZK' THEN CustomerID END), 0) AS ratio FROM customers WHERE Currency IN ('EUR', 'CZK')\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT T2.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date LIKE '2012%' AND T2.Segment = 'LAM' ORDER BY T1.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(yearmonth.Consumption) FROM yearmonth INNER JOIN customers ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'SME' AND yearmonth.Date LIKE '2013%'\t----- bird -----\tdebit_card_specializing",
    "1474": "WITH CustomerConsumption AS (     SELECT T1.CustomerID, SUM(T2.Consumption) AS TotalConsumption     FROM customers AS T1      INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID      WHERE T1.Currency = 'CZK' AND T2.Date LIKE '2011%'     GROUP BY T1.CustomerID ) SELECT CustomerID  FROM CustomerConsumption  WHERE TotalConsumption = (SELECT MAX(TotalConsumption) FROM CustomerConsumption);\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT C.CustomerID) FROM customers AS C INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE C.Segment = 'KAM' AND Y.Consumption < 30000 AND Y.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT (SUM(CASE WHEN customers.Currency = 'CZK' THEN yearmonth.Consumption ELSE 0 END) - SUM(CASE WHEN customers.Currency = 'EUR' THEN yearmonth.Consumption ELSE 0 END)) AS consumption_difference FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT SUBSTR(YM.Date, 1, 4) AS Year, SUM(YM.Consumption) AS TotalConsumption  FROM yearmonth AS YM  INNER JOIN customers AS C ON YM.CustomerID = C.CustomerID  WHERE C.Currency = 'EUR'  GROUP BY Year  ORDER BY TotalConsumption DESC  LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT customers.Segment  FROM customers  INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID  GROUP BY customers.Segment  HAVING SUM(yearmonth.Consumption) = (SELECT MIN(total_consumption)                                         FROM (SELECT SUM(yearmonth.Consumption) AS total_consumption                                               FROM customers                                               INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID                                               GROUP BY customers.Segment))\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(yearmonth.Date, 1, 4) AS Year, SUM(yearmonth.Consumption) AS TotalConsumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT Date FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND Date LIKE '2013%' AND Consumption = (SELECT MAX(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND Date LIKE '2013%')\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT      (AVG(CASE WHEN Segment = 'SME' THEN Consumption END) - AVG(CASE WHEN Segment = 'LAM' THEN Consumption END)) AS SME_LAM,     (AVG(CASE WHEN Segment = 'LAM' THEN Consumption END) - AVG(CASE WHEN Segment = 'KAM' THEN Consumption END)) AS LAM_KAM,     (AVG(CASE WHEN Segment = 'KAM' THEN Consumption END) - AVG(CASE WHEN Segment = 'SME' THEN Consumption END)) AS KAM_SME FROM      (SELECT          c.Segment,          AVG(ym.Consumption) AS Consumption     FROM          customers AS c     INNER JOIN          yearmonth AS ym ON c.CustomerID = ym.CustomerID     INNER JOIN          (SELECT              CustomerID          FROM              transactions_1k AS t         WHERE              t.Date BETWEEN '2013-01-01' AND '2013-12-31'          GROUP BY              t.CustomerID          HAVING              SUM(t.Amount * t.Price) = (SELECT                                             MIN(Total)                                         FROM                                             (SELECT                                                  CustomerID,                                                  SUM(Amount * Price) AS Total                                              FROM                                                  transactions_1k                                              WHERE                                                  Date BETWEEN '2013-01-01' AND '2013-12-31'                                              GROUP BY                                                  CustomerID))          ) AS min_consumption ON c.CustomerID = min_consumption.CustomerID     WHERE          c.Currency = 'CZK'      GROUP BY          c.Segment) AS avg_consumption\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT C.Segment,         ((SUM(CASE WHEN Y.Date LIKE '2013%' THEN Y.Consumption ELSE 0 END) -           SUM(CASE WHEN Y.Date LIKE '2012%' THEN Y.Consumption ELSE 0 END)) /           SUM(CASE WHEN Y.Date LIKE '2012%' THEN Y.Consumption ELSE 0 END)) * 100 AS percentage_increase  FROM yearmonth AS Y  INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID  WHERE C.Currency = 'EUR' AND C.Segment IN ('SME', 'LAM', 'KAM')  GROUP BY C.Segment  ORDER BY percentage_increase DESC\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (SUM(CASE WHEN Country = 'CZE' AND Segment = 'Discount' THEN 1 ELSE 0 END) - SUM(CASE WHEN Country = 'SVK' AND Segment = 'Discount' THEN 1 ELSE 0 END)) AS Difference FROM gasstations;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT      (SUM(CASE WHEN CustomerID = 7 THEN Consumption ELSE 0 END) -       SUM(CASE WHEN CustomerID = 5 THEN Consumption ELSE 0 END)) AS ConsumptionDifference FROM yearmonth  WHERE Date = '201304';\t----- bird -----\tdebit_card_specializing",
    "1486": "WITH SME_Counts AS (     SELECT          COUNT(CASE WHEN T2.Currency = 'CZK' THEN 1 END) AS CZK_Count,         COUNT(CASE WHEN T2.Currency = 'EUR' THEN 1 END) AS EUR_Count     FROM transactions_1k AS T1      INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID      WHERE T2.Segment = 'SME' ) SELECT (CZK_Count - EUR_Count) AS Difference FROM SME_Counts;\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND T2.Date = '201310' AND T2.Consumption = (SELECT MAX(T3.Consumption) FROM yearmonth AS T3 INNER JOIN customers AS T4 ON T3.CustomerID = T4.CustomerID WHERE T4.Segment = 'LAM' AND T4.Currency = 'EUR' AND T3.Date = '201310')\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT yearmonth.CustomerID, MAX(yearmonth.Consumption) FROM yearmonth INNER JOIN customers ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'KAM' GROUP BY yearmonth.CustomerID ORDER BY MAX(yearmonth.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Y.Consumption)  FROM yearmonth AS Y  INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID  WHERE C.Segment = 'KAM' AND Y.Date = '201305'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (COUNT(DISTINCT T1.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 WHERE T1.Segment = 'LAM')) AS percentage FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Consumption > 46.73\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (COUNT(CASE WHEN Segment = 'KAM' AND Currency = 'EUR' THEN CustomerID END) * 100.0 / COUNT(CASE WHEN Segment = 'KAM' THEN CustomerID END)) AS percentage FROM customers\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (COUNT(DISTINCT CASE WHEN T1.Consumption > 528.3 THEN T1.CustomerID END) * 100.0 / COUNT(DISTINCT T1.CustomerID)) AS percentage FROM yearmonth AS T1 WHERE T1.Date = '201202'\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) * 100.0 / COUNT(GasStationID)) AS percentage FROM gasstations WHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T2.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date = '201206' ORDER BY T1.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(yearmonth.Consumption) FROM yearmonth INNER JOIN customers ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT T2.Description FROM products AS T2 INNER JOIN transactions_1k AS T1 ON T1.ProductID = T2.ProductID WHERE T1.Date LIKE '201309%'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date BETWEEN '2013-06-01' AND '2013-06-30'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT T3.ChainID FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT DISTINCT P.Description  FROM transactions_1k AS T  INNER JOIN products AS P ON T.ProductID = P.ProductID  INNER JOIN customers AS C ON T.CustomerID = C.CustomerID  WHERE C.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Amount * Price) FROM transactions_1k WHERE strftime('%Y', Date) = '2012' AND strftime('%m', Date) = '01';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT P.Description  FROM transactions_1k AS T  INNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID  INNER JOIN products AS P ON T.ProductID = P.ProductID  WHERE G.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Price > 1000\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(T1.Amount * T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(T1.Amount * T1.Price) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Amount * Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Time = (SELECT MIN(Time) FROM transactions_1k WHERE Date = '2012-08-25') LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T2.Currency FROM customers AS T2 INNER JOIN transactions_1k AS T1 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T2.Segment FROM customers AS T2 INNER JOIN transactions_1k AS T1 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date = '2012-08-26' AND T1.Time < '12:00:00'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT T2.Segment FROM customers AS T2 WHERE T2.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = (SELECT MIN(Date) FROM transactions_1k))\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT yearmonth.Date, yearmonth.Consumption FROM yearmonth WHERE yearmonth.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-24' AND (Amount * Price) = 124.05) AND yearmonth.Date = '201201'\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date = '2012-08-26' AND T1.Time >= '08:00:00' AND T1.Time < '09:00:00'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT customers.Currency FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date BETWEEN '2013-06-01' AND '2013-06-30' GROUP BY customers.CustomerID HAVING SUM(transactions_1k.Amount * transactions_1k.Price) = 214582.17\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = '667467'\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE ABS(T1.Amount * T1.Price - 548.4) < 0.01 AND T1.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (COUNT(DISTINCT c.CustomerID) * 100.0 / NULLIF(COUNT(DISTINCT t.CustomerID), 0)) AS percentage  FROM customers AS c  JOIN transactions_1k AS t ON c.CustomerID = t.CustomerID  WHERE c.Currency = 'EUR' AND t.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((SUM(CASE WHEN yearmonth.Date LIKE '2012%' THEN yearmonth.Consumption ELSE 0 END) - SUM(CASE WHEN yearmonth.Date LIKE '2013%' THEN yearmonth.Consumption ELSE 0 END)) / SUM(CASE WHEN yearmonth.Date LIKE '2012%' THEN yearmonth.Consumption END)) * 100 AS decrease_rate  FROM yearmonth  WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price * Amount = 634.8 AND Date = '2012-08-25')\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT T1.GasStationID, SUM(T2.Amount * T2.Price) AS TotalRevenue FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID GROUP BY T1.GasStationID ORDER BY TotalRevenue DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) * 100.0 / COUNT(GasStationID)) AS percentage FROM gasstations WHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT      SUM(Amount * Price) AS TotalSpent,     SUM(CASE WHEN Date BETWEEN '2012-01-01' AND '2012-01-31' THEN Amount * Price ELSE 0 END) AS JanuarySpent FROM transactions_1k  WHERE CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT T2.Description FROM products AS T2 INNER JOIN transactions_1k AS T1 ON T1.ProductID = T2.ProductID GROUP BY T1.ProductID ORDER BY SUM(T1.Amount) DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T2.CustomerID, SUM(T1.Amount * T1.Price) / NULLIF(SUM(T1.Amount), 0) AS AveragePrice, T2.Currency FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T2.CustomerID ORDER BY SUM(T1.Amount * T1.Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT gasstations.Country FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE Price = (SELECT MAX(Price) FROM transactions_1k WHERE ProductID = 2)\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T2.Consumption FROM yearmonth AS T2 INNER JOIN transactions_1k AS T1 ON T1.CustomerID = T2.CustomerID WHERE T1.Price > 29.00 AND T1.ProductID = 5 AND T2.Date = '201208'\t----- bird -----\tdebit_card_specializing"
}