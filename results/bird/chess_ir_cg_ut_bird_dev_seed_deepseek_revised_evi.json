{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm WHERE `County Name` = 'Alameda'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT T1.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Percent (%) Eligible Free (Ages 5-17)` IS NOT NULL AND T2.`EdOpsCode` = 'CON' ORDER BY T1.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT Zip FROM schools WHERE Charter = '1' AND District = 'Fresno County Office of Education'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT S.MailStreet  FROM schools AS S  INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode  WHERE F.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE FundingType = 'Directly funded' AND Charter = 1 AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 500 AND T2.Magnet = 1\t----- bird -----\tcalifornia_schools",
    "7": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(T3.NumGE1500) FROM satscores AS T3 WHERE T3.NumGE1500 > 1500)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT T1.NumTstTakr FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T2.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath > 560 AND T1.FundingType = 'Directly funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT f.`FRPM Count (Ages 5-17)`  FROM frpm AS f  INNER JOIN satscores AS s ON f.`School Name` = s.`sname`  WHERE s.`AvgScrRead` = (SELECT MAX(`AvgScrRead`) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "11": "SELECT T1.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"Enrollment (K-12)\" > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(FR.`Percent (%) Eligible Free (Ages 5-17)`)  FROM satscores AS SAT  INNER JOIN frpm AS FR ON SAT.cds = FR.CDSCode  WHERE (SAT.NumGE1500 * 1.0 / SAT.NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT schools.Phone FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE NumTstTakr > 0 ORDER BY NumGE1500 / NumTstTakr DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT T2.NCESSchool FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.\"Enrollment (Ages 5-17)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T2.District, MAX(T1.AvgScrRead) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.StatusType = 'Active' GROUP BY T2.District ORDER BY MAX(T1.AvgScrRead) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Merged' AND T1.County = 'Alameda' AND T2.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT satscores.AvgScrWrite, schools.CharterNum FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrWrite > 499 ORDER BY satscores.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno' AND T1.FundingType = 'Directly funded' AND T2.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT Phone FROM schools WHERE CDSCode = (SELECT CDSCode FROM satscores WHERE AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores))\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.City = 'Los Angeles' AND T2.`Free Meal Count (K-12)` > 500.0 AND T2.`FRPM Count (K-12)` < 700.0\t----- bird -----\tcalifornia_schools",
    "22": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Contra Costa' AND T1.NumTstTakr = (SELECT MAX(T3.NumTstTakr) FROM satscores AS T3 INNER JOIN schools AS T4 ON T3.cds = T4.CDSCode WHERE T4.County = 'Contra Costa')\t----- bird -----\tcalifornia_schools",
    "23": "SELECT T2.School, CONCAT(T2.Street, ', ', T2.City, ', ', T2.State, ' ', T2.Zip) AS FullAddress FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE ABS(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT T1.`School Name`  FROM frpm AS T1  INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds  WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T2.`NumGE1500` > 0\t----- bird -----\tcalifornia_schools",
    "25": "SELECT T1.School, T1.FundingType FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath > 400 AND T2.cname = 'Riverside'\t----- bird -----\tcalifornia_schools",
    "26": "SELECT T2.School, T2.Street, T2.City, T2.State, T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`School Type` = 'High Schools (Public)' AND T2.City = 'Monterey' AND T1.`FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "27": "SELECT schools.School, AVG(satscores.AvgScrWrite) AS AvgWritingScore, schools.Phone, schools.Ext FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.OpenDate > '1991-12-31' OR schools.ClosedDate < '2000-01-01' GROUP BY schools.School, schools.Phone, schools.Ext\t----- bird -----\tcalifornia_schools",
    "28": "WITH AvgDifference AS (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) AS average_diff FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded') SELECT T2.School, T2.DOCType FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT average_diff FROM AvgDifference)\t----- bird -----\tcalifornia_schools",
    "29": "SELECT s.OpenDate  FROM schools AS s  INNER JOIN satscores AS ss ON s.CDSCode = ss.cds  WHERE ss.enroll12 = (SELECT MAX(enroll12) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "30": "SELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` IS NOT NULL ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `Percent (%) Eligible Free (K-12)` FROM `frpm` ORDER BY `Enrollment (K-12)` DESC LIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "32": "SELECT (T1.`Free Meal Count (K-12)` / T1.`Enrollment (K-12)`) AS eligible_rate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`SOC` = '66' AND T1.`Enrollment (K-12)` IS NOT NULL ORDER BY T1.`Free Meal Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T1.Website, T2.\"School Name\" FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"Free Meal Count (Ages 5-17)\" BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT frpm.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Kacey' AND schools.AdmLName1 = 'Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.AdmEmail1  FROM schools AS s  INNER JOIN satscores AS ss ON s.CDSCode = ss.cds  WHERE s.Charter = 1  ORDER BY ss.enroll12 ASC  LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT T1.AdmFName1, T1.AdmLName1, T1.AdmFName2, T1.AdmLName2  FROM schools AS T1  INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds  WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT s.Street, s.City, s.Zip, s.State  FROM schools AS s  INNER JOIN satscores AS sat ON s.CDSCode = sat.cds  WHERE sat.NumTstTakr > 0  ORDER BY sat.NumGE1500 * 1.0 / sat.NumTstTakr ASC  LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T2.Website FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cname = 'Los Angeles' AND T1.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(satscores.NumTstTakr) FROM satscores WHERE cds IN (SELECT schools.CDSCode FROM schools WHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31')\t----- bird -----\tcalifornia_schools",
    "40": "SELECT s.Phone FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.District = 'Fresno Unified' AND ss.AvgScrRead = (SELECT MIN(ss2.AvgScrRead) FROM satscores AS ss2 INNER JOIN schools AS s2 ON ss2.cds = s2.CDSCode WHERE s2.District = 'Fresno Unified')\t----- bird -----\tcalifornia_schools",
    "41": "SELECT DISTINCT S.school  FROM schools AS S  INNER JOIN satscores AS SS ON S.CDSCode = SS.cds  WHERE S.Virtual IN ('F', 'V')  AND (SELECT COUNT(*)       FROM schools AS S2       INNER JOIN satscores AS SS2 ON S2.CDSCode = SS2.cds       WHERE S2.County = S.County AND SS2.AvgScrRead > SS.AvgScrRead) < 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT schools.EdOpsName FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores WHERE AvgScrMath IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "43": "SELECT AvgScrMath, County FROM (SELECT T1.AvgScrMath, T2.County, (T1.AvgScrMath + T1.AvgScrRead + T1.AvgScrWrite) / 3 AS AvgScore FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath IS NOT NULL AND T1.AvgScrRead IS NOT NULL AND T1.AvgScrWrite IS NOT NULL) AS Scores ORDER BY AvgScore ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(T1.AvgScrWrite), T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores WHERE NumGE1500 IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T1.sname, AVG(T1.AvgScrWrite) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich' GROUP BY T1.sname\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T2.sname FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.SOCType = 'State Special Schools' AND T2.enroll12 = (SELECT MAX(T3.enroll12) FROM satscores AS T3 INNER JOIN schools AS T4 ON T3.cds = T4.CDSCode WHERE T4.SOCType = 'State Special Schools')\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(T1.CDSCode) / 12.0 FROM schools AS T1 WHERE T1.County = 'Alameda' AND T1.DOCType = 'Elementary School District' AND STRFTIME('%Y', T1.OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT (SELECT COUNT(*) FROM schools WHERE StatusType = 'Merged' AND DOCType = 'Unified School District' AND County = 'Orange') * 1.0 / (SELECT COUNT(*) FROM schools WHERE StatusType = 'Merged' AND DOCType = 'Elementary School District' AND County = 'Orange')\t----- bird -----\tcalifornia_schools",
    "49": "SELECT T1.School, T1.ClosedDate  FROM schools AS T1  WHERE T1.County = (SELECT T2.County                     FROM schools AS T2                     WHERE T2.StatusType = 'Closed'                     GROUP BY T2.County                     ORDER BY COUNT(T2.StatusType) DESC                     LIMIT 1)  AND T1.StatusType = 'Closed';\t----- bird -----\tcalifornia_schools",
    "50": "SELECT T1.Street, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T1.MailStrAbr, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.MailCity = 'Lakeport' AND T2.NumGE1500 >= 1\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT `School`, `MailZip` FROM `schools` WHERE (`AdmFName1` = 'Avetik' AND `AdmLName1` = 'Atoian') OR (`AdmFName2` = 'Avetik' AND `AdmLName2` = 'Atoian')\t----- bird -----\tcalifornia_schools",
    "55": "SELECT (COUNT(CASE WHEN County = 'Colusa' THEN 1 END) * 1.0) / COUNT(CASE WHEN County = 'Humboldt' THEN 1 END) FROM schools WHERE MailState = 'CA'\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active' AND MailCity = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT S.Phone, S.Ext  FROM (SELECT cds FROM satscores ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332) AS SS  INNER JOIN schools AS S ON SS.cds = S.CDSCode\t----- bird -----\tcalifornia_schools",
    "58": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE ((AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName2 = 'Mike' AND AdmLName2 = 'Larson')) OR ((AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez') OR (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez'))\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = '1' AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND City = 'Hickman' AND DOCType = 'Elementary School District';\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(DISTINCT CDSCode) FROM frpm WHERE `Charter School (Y/N)` = 0 AND `County Name` = 'Los Angeles' AND `Percent (%) Eligible Free (K-12)` < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT T1.AdmFName1, T1.AdmLName1, T1.AdmFName2, T1.AdmLName2, T1.School, T1.City FROM schools AS T1 WHERE T1.CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(CASE WHEN T1.FundingType = 'Locally funded' AND T1.Charter = 1 THEN 1 END) * 100.0 / COUNT(CASE WHEN T1.Charter = 1 THEN 1 END)) AS ratio FROM schools AS T1 WHERE T1.County = 'Santa Clara'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE FundingType = 'Directly funded' AND County = 'Stanislaus' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE StatusType = 'Closed' AND DOCType = 'Community College District' AND STRFTIME('%Y', ClosedDate) = '1989' AND City = 'San Francisco'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(*) FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOCType = 'Youth Authority Facilities' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = '31';\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE SOCType = 'District Community Day Schools' AND County = 'Alpine' AND StatusType IN ('Active', 'Closed')\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT T2.`District Code`  FROM `schools` AS T1  INNER JOIN `frpm` AS T2 ON T1.`CDSCode` = T2.`CDSCode`  WHERE T1.`City` = 'Fresno' AND T1.`Magnet` = 0\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`DOCType` = 'State Special Schools' AND T2.`City` = 'Fremont' AND T1.`Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT F.`FRPM Count (Ages 5-17)` FROM frpm AS F INNER JOIN schools AS S ON F.CDSCode = S.CDSCode WHERE S.`MailStreet` = 'PO Box 1040' AND S.`EdOpsName` = 'Youth Authority School'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT frpm.`Low Grade` FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`EdOpsName` = 'District Special Education Consortia School' AND schools.`NCESDist` = '0613360'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.EILName, T2.\"School Name\" FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"NSLP Provision Status\" = 'Breakfast Provision 2' AND T2.\"County Code\" = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T1.City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.SOC = 'High Schools (Public)' AND T2.\"NSLP Provision Status\" = 'Lunch Provision 2' AND T2.\"Low Grade\" = '9' AND T2.\"High Grade\" = '12' AND T1.County = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT T1.School, T2.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.GSserved = 'K-9' AND T2.`County Name` = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) AS SchoolCount FROM schools WHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY SchoolCount DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T1.School, T1.Latitude, T1.SOCType FROM schools AS T1 WHERE T1.Latitude = (SELECT MAX(T2.Latitude) FROM schools AS T2)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT T1.City, T1.School, T2.`Low Grade` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.State = 'CA' AND T1.Latitude = (SELECT MIN(Latitude) FROM schools WHERE State = 'CA')\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools WHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "WITH MagnetSchools AS ( SELECT COUNT(*) AS MagnetCount FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE S.Magnet = 1 AND S.GSserved = 'K-8' AND F.`NSLP Provision Status` = 'Multiple Provision Types' ), CityCounts AS ( SELECT City, COUNT(*) AS SchoolCount FROM schools WHERE GSserved = 'K-8' GROUP BY City ) SELECT MagnetCount, City, SchoolCount FROM MagnetSchools, CityCounts;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT first_name, district, COUNT(*) FROM (SELECT AdmFName1 AS first_name, District FROM schools WHERE AdmFName1 IS NOT NULL UNION ALL SELECT AdmFName2 AS first_name, District FROM schools WHERE AdmFName2 IS NOT NULL) AS combined_names GROUP BY first_name, district ORDER BY COUNT(*) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, frpm.`District Code` FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.`AdmFName1` = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "86": "SELECT AdmLName1, District, County, School FROM schools WHERE CharterNum = '0040'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1, AdmEmail2 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND SOCType IN ('Intermediate/Middle Schools (Public)', 'Unified School District') AND (AdmEmail1 IS NOT NULL OR AdmEmail2 IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T2.AdmEmail1, T2.School FROM schools AS T2 INNER JOIN satscores AS T1 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores WHERE NumGE1500 IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "WITH averages AS (     SELECT AVG(A12) AS avg_1995, AVG(A13) AS avg_1996 FROM district ) SELECT CASE WHEN avg_1995 > avg_1996 THEN '1995 is higher' ELSE '1996 is higher' END AS comparison FROM averages;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district_id) FROM district WHERE A11 > 6000 AND A11 < 10000\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT A.account_id, (SELECT MAX(A11) FROM district) - (SELECT MIN(A11) FROM district) AS salary_gap  FROM client AS C  INNER JOIN disp AS D ON C.client_id = D.client_id  INNER JOIN account AS A ON D.account_id = A.account_id  INNER JOIN district AS district ON C.district_id = district.district_id  WHERE C.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\t----- bird -----\tfinancial",
    "95": "SELECT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.birth_date = (SELECT MAX(birth_date) FROM client) AND T1.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district))\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT T3.client_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT client.client_id  FROM client  INNER JOIN disp ON client.client_id = disp.client_id  INNER JOIN account ON disp.account_id = account.account_id  WHERE disp.type = 'DISPONENT' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT A.account_id FROM account AS A INNER JOIN loan AS L ON A.account_id = L.account_id WHERE strftime('%Y', L.date) = '1997' AND A.frequency = 'POPLATEK TYDNE' GROUP BY A.account_id HAVING MIN(L.amount) = (SELECT MIN(L2.amount) FROM loan AS L2 INNER JOIN account AS A2 ON L2.account_id = A2.account_id WHERE strftime('%Y', L2.date) = '1997' AND A2.frequency = 'POPLATEK TYDNE')\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND STRFTIME('%Y', T2.date) = '1993' AND T1.amount = (SELECT MAX(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND STRFTIME('%Y', T2.date) = '1993')\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id WHERE C.gender = 'F' AND C.birth_date < '1950-01-01' AND C.district_id IN (SELECT district_id FROM district WHERE A2 = 'Sokolov')\t----- bird -----\tfinancial",
    "101": "SELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1995-03-24'\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT A.account_id FROM account AS A INNER JOIN trans AS T ON A.account_id = T.account_id WHERE A.date < '1997-01-01' AND T.balance > 3000\t----- bird -----\tfinancial",
    "103": "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT account.date FROM trans INNER JOIN account ON trans.account_id = account.account_id WHERE trans.amount = 840 AND trans.date = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT account.district_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T3.amount) FROM trans AS T3 INNER JOIN disp AS T2 ON T3.account_id = T2.account_id INNER JOIN card AS C ON T2.client_id = C.disp_id WHERE C.issued = '1996-10-21'\t----- bird -----\tfinancial",
    "107": "SELECT T1.gender  FROM client AS T1  INNER JOIN disp AS T2 ON T1.client_id = T2.client_id  INNER JOIN account AS T3 ON T2.account_id = T3.account_id  INNER JOIN district AS T4 ON T3.district_id = T4.district_id  WHERE T2.type = 'OWNER'  AND T4.district_id = (SELECT district_id FROM district ORDER BY A11 DESC LIMIT 1)  AND T1.birth_date = (SELECT MIN(birth_date) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T2.type = 'OWNER' AND T4.district_id = (SELECT district_id FROM district ORDER BY A11 DESC LIMIT 1))\t----- bird -----\tfinancial",
    "108": "SELECT MIN(T1.amount)  FROM trans AS T1  INNER JOIN account AS T2 ON T1.account_id = T2.account_id  INNER JOIN disp AS T3 ON T2.account_id = T3.account_id  INNER JOIN loan AS T4 ON T3.account_id = T4.account_id  WHERE T4.amount = (SELECT MAX(amount) FROM loan)  AND T1.date >= T2.date  AND T3.type = 'OWNER'\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN account AS A ON C.district_id = A.district_id INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN district AS D2 ON C.district_id = D2.district_id WHERE C.gender = 'F' AND D2.A2 = 'Jesenik' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "110": "SELECT T2.disp_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND T1.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice' AND STRFTIME('%Y', T1.date) = '1996'\t----- bird -----\tfinancial",
    "112": "SELECT D2.A2 FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN district AS D2 ON A.district_id = D2.district_id WHERE C.gender = 'F' AND C.birth_date = '1976-01-29' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "113": "SELECT T1.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.amount = 98832 AND T3.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Hl.m. Praha' ORDER BY T1.date ASC LIMIT 1\t----- bird -----\tfinancial",
    "115": "WITH max_inhabitants_district AS (SELECT district_id FROM district WHERE A3 = 'south Bohemia' AND A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')) SELECT (COUNT(client_id) * 100.0 / (SELECT COUNT(client_id) FROM client WHERE district_id = (SELECT district_id FROM max_inhabitants_district))) AS percentage FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM max_inhabitants_district);\t----- bird -----\tfinancial",
    "116": "SELECT (latest_balance_1998 - latest_balance_1993) / latest_balance_1993 AS increase_rate FROM (     SELECT          (SELECT T2.balance           FROM trans AS T2           WHERE T2.account_id = T1.account_id AND T2.date <= '1998-12-27'           ORDER BY T2.date DESC           LIMIT 1) AS latest_balance_1998,         (SELECT T2.balance           FROM trans AS T2           WHERE T2.account_id = T1.account_id AND T2.date <= '1993-03-22'           ORDER BY T2.date DESC           LIMIT 1) AS latest_balance_1993     FROM disp AS T1      INNER JOIN loan AS T3 ON T1.account_id = T3.account_id      WHERE T3.date = '1993-07-05' AND T1.type = 'OWNER' ) AS balances\t----- bird -----\tfinancial",
    "117": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / NULLIF(SUM(amount), 0)) AS percentage FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT (COUNT(DISTINCT CASE WHEN T1.status = 'C' THEN T1.account_id END) / COUNT(DISTINCT T1.account_id)) * 100 AS percentage FROM loan AS T1 WHERE T1.amount < 100000\t----- bird -----\tfinancial",
    "119": "SELECT account.account_id, district.A2, district.A3 FROM account INNER JOIN district ON account.district_id = district.district_id WHERE account.date LIKE '1993%' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.date BETWEEN '1995-01-01' AND '2000-12-31' AND T3.A3 = 'east Bohemia' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "121": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT T2.A2 AS district, T2.A3 AS region FROM loan AS T1 INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T2 ON T3.district_id = T2.district_id WHERE T1.loan_id = 4990\t----- bird -----\tfinancial",
    "123": "SELECT T2.account_id, T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT L.loan_id, D.A2 AS district, D.A11 AS average_salary  FROM loan AS L  INNER JOIN account AS A ON L.account_id = A.account_id  INNER JOIN district AS D ON A.district_id = D.district_id  WHERE L.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT T3.A2, ((T3.A13 - T3.A12) / T3.A12 * 100) AS unemployment_increment FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T4 ON T2.client_id = T4.client_id INNER JOIN district AS T3 ON T4.district_id = T3.district_id WHERE T1.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT (COUNT(T1.account_id) * 100.0 / NULLIF(SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1993' THEN 1 ELSE 0 END), 0)) AS percentage  FROM account AS T1  INNER JOIN district AS T2 ON T1.district_id = T2.district_id  WHERE T2.A2 = 'Decin' AND STRFTIME('%Y', T1.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT T4.A2, COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T2.type = 'OWNER' GROUP BY T4.A2 ORDER BY COUNT(T1.client_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "129": "SELECT district.A2, SUM(trans.amount)  FROM trans  INNER JOIN account ON trans.account_id = account.account_id  INNER JOIN district ON account.district_id = district.district_id  WHERE trans.operation = 'VYBER'  AND trans.date BETWEEN '1996-01-01' AND '1996-01-31'  GROUP BY district.A2  ORDER BY SUM(trans.amount) DESC  LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT D.client_id) FROM disp AS D INNER JOIN client AS C ON D.client_id = C.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN district AS D2 ON C.district_id = D2.district_id LEFT JOIN card AS CAR ON D.disp_id = CAR.disp_id WHERE D2.A3 = 'south Bohemia' AND D.type = 'OWNER' AND CAR.disp_id IS NULL\t----- bird -----\tfinancial",
    "131": "SELECT T3.A2 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status IN ('C', 'D') GROUP BY T3.A2 ORDER BY COUNT(T1.loan_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'M' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "133": "SELECT district_id, A2 FROM district WHERE A13 = (SELECT MAX(A13) FROM district)\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account.account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A16 = (SELECT MAX(A16) FROM district))\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.operation = 'VYBER KARTOU' AND T1.frequency = 'POPLATEK MESICNE' AND T2.balance < 0\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.amount >= 250000 AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT T2.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.district_id = 1\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(client.client_id) FROM client WHERE district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1) AND gender = 'M'\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT T2.A2 FROM trans AS T1 INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T2 ON T3.district_id = T2.district_id WHERE T1.amount > 10000 AND STRFTIME('%Y', T1.date) = '1997'\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN `order` AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT T3.account_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.type = 'gold'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(T1.amount) FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND T2.type = 'OWNER' AND STRFTIME('%Y', T1.date) = '2021' GROUP BY STRFTIME('%m', T1.date)\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT disp.client_id FROM disp INNER JOIN trans ON disp.account_id = trans.account_id WHERE trans.operation = 'VYBER KARTOU' AND trans.amount < (SELECT AVG(trans.amount) FROM trans WHERE trans.operation = 'VYBER KARTOU' AND STRFTIME('%Y', trans.date) = '1998') AND STRFTIME('%Y', trans.date) = '1998' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT C.client_id FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CR ON D.disp_id = CR.disp_id INNER JOIN loan AS L ON D.account_id = L.account_id WHERE C.gender = 'F' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT T3.account_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T1.gender = 'F' AND T4.A3 = 'south Bohemia' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Tabor' AND T1.account_id IN (SELECT T3.account_id FROM loan AS T3)\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT T1.frequency FROM account AS T1 LEFT JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.account_id IS NULL AND T3.A11 > 8000 AND T3.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'north Bohemia' AND T3.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT D.A2 FROM district AS D INNER JOIN account AS A ON D.district_id = A.district_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE T.type = 'VYDAJ'\t----- bird -----\tfinancial",
    "152": "SELECT AVG(T1.A15) FROM district AS T1 WHERE T1.A15 > 4000 AND T1.district_id IN (SELECT T2.district_id FROM account AS T2 WHERE T2.date >= '1997-01-01' GROUP BY T2.district_id)\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT (COUNT(T1.card_id) * 100.0 / (SELECT COUNT(card_id) FROM card AS T2 WHERE T2.issued < '1998-01-01')) AS percent FROM card AS T1 WHERE T1.issued < '1998-01-01' AND T1.type = 'gold'\t----- bird -----\tfinancial",
    "156": "SELECT T1.client_id FROM disp AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'OWNER' AND T2.amount = (SELECT MAX(amount) FROM loan)\t----- bird -----\tfinancial",
    "157": "SELECT A15 FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532)\t----- bird -----\tfinancial",
    "158": "SELECT T1.district_id FROM account AS T1 INNER JOIN \"order\" AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333\t----- bird -----\tfinancial",
    "159": "SELECT T1.date, T1.amount, T1.balance  FROM trans AS T1  INNER JOIN disp AS T2 ON T1.account_id = T2.account_id  INNER JOIN client AS T3 ON T2.client_id = T3.client_id  WHERE T1.operation = 'VYBER' AND T3.client_id = 3356\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account AS A INNER JOIN loan AS L ON A.account_id = L.account_id WHERE A.frequency = 'POPLATEK TYDNE' AND L.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT T3.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 13539 AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "162": "SELECT T2.A3 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT district.A2 FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.A2 ORDER BY COUNT(DISTINCT account.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT C.client_id FROM `order` AS O INNER JOIN disp AS D ON O.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id WHERE O.order_id = 32423\t----- bird -----\tfinancial",
    "165": "SELECT * FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(A1.account_id) FROM account AS A1 INNER JOIN district AS D1 ON A1.district_id = D1.district_id WHERE D1.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'junior' AND T3.issued > '1996-12-31'\t----- bird -----\tfinancial",
    "168": "SELECT (COUNT(T1.client_id) * 100.0 / NULLIF(COUNT(T1.client_id), 0)) AS percentage  FROM client AS T1  INNER JOIN disp AS T3 ON T1.client_id = T3.client_id  INNER JOIN account AS T4 ON T3.account_id = T4.account_id  INNER JOIN district AS T2 ON T4.district_id = T2.district_id  WHERE T2.A11 > 10000 AND T3.type = 'OWNER' AND T1.gender = 'F'\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(CASE WHEN strftime('%Y', loan.date) = '1997' THEN loan.amount END) -               SUM(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount END)) /               SUM(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount END)) * 100  FROM loan  INNER JOIN disp ON loan.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE client.gender = 'M' AND strftime('%Y', loan.date) IN ('1996', '1997')\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT ABS(SUM(CASE WHEN A3 = 'east Bohemia' THEN A16 END) - SUM(CASE WHEN A3 = 'north Bohemia' THEN A16 END)) FROM district\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE type IN ('OWNER', 'DISPONENT') AND account_id BETWEEN 1 AND 10\t----- bird -----\tfinancial",
    "173": "SELECT (SELECT COUNT(*) FROM trans WHERE account_id = 3 AND k_symbol = 'SLUZBY') AS request_count, (SELECT k_symbol FROM \"order\" WHERE amount = 3539.0) AS aim_debit;\t----- bird -----\tfinancial",
    "174": "SELECT strftime('%Y', T1.birth_date) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 130 AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT A.account_id) FROM account AS A INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE D.type = 'OWNER' AND T.k_symbol = 'SLUZBY'\t----- bird -----\tfinancial",
    "176": "SELECT L.amount, L.status FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN loan AS L ON A.account_id = L.account_id WHERE C.client_id = 992\t----- bird -----\tfinancial",
    "177": "SELECT SUM(T1.balance), T2.gender FROM trans AS T1 INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T2 ON T3.client_id = T2.client_id WHERE T1.trans_id = 851 AND T3.type = 'OWNER' AND T3.client_id = 4\t----- bird -----\tfinancial",
    "178": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(T1.amount) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.client_id = 617 AND T1.type = 'VYDAJ' AND STRFTIME('%Y', T1.date) = '1998'\t----- bird -----\tfinancial",
    "180": "SELECT DISTINCT T1.client_id  FROM client AS T1  INNER JOIN account AS T2 ON T1.district_id = T2.district_id  INNER JOIN district AS T3 ON T2.district_id = T3.district_id  WHERE STRFTIME('%Y', T1.birth_date) BETWEEN '1983' AND '1987'  AND T3.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "181": "SELECT C.client_id FROM client AS C INNER JOIN loan AS L ON C.client_id = L.account_id WHERE C.gender = 'F' ORDER BY L.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE C.gender = 'M' AND C.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T.k_symbol = 'SIPO' AND T.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Beroun' AND T1.date > '1996-12-31'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CA ON D.disp_id = CA.disp_id WHERE C.gender = 'F' AND CA.type = 'junior';\t----- bird -----\tfinancial",
    "185": "SELECT SUM(CASE WHEN C.gender = 'F' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)  FROM disp AS D  INNER JOIN account AS A ON D.account_id = A.account_id  INNER JOIN district AS DIST ON A.district_id = DIST.district_id  INNER JOIN client AS C ON D.client_id = C.client_id  WHERE DIST.A2 = 'Hl.m. Praha' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "186": "SELECT (COUNT(DISTINCT CASE WHEN T2.frequency = 'POPLATEK TYDNE' THEN T1.client_id END) * 100.0 / COUNT(DISTINCT T1.client_id)) FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'M'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "188": "SELECT T2.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND T2.date < '1997-01-01' AND T1.amount = (SELECT MIN(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND T2.date < '1997-01-01')\t----- bird -----\tfinancial",
    "189": "SELECT DISTINCT account.account_id FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND district.district_id = (SELECT district_id FROM district ORDER BY A11 ASC LIMIT 1)\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.birth_date) = '1920' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id WHERE L.duration = 24 AND A.frequency = 'POPLATEK TYDNE' AND L.status NOT IN ('A', 'B')\t----- bird -----\tfinancial",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T3.A2  FROM disp AS T1  INNER JOIN client AS T2 ON T1.client_id = T2.client_id  INNER JOIN district AS T3 ON T2.district_id = T3.district_id  WHERE T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "194": "SELECT C.client_id, strftime('%Y', 'now') - strftime('%Y', C.birth_date) AS age FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CD ON D.disp_id = CD.disp_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN loan AS L ON A.account_id = L.account_id WHERE CD.type = 'gold' AND L.status = 'A'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(oxygen_count) FROM (SELECT T1.molecule_id, COALESCE(T2.count, 0) AS oxygen_count FROM (SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '-') AS T1 LEFT JOIN (SELECT molecule_id, COUNT(*) AS count FROM atom WHERE element = 'o' GROUP BY molecule_id) AS T2 ON T1.molecule_id = T2.molecule_id)\t----- bird -----\ttoxicology",
    "198": "SELECT (COUNT(T1.bond_id) * 1.0) / NULLIF(COUNT(DISTINCT T2.molecule_id), 0) AS average_single_bonded_carcinogenic_molecules  FROM bond AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.bond_type = '-' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT T2.molecule_id) FROM molecule AS T2 INNER JOIN atom AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT (COUNT(CASE WHEN T1.element = 'c' THEN 1 END) * 100.0 / NULLIF(COUNT(T1.element), 0)) AS percentage FROM atom AS T1 WHERE T1.molecule_id IN (SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '=')\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(atom_id) FROM atom WHERE element != 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM (SELECT * FROM molecule WHERE label = '+' ORDER BY molecule_id ASC LIMIT 100) AS T\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'c'\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T2.bond_id = 'TR004_8_9' WHERE T1.atom_id IN ('TR004_8', 'TR004_9')\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT T3.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id OR T1.atom_id2 = T3.atom_id WHERE T2.bond_type = '='\t----- bird -----\ttoxicology",
    "208": "SELECT T1.label  FROM molecule AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T2.element = 'h'  GROUP BY T1.label  HAVING COUNT(T1.label) = (SELECT MAX(label_count) FROM (SELECT COUNT(T1.label) AS label_count FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'h' GROUP BY T1.label))\t----- bird -----\ttoxicology",
    "209": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'cl'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT DISTINCT C.atom_id, C.atom_id2 FROM connected AS C INNER JOIN atom AS A1 ON C.atom_id = A1.atom_id INNER JOIN atom AS A2 ON C.atom_id2 = A2.atom_id INNER JOIN molecule AS M ON A1.molecule_id = M.molecule_id WHERE M.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT M.label FROM molecule AS M LEFT JOIN atom AS A ON M.molecule_id = A.molecule_id AND A.element = 'sn' WHERE A.molecule_id IS NULL\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element IN ('i', 's') AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT C.atom_id, C.atom_id2 FROM bond AS B INNER JOIN connected AS C ON B.bond_id = C.bond_id WHERE B.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT (COUNT(DISTINCT CASE WHEN a.atom_id IS NULL THEN m.molecule_id END) * 100.0) / COUNT(DISTINCT m.molecule_id) AS percentage  FROM molecule m  LEFT JOIN atom a ON m.molecule_id = a.molecule_id AND a.element = 'f'  WHERE m.label = '+'\t----- bird -----\ttoxicology",
    "219": "SELECT (COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T1.molecule_id END) / COUNT(DISTINCT T1.molecule_id)) * 100 AS percentage FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "220": "SELECT atom.element FROM atom WHERE molecule_id = 'TR000' GROUP BY atom.element ORDER BY COUNT(*) DESC, atom.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 WHERE T1.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT COUNT(CASE WHEN label = '+' THEN molecule_id END) - COUNT(CASE WHEN label = '-' THEN molecule_id END) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT molecule.molecule_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' GROUP BY bond.molecule_id ORDER BY molecule.molecule_id ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT ROUND((COUNT(CASE WHEN bond.bond_type = '=' THEN 1 END) * 100.0) / COUNT(*), 5) AS percentage FROM bond WHERE bond.molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND((SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0) / COUNT(molecule_id), 3) AS percentage FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND((COUNT(CASE WHEN element = 'h' THEN 1 END) * 100.0 / COUNT(*)), 4) AS percentage FROM atom WHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT bond_type FROM bond WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT b.bond_type, m.label FROM bond AS b INNER JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE b.molecule_id = 'TR010' GROUP BY b.bond_type ORDER BY COUNT(b.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT T2.molecule_id FROM molecule AS T2 INNER JOIN bond AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-' GROUP BY T2.molecule_id ORDER BY COUNT(T1.bond_id) DESC, T2.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id ASC LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND (T2.atom_id = 'TR009_12' OR T2.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2 FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id LIKE '%_19' OR atom_id2 LIKE '%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND SUBSTR(T2.atom_id, INSTR(T2.atom_id, '_') + 1) BETWEEN '21' AND '25'\t----- bird -----\ttoxicology",
    "243": "SELECT DISTINCT T3.bond_id  FROM connected AS T1  INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id  INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id  WHERE T2.element IN ('p', 'n')  GROUP BY T3.bond_id  HAVING COUNT(DISTINCT T2.element) = 2\t----- bird -----\ttoxicology",
    "244": "SELECT CASE WHEN T2.label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic  FROM (     SELECT T1.molecule_id, COUNT(T1.bond_id) AS double_bond_count      FROM bond AS T1      WHERE T1.bond_type = '='      GROUP BY T1.molecule_id      ORDER BY double_bond_count DESC      LIMIT 1 ) AS T3  INNER JOIN molecule AS T2 ON T3.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count) FROM (SELECT COUNT(T2.bond_id) AS bond_count FROM atom AS T1 LEFT JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T1.element = 'i' GROUP BY T1.atom_id)\t----- bird -----\ttoxicology",
    "246": "SELECT T1.bond_type, T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = '45' OR T2.atom_id2 = '45'\t----- bird -----\ttoxicology",
    "247": "SELECT DISTINCT T1.element  FROM atom AS T1  WHERE T1.atom_id NOT IN (     SELECT T2.atom_id FROM connected AS T2      UNION      SELECT T3.atom_id2 FROM connected AS T3 )\t----- bird -----\ttoxicology",
    "248": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#' AND T2.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "249": "SELECT DISTINCT T3.element FROM connected AS T2 INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T2.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT element, COUNT(element) AS element_count FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY element ORDER BY element_count ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT DISTINCT T2.atom_id  FROM connected AS T1  INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id  WHERE T1.atom_id IN (SELECT atom_id FROM atom WHERE element = 'pb')  OR T1.atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'pb')\t----- bird -----\ttoxicology",
    "253": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "WITH ElementCounts AS (     SELECT (CASE WHEN T3.element < T4.element THEN T3.element || '-' || T4.element ELSE T4.element || '-' || T3.element END) AS element_pair, COUNT(T1.bond_id) AS bond_count     FROM bond AS T1     INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id     INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id     INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id     GROUP BY element_pair ) SELECT (MAX(bond_count) * 100.0 / (SELECT COUNT(*) FROM bond)) AS percentage FROM ElementCounts;\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND((COUNT(CASE WHEN B.bond_type = '-' AND M.label = '+' THEN 1 END) * 100.0 / NULLIF(COUNT(CASE WHEN B.bond_type = '-' THEN 1 END), 0)), 5) AS proportion FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id;\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(atom_id) FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T3.element) FROM atom AS T3 INNER JOIN bond AS T2 ON T3.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.element IN ('p', 'br') AND T1.molecule_id IN (SELECT T2.molecule_id FROM bond AS T2 WHERE T2.bond_type = '#')\t----- bird -----\ttoxicology",
    "261": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT DISTINCT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (SUM(T3.element = 'cl') * 100.0 / COUNT(T3.atom_id)) AS chlorine_percentage FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+';\t----- bird -----\ttoxicology",
    "267": "SELECT bond.bond_type FROM bond WHERE bond.molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT T2.element AS element1, T3.element AS element2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T2.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT molecule.label, COUNT(molecule.molecule_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'ca' GROUP BY molecule.label\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(DISTINCT T3.element) = 2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_id = 'TR001_1_8' AND (T3.element = 'cl' OR T3.element = 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT T3.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T1.bond_type = '#' AND T4.label = '-' AND T3.element = 'c' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT (COUNT(CASE WHEN T1.element = 'cl' THEN 1 END) * 100.0 / COUNT(T1.element)) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT DISTINCT T1.molecule_id FROM bond AS T1 WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT DISTINCT T1.element  FROM atom AS T1  INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2  WHERE T2.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT COUNT(T1.element) FROM (SELECT T1.*, ROW_NUMBER() OVER (PARTITION BY molecule_id ORDER BY atom_id) AS row_number FROM atom AS T1) AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.row_number = 4 AND T2.label = '+'\t----- bird -----\ttoxicology",
    "282": "SELECT (COUNT(CASE WHEN a.element = 'h' THEN 1 END) * 1.0 / COUNT(a.atom_id)) AS ratio, m.label  FROM atom a  JOIN molecule m ON a.molecule_id = m.molecule_id  WHERE m.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "283": "SELECT DISTINCT CASE WHEN M.label = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS carcinogenic_status  FROM atom AS A  INNER JOIN molecule AS M ON A.molecule_id = M.molecule_id  WHERE A.element = 'ca'\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT T2.bond_type  FROM bond AS T2  INNER JOIN atom AS T1 ON T2.molecule_id = T1.molecule_id  WHERE T1.element = 'c'\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / COUNT(DISTINCT T2.molecule_id)) AS percentage FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "287": "SELECT (SUM(bond.bond_type = '=') * 100.0) / COUNT(*) FROM bond WHERE bond.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT T1.atom_id FROM atom AS T1 WHERE T1.molecule_id BETWEEN 'TR010' AND 'TR050' AND T1.element = 'c'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = 'TR000_1_2' WHERE T2.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / NULLIF(COUNT(DISTINCT T2.molecule_id), 0)) AS percentage  FROM atom AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T2.label = '+' AND T1.element = 'h'\t----- bird -----\ttoxicology",
    "299": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id, element FROM atom WHERE molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19'\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT `a`.`element`  FROM `atom` AS `a`  INNER JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2`  WHERE `c`.`bond_id` = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(T1.bond_id), T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' AND T1.bond_type = '='\t----- bird -----\ttoxicology",
    "304": "SELECT DISTINCT T1.molecule_id, T2.element  FROM molecule AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T1.molecule_id, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "307": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3' UNION SELECT T3.element FROM connected AS T1 INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T2.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT T1.atom_id, COUNT(DISTINCT T2.bond_type) FROM atom AS T1 LEFT JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346' GROUP BY T1.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(molecule.molecule_id) FROM molecule WHERE molecule.molecule_id NOT IN (SELECT atom.molecule_id FROM atom WHERE atom.element = 's') AND molecule.molecule_id NOT IN (SELECT bond.molecule_id FROM bond WHERE bond.bond_type = '=')\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 WHERE T1.label = '+')) AS percentage FROM molecule AS T1 WHERE EXISTS (SELECT 1 FROM atom AS T2 WHERE T2.molecule_id = T1.molecule_id AND T2.element = 'cl') AND T1.label = '+'\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT T2.element) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_3_4'\t----- bird -----\ttoxicology",
    "320": "SELECT bond.bond_type FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE (connected.atom_id = 'TR000_1' AND connected.atom_id2 = 'TR000_2') OR (connected.atom_id = 'TR000_2' AND connected.atom_id2 = 'TR000_1')\t----- bird -----\ttoxicology",
    "321": "SELECT `molecule_id` FROM `atom` WHERE `atom_id` IN ('TR000_2', 'TR000_4') GROUP BY `molecule_id` HAVING COUNT(DISTINCT `atom_id`) = 2\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT (COUNT(DISTINCT T1.atom_id) + COUNT(DISTINCT T1.atom_id2)) * 100.0 / (SELECT COUNT(atom_id) FROM atom) AS percentage FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 WHERE T1.label = '+' AND EXISTS (SELECT 1 FROM atom AS T2 WHERE T2.molecule_id = T1.molecule_id AND T2.element = 'n')\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT T4.molecule_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id INNER JOIN molecule AS T4 ON T2.molecule_id = T4.molecule_id WHERE T3.element = 's' AND T2.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT T2.element  FROM bond AS T1  INNER JOIN connected AS T3 ON T1.bond_id = T3.bond_id  INNER JOIN atom AS T2 ON T3.atom_id = T2.atom_id  WHERE T1.bond_type = '=' AND T1.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "WITH AtomCounts AS (SELECT T1.molecule_id, COUNT(T2.atom_id) AS atom_count FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id) SELECT molecule_id FROM AtomCounts WHERE atom_count = (SELECT MAX(atom_count) FROM AtomCounts);\t----- bird -----\ttoxicology",
    "330": "SELECT (COUNT(DISTINCT M.molecule_id) * 100.0 / NULLIF((SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+'), 0)) AS percentage FROM molecule AS M INNER JOIN bond AS B ON M.molecule_id = B.molecule_id INNER JOIN connected AS C ON B.bond_id = C.bond_id INNER JOIN atom AS A ON C.atom_id = A.atom_id OR C.atom_id2 = A.atom_id WHERE M.label = '+' AND B.bond_type = '#' AND A.element = 'h'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR004' AND 'TR010' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE element = 'c' AND molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT T1.molecule_id)  FROM bond AS T1  INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id  INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id  INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id  WHERE T1.bond_type = '=' AND (T3.element = 'o' OR T4.element = 'o')\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT DISTINCT T1.element, T2.bond_type  FROM atom AS T1  INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.molecule_id = 'TR002' AND T2.molecule_id = 'TR002'\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=' AND T1.element = 'c' AND T1.molecule_id = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT uuid, name FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor = 'borderless' AND hasNonFoil = 1 AND cardKingdomFoilId IS NULL\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost > 0;\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type LIKE '%Artifact%' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE (T1.power IS NULL OR T1.power = '*')  AND T2.format = 'commander'  AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T1.artist, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "348": "SELECT T1.date, T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Sublime Epiphany' AND T2.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T1.uuid ORDER BY COUNT(T2.id) DESC LIMIT 1\t----- bird -----\tcard_games",
    "350": "SELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Annul' AND T2.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT (COUNT(DISTINCT `foreign_data`.`uuid`) * 1.0 / (SELECT COUNT(DISTINCT `uuid`) FROM `cards`) * 100) AS percentage FROM `foreign_data` WHERE `foreign_data`.`language` = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "353": "SELECT T2.name, T2.totalSetSize FROM sets AS T2 INNER JOIN set_translations AS T1 ON T1.setCode = T2.code WHERE T1.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT types) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '\u221e';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT T3.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT text FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(id) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage FROM cards WHERE borderColor = 'borderless';\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(DISTINCT F.uuid) * 100.0 / COUNT(DISTINCT C.uuid)) AS percentage  FROM cards AS C  LEFT JOIN foreign_data AS F ON C.uuid = F.uuid  WHERE C.isStorySpotlight = 1 AND F.language = 'French'\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT T1.id FROM cards AS T1 WHERE T1.convertedManaCost = 0.0;\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%Flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE hasFoil = 1 AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' AND T2.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T3.language FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN foreign_data AS T3 ON T2.uuid = T3.uuid WHERE T1.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(T1.uuid), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' GROUP BY T2.status\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT T1.name, T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5.0\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT DISTINCT T1.colors, T2.format  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE T1.id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.types LIKE '%Artifact%' AND T1.colors = 'B' AND T2.name IS NOT NULL\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' GROUP BY T1.name ORDER BY MIN(T2.date) ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 1 AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL);\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power IS NOT NULL AND power != '*';\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability LIKE '%mtgo%' AND hand = '-1';\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability LIKE '%paper%' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(CAST(REPLACE(REPLACE(manaCost, '(', ''), ')', '') AS REAL)) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability LIKE '%arena%'\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT T1.setCode FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT (COUNT(CASE WHEN frameEffects LIKE '%legendary%' AND isOnlineOnly = 1 THEN 1 END) * 100.0 / NULLIF(COUNT(CASE WHEN frameEffects LIKE '%legendary%' THEN 1 END), 0)) AS percentage FROM cards\t----- bird -----\tcard_games",
    "402": "SELECT      (COUNT(CASE WHEN isStorySpotlight = 1 AND isTextless = 1 THEN 1 END) * 100.0 / COUNT(CASE WHEN isStorySpotlight = 1 THEN 1 END)) AS percentage,     GROUP_CONCAT(id) AS ids FROM cards WHERE isStorySpotlight = 1\t----- bird -----\tcard_games",
    "403": "SELECT (COUNT(DISTINCT FD.uuid) * 100.0 / (SELECT COUNT(DISTINCT C.uuid) FROM cards AS C)) AS percentage, FD.name  FROM foreign_data AS FD  WHERE FD.language = 'Spanish'  GROUP BY FD.name;\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT T2.language FROM set_translations AS T2 INNER JOIN sets AS T1 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Portuguese (Brazil)' AND T2.block = 'Commander'\t----- bird -----\tcard_games",
    "406": "SELECT DISTINCT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types LIKE '%Creature%' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT type FROM foreign_data WHERE language = 'German';\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS C INNER JOIN legalities AS L ON C.uuid = L.uuid INNER JOIN rulings AS R ON C.uuid = R.uuid WHERE L.format = 'premodern' AND R.text = 'This is a triggered mana ability.' AND C.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T2.status = 'Legal' AND T1.availability LIKE '%paper%'\t----- bird -----\tcard_games",
    "411": "SELECT T2.artist FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE LOWER(T1.flavorText) = LOWER('Das perfekte Gegenmittel zu einer dichten Formation')\t----- bird -----\tcard_games",
    "412": "SELECT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'French' AND T2.type LIKE 'Creature%' AND T2.layout = 'normal' AND T2.borderColor = 'black' AND T2.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T2.date = '2007-02-01'\t----- bird -----\tcard_games",
    "414": "SELECT T3.language FROM set_translations AS T3 INNER JOIN sets AS T2 ON T3.setCode = T2.code WHERE T2.totalSetSize = 180 AND T2.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(CASE WHEN T1.hasContentWarning = 0 THEN T1.uuid END) * 100.0 / COUNT(T1.uuid)) AS percentage  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "416": "SELECT (COUNT(CASE WHEN fd.language = 'French' THEN fd.uuid END) * 1.0 / COUNT(CASE WHEN c.power IS NULL OR c.power = '*' THEN c.uuid END)) * 100 AS percentage FROM cards AS c LEFT JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.power IS NULL OR c.power = '*'\t----- bird -----\tcard_games",
    "417": "SELECT (COUNT(CASE WHEN T1.type = 'expansion' THEN 1 END) * 100.0 / COUNT(T2.setCode)) AS percentage  FROM sets AS T1  INNER JOIN set_translations AS T2 ON T1.code = T2.setCode  WHERE T2.language = 'Japanese';\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE colors IS NOT NULL AND borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE power IS NULL OR power = '*' AND promoTypes = 'arenaleague' ORDER BY name LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT T1.id FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL ORDER BY CAST(T1.power AS INTEGER) DESC, T1.cardKingdomFoilId ASC LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN layout = 'normal' THEN 1 ELSE 0 END) FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'\t----- bird -----\tcard_games",
    "426": "SELECT `name` FROM (SELECT `name` FROM `sets` WHERE `mtgoCode` IS NULL ORDER BY `totalSetSize` DESC LIMIT 3) AS T ORDER BY `name` ASC\t----- bird -----\tcard_games",
    "427": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Archenemy' AND T2.code = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T1.type, T2.language FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT T1.code, T2.id FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode INNER JOIN foreign_data AS T3 ON T2.uuid = T3.uuid WHERE T3.language = 'Italian' AND T1.block = 'Shadowmoor' ORDER BY T1.code ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT DISTINCT S.code  FROM sets AS S  INNER JOIN cards AS C ON S.code = C.setCode  INNER JOIN foreign_data AS F ON C.uuid = F.uuid  WHERE S.isForeignOnly = 0 AND C.hasFoil = 1 AND F.language = 'Japanese'\t----- bird -----\tcard_games",
    "432": "SELECT T2.name FROM sets AS T2 INNER JOIN set_translations AS T1 ON T1.setCode = T2.code WHERE T1.language = 'Russian' ORDER BY T2.totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT (COUNT(T1.id) * 100.0 / NULLIF((SELECT COUNT(*) FROM set_translations WHERE language = 'Chinese Simplified'), 0)) AS percentage FROM cards AS T1 WHERE T1.isOnlineOnly = 1 AND T1.uuid IN (SELECT uuid FROM set_translations WHERE language = 'Chinese Simplified')\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.mtgoCode IS NULL\t----- bird -----\tcard_games",
    "435": "SELECT `T1`.`id` FROM `cards` AS `T1` WHERE `T1`.`borderColor` = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects LIKE '%extendedart%'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT T2.language FROM set_translations AS T2 INNER JOIN sets AS T1 ON T2.setCode = T1.code WHERE T1.id = 174\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')\t----- bird -----\tcard_games",
    "443": "SELECT T1.code FROM sets AS T1 WHERE T1.type = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, foreign_data.type FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT T1.language, T1.flavorText, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(CASE WHEN cards.convertedManaCost = 10.0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Abyssal Horror'\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'commander';\t----- bird -----\tcard_games",
    "448": "SELECT fd.name, c.type  FROM cards AS c  INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid  WHERE c.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T1.type, T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT manaCost FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power IS NULL OR power = '*');\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT types FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "460": "SELECT T1.artist FROM cards AS T1 WHERE T1.flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT T1.name FROM cards AS T1 WHERE T1.convertedManaCost IS NOT NULL AND T1.frameVersion = '2003' ORDER BY T1.convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT ST.translation FROM cards AS C INNER JOIN sets AS S ON C.setCode = S.code INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE C.name = 'Ancestor''s Chosen' AND ST.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(ST.translation) FROM set_translations AS ST INNER JOIN cards AS C ON ST.setCode = C.setCode WHERE C.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS(SELECT 1 FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'Korean')\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T3.translation = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "469": "SELECT EXISTS(SELECT 1 FROM cards AS C INNER JOIN sets AS S ON C.setCode = S.code WHERE C.name = 'Angel of Mercy' AND S.mtgoCode IS NOT NULL)\t----- bird -----\tcard_games",
    "470": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT COUNT(*) > 0 FROM cards AS C INNER JOIN sets AS S ON C.setCode = S.code WHERE C.name = 'Adarkar Valkyrie' AND S.isForeignOnly = 1\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 100\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost = (SELECT MAX(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap')\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "478": "SELECT T1.* FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.number = '4' AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND setCode = 'CSP' AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Italian' AND T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT T1.text FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.language = 'Italian' AND T3.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "484": "SELECT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.language = 'Italian' AND T3.name = 'Coldsnap' AND T2.convertedManaCost = (SELECT MAX(T2.convertedManaCost) FROM cards AS T2 INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T3.name = 'Coldsnap')\t----- bird -----\tcard_games",
    "485": "SELECT T2.date FROM rulings AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT (COUNT(T1.id) * 100.0 / T2.baseSetSize) AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.convertedManaCost = 7.0 AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT (COUNT(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 END) * 100.0) / COUNT(T1.id) AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = date('2017-06-09')\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT T2.text, T1.hasContentWarning FROM cards AS T1 LEFT JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Jim Pavelec' AND T1.hasContentWarning = 1\t----- bird -----\tcard_games",
    "495": "SELECT T2.releaseDate FROM sets AS T2 INNER JOIN cards AS T1 ON T1.setCode = T2.code WHERE T1.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT T2.type FROM sets AS T2 INNER JOIN set_translations AS T1 ON T2.code = T1.setCode WHERE T1.translation = 'Huiti\u00e8me \u00e9dition'\t----- bird -----\tcard_games",
    "498": "SELECT ST.translation  FROM set_translations ST  INNER JOIN cards C ON ST.setCode = C.setCode  WHERE C.name = 'Tendo Ice Bridge' AND ST.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(T2.translation) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Tenth Edition'\t----- bird -----\tcard_games",
    "500": "SELECT T3.translation FROM set_translations AS T3 INNER JOIN sets AS T2 ON T3.setCode = T2.code INNER JOIN cards AS T1 ON T1.setCode = T2.code WHERE T1.name = 'Fellwar Stone' AND T3.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Journey into Nyx Hero''s Path' ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "502": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de fr\u00edo' AND T2.language = 'Spanish'\t----- bird -----\tcard_games",
    "503": "SELECT T2.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3.0\t----- bird -----\tcard_games",
    "505": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Mirrodin' AND T1.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "506": "SELECT (SUM(CASE WHEN T1.hasNonFoil = 1 AND T1.hasFoil = 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.id)) AS percentage  FROM cards AS T1  INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid  WHERE T2.language = 'Japanese';\t----- bird -----\tcard_games",
    "507": "SELECT (SUM(CASE WHEN S.isOnlineOnly = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM set_translations AS ST INNER JOIN sets AS S ON ST.setCode = S.code WHERE ST.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE isTextless = 1 AND artist = 'Aleksi Briclot'\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets)\t----- bird -----\tcard_games",
    "510": "SELECT T1.artist FROM cards AS T1 WHERE T1.side IS NULL AND T1.convertedManaCost = (SELECT MAX(T2.convertedManaCost) FROM cards AS T2 WHERE T2.side IS NULL)\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power = '*' OR power IS NULL) AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT T1.name, SUM(CASE WHEN T1.manaCost IS NOT NULL THEN (LENGTH(T1.manaCost) - LENGTH(REPLACE(T1.manaCost, '0', '')) + LENGTH(T1.manaCost) - LENGTH(REPLACE(T1.manaCost, '1', '')) + LENGTH(T1.manaCost) - LENGTH(REPLACE(T1.manaCost, '2', '')) + LENGTH(T1.manaCost) - LENGTH(REPLACE(T1.manaCost, '3', '')) + LENGTH(T1.manaCost) - LENGTH(REPLACE(T1.manaCost, '4', '')) + LENGTH(T1.manaCost) - LENGTH(REPLACE(T1.manaCost, '5', '')) + LENGTH(T1.manaCost) - LENGTH(REPLACE(T1.manaCost, '6', '')) + LENGTH(T1.manaCost) - LENGTH(REPLACE(T1.manaCost, '7', '')) + LENGTH(T1.manaCost) - LENGTH(REPLACE(T1.manaCost, '8', '')) + LENGTH(T1.manaCost) - LENGTH(REPLACE(T1.manaCost, '9', ''))) ELSE 0 END) AS total_mana_cost FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'duel' AND T2.status = 'Legal' GROUP BY T1.name ORDER BY total_mana_cost DESC LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT MIN(T1.releaseDate) AS oldest_release_date, GROUP_CONCAT(DISTINCT T3.format) AS legal_formats  FROM sets AS T1  INNER JOIN cards AS T2 ON T1.code = T2.setCode  INNER JOIN legalities AS T3 ON T2.uuid = T3.uuid  WHERE T2.rarity = 'mythic' AND T3.status = 'Legal'\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Ba\u01f5a' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(T1.uuid) FROM cards AS T1 WHERE T1.rarity = 'rare' AND T1.types LIKE '%Enchantment%' AND T1.name = 'Abundance' AND T1.uuid IN (SELECT T2.uuid FROM legalities AS T2 GROUP BY T2.uuid HAVING COUNT(CASE WHEN T2.status != 'Legal' THEN 1 END) = 0)\t----- bird -----\tcard_games",
    "518": "SELECT T1.format, T2.name  FROM legalities AS T1  INNER JOIN cards AS T2 ON T1.uuid = T2.uuid  WHERE T1.status = 'Banned' AND T1.format = (SELECT format FROM legalities WHERE status = 'Banned' GROUP BY format ORDER BY COUNT(status) DESC LIMIT 1)\t----- bird -----\tcard_games",
    "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "WITH LeastIllustrator AS (SELECT artist FROM cards GROUP BY artist HAVING COUNT(id) = (SELECT MIN(card_count) FROM (SELECT COUNT(id) AS card_count FROM cards GROUP BY artist))) SELECT T1.artist, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist IN (SELECT artist FROM LeastIllustrator)\t----- bird -----\tcard_games",
    "521": "SELECT T2.status FROM legalities AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy' AND (T1.hasContentWarning = '1' OR T1.isReserved = '1')\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "523": "SELECT (COUNT(T1.id) / 4.0) AS annual_average, (SELECT T2.language FROM foreign_data AS T2 GROUP BY T2.language ORDER BY COUNT(T2.language) DESC LIMIT 1) AS common_language  FROM sets AS T1  WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT T1.uuid FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'oldschool' AND T2.status IN ('Restricted', 'Banned')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Kev Walker' ORDER BY T1.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T2.name, T3.format FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode INNER JOIN legalities AS T3 ON T2.uuid = T3.uuid WHERE T1.name = 'Hour of Devastation'\t----- bird -----\tcard_games",
    "529": "SELECT S.name FROM sets AS S WHERE EXISTS (SELECT 1 FROM set_translations AS ST WHERE ST.setCode = S.code AND ST.language = 'Korean') AND NOT EXISTS (SELECT 1 FROM set_translations AS ST WHERE ST.setCode = S.code AND ST.language = 'Japanese')\t----- bird -----\tcard_games",
    "530": "SELECT T1.frameVersion, T1.name FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' AND (T2.status = 'Banned' OR T2.status IS NULL) GROUP BY T1.frameVersion, T1.name\t----- bird -----\tcard_games",
    "531": "SELECT CASE WHEN Harlan.Reputation > Jarrod.Reputation THEN 'Harlan' ELSE 'Jarrod Dixon' END AS HigherReputation FROM (SELECT Reputation FROM users WHERE DisplayName = 'Harlan') AS Harlan,      (SELECT Reputation FROM users WHERE DisplayName = 'Jarrod Dixon') AS Jarrod;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND CreationDate > '2013-12-31';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ViewCount = (SELECT MAX(T3.ViewCount) FROM posts AS T3 INNER JOIN users AS T4 ON T3.OwnerUserId = T4.Id WHERE T4.DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "541": "SELECT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(T1.CommentCount) FROM posts AS T1 WHERE T1.OwnerUserId = (SELECT T2.Id FROM users AS T2 WHERE T2.DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "544": "SELECT T2.DisplayName FROM users AS T2 WHERE T2.Id = (SELECT T1.LastEditorUserId FROM posts AS T1 WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation')\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score > 19\t----- bird -----\tcodebase_community",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT posts.Body FROM posts WHERE Id = (SELECT tags.ExcerptPostId FROM tags WHERE Count = (SELECT MAX(Count) FROM tags))\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "552": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(T2.Id) FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'csgillespie' AND STRFTIME('%Y', T2.Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT T2.DisplayName FROM users AS T2 INNER JOIN (SELECT UserId, COUNT(Id) AS badge_count FROM badges GROUP BY UserId) AS T1 ON T2.Id = T1.UserId WHERE T1.badge_count = (SELECT MAX(badge_count) FROM (SELECT COUNT(Id) AS badge_count FROM badges GROUP BY UserId))\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T2.Score) FROM posts AS T2 WHERE T2.OwnerUserId = (SELECT T1.Id FROM users AS T1 WHERE T1.DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_counts.badge_count) FROM (SELECT COUNT(badges.Id) AS badge_count FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Views > 200 GROUP BY users.Id) AS badge_counts\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(CASE WHEN T2.Age > 65 THEN T1.Id END) * 100.0 / NULLIF(COUNT(T1.Id), 0)) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 5\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT T2.Title FROM posts AS T2 INNER JOIN comments AS T1 ON T1.PostId = T2.Id WHERE T1.Score = (SELECT MAX(Score) FROM comments)\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT T2.FavoriteCount FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 3025 AND DATE(T1.CreationDate) = '2014-04-23'\t----- bird -----\tcodebase_community",
    "564": "SELECT T1.Text FROM comments AS T1 WHERE T1.PostId IN (SELECT T2.Id FROM posts AS T2 WHERE T2.ParentId = 107829) LIMIT 1\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN T2.ClosedDate IS NOT NULL THEN 'Yes' ELSE 'No' END AS IsWellFinished FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = 65041\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(T1.Id) FROM posts AS T1 WHERE T1.OwnerUserId = (SELECT T2.Id FROM users AS T2 WHERE T2.DisplayName = 'Tiago Pasqualini');\t----- bird -----\tcodebase_community",
    "568": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(votes.Id) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Tags LIKE '%<data-visualization>%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T2.UserId = T1.Id WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(P.Id) * 1.0 / NULLIF(COUNT(V.Id), 0) FROM posts AS P LEFT JOIN votes AS V ON P.OwnerUserId = 24 AND V.UserId = 24 WHERE P.OwnerUserId = 24\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT T1.Text FROM comments AS T1 WHERE T1.PostId = (SELECT T2.Id FROM posts AS T2 WHERE T2.Title = 'How does gentle boosting differ from AdaBoost?')\t----- bird -----\tcodebase_community",
    "580": "SELECT DISTINCT T2.Id FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT LastEditorDisplayName FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
    "582": "SELECT T1.Title FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE LOWER(T2.UserDisplayName) = LOWER('Vebjorn Ljosa')\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score) AS TotalScore, T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.LastEditorDisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT C.Text FROM comments AS C WHERE C.UserId IN (SELECT PH.UserId FROM postHistory AS PH INNER JOIN posts AS P ON PH.PostId = P.Id WHERE P.Title = 'Why square the difference instead of taking the absolute value in standard deviation?')\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT U.DisplayName FROM votes AS V INNER JOIN posts AS P ON V.PostId = P.Id INNER JOIN users AS U ON V.UserId = U.Id WHERE V.BountyAmount = 50 AND P.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT T1.Title, T2.Text, V.AvgViewCount FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN (SELECT Id, AVG(ViewCount) AS AvgViewCount FROM posts WHERE Tags LIKE '%<humor>%' GROUP BY Id) AS V ON T1.Id = V.Id WHERE T1.Tags LIKE '%<humor>%'\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(Id) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users WHERE Views = (SELECT MIN(Views) FROM users)\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND Date BETWEEN '2011-01-01' AND '2011-12-31';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) FROM (SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(UserId) > 5);\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(*) FROM (SELECT `T1`.`Id` FROM `users` AS `T1` INNER JOIN `badges` AS `T2` ON `T1`.`Id` = `T2`.`UserId` WHERE `T1`.`Location` LIKE '%New York%' AND `T2`.`Name` IN ('Teacher', 'Supporter') GROUP BY `T1`.`Id` HAVING COUNT(DISTINCT `T2`.`Name`) = 2) AS `T3`\t----- bird -----\tcodebase_community",
    "594": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 1\t----- bird -----\tcodebase_community",
    "595": "--error--\t----- bird -----\tcodebase_community",
    "596": "WITH CommentCounts AS (SELECT UserId, COUNT(*) AS comment_count FROM comments GROUP BY UserId), MaxComments AS (SELECT MAX(comment_count) AS max_count FROM CommentCounts) SELECT T2.Name FROM badges AS T2 JOIN CommentCounts AS CC ON T2.UserId = CC.UserId JOIN MaxComments AS MC ON CC.comment_count = MC.max_count\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location LIKE '%India%' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT ((COUNT(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 END) - COUNT(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 END)) / NULLIF(COUNT(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 END), 0)) * 100 AS percentage_difference FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) IN ('2010', '2011')\t----- bird -----\tcodebase_community",
    "599": "SELECT T1.PostHistoryTypeId, COUNT(DISTINCT T2.UserId) AS unique_user_count  FROM postHistory AS T1  LEFT JOIN comments AS T2 ON T1.PostId = T2.PostId  WHERE T1.PostId = 3720  GROUP BY T1.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.PostId, T1.RelatedPostId, (SELECT ViewCount FROM posts WHERE Id = 61217) AS ViewCount, (SELECT Score FROM posts WHERE Id = 61217) AS Score, (SELECT FavoriteCount FROM posts WHERE Id = 61217) AS FavoriteCount  FROM postLinks AS T1  WHERE T1.PostId = 61217 OR T1.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT Id, OwnerUserId FROM posts WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND CreaionDate BETWEEN '2011-01-01' AND '2011-12-31'\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(users.UpVotes), AVG(users.Age) FROM users WHERE users.Id IN (SELECT posts.OwnerUserId FROM posts GROUP BY posts.OwnerUserId HAVING COUNT(posts.Id) > 10)\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score >= 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT DISTINCT T1.Name  FROM badges AS T1  INNER JOIN users AS T2 ON T1.UserId = T2.Id  WHERE T2.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT T1.Reputation FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (COUNT(DISTINCT T1.UserId) / COUNT(DISTINCT T2.Id)) * 100 AS percentage  FROM badges AS T1  INNER JOIN users AS T2 ON T1.UserId = T2.Id  WHERE T1.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "615": "SELECT (SUM(CASE WHEN users.Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) * 1.0 / COUNT(users.Id)) * 100 AS TeenagerPercentage FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "616": "SELECT Score FROM comments WHERE PostId = (SELECT Id FROM posts WHERE CreationDate = '2010-07-19 19:19:56')\t----- bird -----\tcodebase_community",
    "617": "SELECT T2.Text FROM comments AS T2 INNER JOIN posts AS T1 ON T1.Id = T2.PostId WHERE T1.CreaionDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT T1.Age FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Age BETWEEN 19 AND 65 AND T2.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "620": "SELECT T1.Views FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT DISTINCT B.Name FROM badges AS B INNER JOIN users AS U ON B.UserId = U.Id WHERE U.Reputation = (SELECT MIN(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "622": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(U.Id) FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE U.Age > 65 AND B.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location LIKE '%New York%'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(Id) FROM votes WHERE CreationDate LIKE '2010%'\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "629": "SELECT CAST(COUNT(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 END) AS FLOAT) / NULLIF(COUNT(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 END), 0) AS ratio FROM votes\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT T3.Tags FROM posts AS T3 INNER JOIN users AS T2 ON T3.OwnerUserId = T2.Id WHERE T2.DisplayName = 'John Salvatier' AND T3.Tags IS NOT NULL\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo'\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(T1.PostId) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT T2.DisplayName, COALESCE(SUM(T1.ViewCount), 0) AS TotalViews FROM users AS T2 LEFT JOIN posts AS T1 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY T2.DisplayName ORDER BY TotalViews DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM (SELECT P.Id FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id LEFT JOIN votes AS V ON P.Id = V.PostId WHERE U.DisplayName = 'Matt Parker' GROUP BY P.Id HAVING COUNT(V.Id) > 4) AS SubQuery\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'Neil McGuigan' AND C.Score < 60\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Mark Meckes' AND T1.CommentCount = 0 AND T1.Tags IS NOT NULL\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT (COUNT(CASE WHEN T1.Tags LIKE '%<r>%' THEN 1 END) * 100.0) / NULLIF(COUNT(T1.Id), 0) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(CASE WHEN T2.DisplayName = 'mornington' THEN T1.ViewCount ELSE 0 END) - SUM(CASE WHEN T2.DisplayName = 'Amos' THEN T1.ViewCount ELSE 0 END) AS ViewCountDifference FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND STRFTIME('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(Id) FROM posts WHERE DATE(CreaionDate) = '2010-07-21'\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = 13;\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'North Pole' AND T1.Date BETWEEN '2011-01-01 00:00:00' AND '2011-12-31 23:59:59'\t----- bird -----\tcodebase_community",
    "648": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount > 150 AND T1.WebsiteUrl IS NOT NULL\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(postHistory.Id) AS PostHistoryCount, posts.LastEditDate FROM posts INNER JOIN postHistory ON posts.Id = postHistory.PostId WHERE posts.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY posts.LastEditDate\t----- bird -----\tcodebase_community",
    "650": "SELECT users.LastAccessDate, users.Location FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title  FROM postLinks AS T1  INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id  WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'How to tell if something happened in a data set which monitors a value over time')\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.Id, T2.Name FROM posts AS T1 INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id INNER JOIN badges AS T2 ON T3.Id = T2.UserId WHERE T3.DisplayName = 'Samuel' AND strftime('%Y', T1.CreationDate) = '2013' AND strftime('%Y', T2.Date) = '2013'\t----- bird -----\tcodebase_community",
    "653": "SELECT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT T3.DisplayName, T3.Location FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T1.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?')\t----- bird -----\tcodebase_community",
    "656": "SELECT users.DisplayName FROM posts AS child INNER JOIN posts AS parent ON child.ParentId = parent.Id INNER JOIN users ON parent.OwnerUserId = users.Id WHERE child.ParentId IS NOT NULL AND child.Score = (SELECT MAX(Score) FROM posts WHERE ParentId IS NOT NULL)\t----- bird -----\tcodebase_community",
    "657": "SELECT T2.DisplayName, T2.WebsiteUrl FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 8 AND T1.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts);\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT T2.Id) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate BETWEEN '2011-01-01' AND '2011-12-31' AND T1.BountyAmount = 50\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE DATE(CreaionDate) = '2010-07-19';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(monthly_count) FROM (SELECT COUNT(*) AS monthly_count FROM postLinks AS PL INNER JOIN posts AS P ON PL.PostId = P.Id WHERE STRFTIME('%Y', PL.CreationDate) = '2010' AND (P.AnswerCount <= 2 OR P.AnswerCount IS NULL) GROUP BY STRFTIME('%Y-%m', PL.CreationDate))\t----- bird -----\tcodebase_community",
    "666": "SELECT T1.Id FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 1465 AND T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE Id IN (SELECT PostId FROM votes WHERE UserId = 1465))\t----- bird -----\tcodebase_community",
    "667": "SELECT posts.Title FROM posts INNER JOIN postLinks ON posts.Id = postLinks.PostId WHERE postLinks.CreationDate = (SELECT MIN(CreationDate) FROM postLinks)\t----- bird -----\tcodebase_community",
    "668": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN (SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(Id) = (SELECT MAX(BadgeCount) FROM (SELECT COUNT(Id) AS BadgeCount FROM badges GROUP BY UserId))) AS T2 ON T1.Id = T2.UserId\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(T1.CreationDate) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreaionDate) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "671": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.Id = (SELECT UserId FROM badges WHERE Name = 'Autobiographer' ORDER BY Date ASC LIMIT 1)\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location LIKE '%United Kingdom%' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(count) FROM (SELECT COUNT(votes.PostId) as count FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.Age = (SELECT MAX(Age) FROM users) GROUP BY votes.UserId) AS subquery\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age >= 19 AND Age <= 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Jay Stevens' AND STRFTIME('%Y', T1.CreaionDate) = '2010'\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' AND T1.ViewCount = (SELECT MAX(T3.ViewCount) FROM posts AS T3 INNER JOIN users AS T4 ON T3.OwnerUserId = T4.Id WHERE T4.DisplayName = 'Harvey Motulsky')\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts WHERE Score = (SELECT MAX(Score) FROM posts);\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.ViewCount > 20000 AND STRFTIME('%Y', posts.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "682": "SELECT T2.Id, T3.DisplayName FROM posts AS T2 INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T2.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE SUBSTRING(CreaionDate, 1, 4) = '2010') AND SUBSTRING(CreaionDate, 1, 4) = '2010'\t----- bird -----\tcodebase_community",
    "683": "SELECT 100.0 * SUM(CASE WHEN T2.Reputation > 1000 THEN 1 ELSE 0 END) / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE strftime('%Y', T1.CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
    "684": "SELECT (COUNT(Id) FILTER (WHERE Age BETWEEN 13 AND 18) * 100.0 / COUNT(Id)) AS Percentage FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT P.ViewCount, U.DisplayName FROM posts AS P INNER JOIN users AS U ON P.LastEditorUserId = U.Id WHERE LOWER(P.Title) = LOWER('Computer Game Datasets')\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(T1.Id) FROM posts AS T1 WHERE T1.ViewCount > (SELECT AVG(T2.ViewCount) FROM posts AS T2)\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(comments.PostId) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT T2.DisplayName, T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183 AND T1.LastEditorUserId IS NOT NULL\t----- bird -----\tcodebase_community",
    "690": "SELECT T2.Name  FROM badges AS T2  INNER JOIN users AS T1 ON T1.Id = T2.UserId  WHERE T1.DisplayName = 'Emmett'  AND T2.Date = (SELECT MAX(T2.Date) FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Emmett')\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT JULIANDAY(badges.Date) - JULIANDAY((SELECT CreationDate FROM users WHERE DisplayName = 'Zolomon')) FROM badges WHERE badges.UserId = (SELECT Id FROM users WHERE DisplayName = 'Zolomon')\t----- bird -----\tcodebase_community",
    "693": "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)) AS NumberOfPosts, (SELECT COUNT(*) FROM comments WHERE UserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)) AS NumberOfComments\t----- bird -----\tcodebase_community",
    "694": "SELECT T1.Text, T2.DisplayName FROM comments AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'Analysing wind data with R') ORDER BY T1.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol'\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE Tags LIKE '%<careers>%';\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT (SELECT COUNT(*) FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.Title = 'Clustering 1D data') + (SELECT COUNT(*) FROM posts AS A WHERE A.ParentId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data') AND A.PostTypeId = 2) AS TotalCount\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(DISTINCT PostId) FROM votes WHERE BountyAmount > 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT (COUNT(CASE WHEN P.Score > 50 THEN 1 END) * 100.0 / COUNT(*)) AS Percentage FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%linear regression%' OR T2.Body LIKE '%linear regression%' OR T2.Tags LIKE '%<linear-regression>%'\t----- bird -----\tcodebase_community",
    "707": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT DISTINCT T1.CreationDate, T1.Age FROM users AS T1 WHERE T1.WebsiteUrl IS NOT NULL AND T1.Id IN (SELECT T2.UserId FROM comments AS T2)\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T1.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score = 0 AND T1.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CommentCount = 1 AND T1.Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.Id, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT comments.* FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(CASE WHEN U.UpVotes = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM comments AS C INNER JOIN users AS U ON C.UserId = U.Id WHERE C.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "717": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT hero_power.hero_id) FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT T2.full_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id GROUP BY T1.hero_id HAVING COUNT(T1.power_id) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "722": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.skin_colour_id = C.id WHERE S.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT T1.superhero_name, T1.height_cm FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "727": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT T3.colour, COUNT(T1.id)  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id  WHERE T2.publisher_name = 'Marvel Comics'  GROUP BY T3.colour  ORDER BY COUNT(T1.id) DESC\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.height_cm > 0\t----- bird -----\tsuperhero",
    "730": "SELECT T1.superhero_name  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id  INNER JOIN superpower AS T4 ON T3.power_id = T4.id  WHERE T2.publisher_name = 'Marvel Comics' AND T4.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT T3.publisher_name  FROM superhero AS T1  INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id  INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id  WHERE T2.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed')  ORDER BY T2.attribute_value ASC  LIMIT 1\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT T3.superhero_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Intelligence' AND T1.attribute_value = (SELECT MIN(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Intelligence')\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T1.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_id = (SELECT id FROM superpower WHERE power_name = 'Death Touch')\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN (SELECT hero_id, COUNT(power_id) AS power_count FROM hero_power GROUP BY hero_id HAVING power_count = (SELECT MAX(power_count) FROM (SELECT hero_id, COUNT(power_id) AS power_count FROM hero_power GROUP BY hero_id))) AS T1 ON T1.hero_id = T2.id\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT (SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral') * 100.0 / COUNT(T1.id) AS percentage, (SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral')) AS marvel_count FROM superhero AS T1\t----- bird -----\tsuperhero",
    "744": "SELECT ABS(SUM(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS difference FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('DC Comics', 'Marvel Comics');\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL OR full_name = '-';\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.weight_kg > 0 AND T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT T3.power_name  FROM superhero AS T1  INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id  INNER JOIN superpower AS T3 ON T2.power_id = T3.id  INNER JOIN gender AS T4 ON T1.gender_id = T4.id  WHERE T4.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT T3.colour FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.race = 'Human' AND T1.height_cm = 185\t----- bird -----\tsuperhero",
    "759": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.weight_kg = (SELECT MAX(weight_kg) FROM superhero WHERE weight_kg > 0)\t----- bird -----\tsuperhero",
    "760": "SELECT (COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180 AND T1.height_cm IS NOT NULL AND T1.height_cm > 0\t----- bird -----\tsuperhero",
    "761": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero) AND T2.gender = 'Male'\t----- bird -----\tsuperhero",
    "762": "SELECT power_id FROM hero_power GROUP BY power_id ORDER BY COUNT(power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT T2.full_name FROM superhero AS T2 WHERE T2.id = (SELECT T1.hero_id FROM hero_attribute AS T1 INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' ORDER BY T1.attribute_value DESC LIMIT 1)\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(T1.height_cm) AS average_height, AVG(T1.weight_kg) AS average_weight FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T2.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.attribute_name = 'Durability' AND T4.publisher_name = 'Dark Horse Comics' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T4.colour AS eye_colour, T5.colour AS hair_colour, T6.colour AS skin_colour  FROM superhero AS T1  INNER JOIN gender AS T2 ON T1.gender_id = T2.id  INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id  INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id  INNER JOIN colour AS T5 ON T1.hair_colour_id = T5.id  INNER JOIN colour AS T6 ON T1.skin_colour_id = T6.id  WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.hair_colour_id = T1.skin_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT T2.alignment FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT (COUNT(T1.id) * 100.0 / NULLIF((SELECT COUNT(*) FROM superhero AS T3 INNER JOIN gender AS T4 ON T3.gender_id = T4.id WHERE T4.gender = 'Female'), 0)) AS percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.gender = 'Female' AND T3.colour = 'Blue'\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T3.superhero_name FROM superhero AS T3 INNER JOIN hero_power AS T1 ON T3.id = T1.hero_id INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T2.power_id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name  FROM superhero AS T1  WHERE T1.eye_colour_id = (SELECT T2.id FROM colour AS T2 WHERE T2.colour = 'Black')  AND T1.hair_colour_id = (SELECT T3.id FROM colour AS T3 WHERE T3.colour = 'Black')\t----- bird -----\tsuperhero",
    "783": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.skin_colour_id = (SELECT T3.id FROM colour AS T3 WHERE T3.colour = 'Gold')\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire' AND T1.alignment_id = 1\t----- bird -----\tsuperhero",
    "785": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN alignment AS T1 ON T2.alignment_id = T1.id WHERE T1.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "WITH MaxStrength AS (     SELECT MAX(hero_attribute.attribute_value) AS max_value     FROM hero_attribute     INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id     WHERE attribute.attribute_name = 'Strength' ) SELECT COUNT(*) FROM superhero WHERE id IN (     SELECT hero_id     FROM hero_attribute     INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id     WHERE attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = (SELECT max_value FROM MaxStrength) );\t----- bird -----\tsuperhero",
    "787": "SELECT T3.race, T2.alignment FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T1.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT (SUM(CASE WHEN T3.gender = 'Female' THEN 1 ELSE 0 END) * 100.0) / COUNT(DISTINCT T1.id) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien' AND T1.weight_kg > 0\t----- bird -----\tsuperhero",
    "790": "SELECT      (MAX(CASE WHEN full_name = 'Emil Blonsky' THEN weight_kg END) -      MAX(CASE WHEN full_name = 'Charles Chandler' THEN weight_kg END)) AS weight_difference  FROM superhero  WHERE full_name IN ('Emil Blonsky', 'Charles Chandler');\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) AS average_height FROM superhero WHERE height_cm > 0 GROUP BY superhero_name\t----- bird -----\tsuperhero",
    "792": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.race = 'God / Eternal' AND T3.gender = 'Male'\t----- bird -----\tsuperhero",
    "794": "WITH MaxSpeed AS (     SELECT MAX(T2.attribute_value) AS max_speed     FROM hero_attribute AS T2     INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id     WHERE T3.attribute_name = 'Speed' ) SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' AND T2.attribute_value = (SELECT max_speed FROM MaxSpeed)\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "796": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown'\t----- bird -----\tsuperhero",
    "798": "SELECT DISTINCT P.publisher_name  FROM superhero AS S  INNER JOIN publisher AS P ON S.publisher_id = P.id  WHERE S.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage  FROM superhero AS T1  INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id  WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "801": "SELECT      CAST(COUNT(CASE WHEN T2.gender = 'Male' THEN 1 END) AS FLOAT) /      NULLIF(COUNT(CASE WHEN T2.gender = 'Female' THEN 1 END), 0) AS gender_ratio FROM      superhero AS T1  INNER JOIN      gender AS T2 ON T1.gender_id = T2.id;\t----- bird -----\tsuperhero",
    "802": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.height_cm = (SELECT MAX(T2.height_cm) FROM superhero AS T2)\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.weight_kg IS NULL OR T1.weight_kg = 0\t----- bird -----\tsuperhero",
    "806": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T3.race FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT T3.race FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN race AS T3 ON T2.race_id = T3.id WHERE T1.attribute_value = (SELECT MAX(CAST(attribute_value AS INTEGER)) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "811": "SELECT T3.alignment, T2.power_name FROM superhero AS T1 INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id INNER JOIN hero_power AS T4 ON T1.id = T4.hero_id INNER JOIN superpower AS T2 ON T4.power_id = T2.id WHERE T1.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT DISTINCT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T3.attribute_value) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T2.alignment = 'Neutral' AND T3.attribute_value IS NOT NULL\t----- bird -----\tsuperhero",
    "814": "SELECT DISTINCT C.colour FROM superhero AS S INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id INNER JOIN colour AS C ON S.skin_colour_id = C.id WHERE HA.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Good' AND T3.gender = 'Female'\t----- bird -----\tsuperhero",
    "816": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT T3.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.colour = 'Blue' AND T4.gender = 'Male'\t----- bird -----\tsuperhero",
    "818": "SELECT (COUNT(CASE WHEN T3.gender = 'Female' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "819": "SELECT (COUNT(CASE WHEN T2.colour = 'Blue' THEN 1 END) - COUNT(CASE WHEN T2.colour IS NULL THEN 1 END)) AS difference  FROM superhero AS T1  INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id  WHERE T1.weight_kg IS NULL OR T1.weight_kg = 0;\t----- bird -----\tsuperhero",
    "820": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T2.superhero_name = 'Hulk' AND T3.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Control Wind' ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT T1.superhero_name, MAX(T1.weight_kg)  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  WHERE T2.publisher_name = 'DC Comics' GROUP BY T1.superhero_name  ORDER BY MAX(T1.weight_kg) DESC  LIMIT 1\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T3.race != '-' AND T2.publisher_name = 'Dark Horse Comics' AND T1.height_cm > 0\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(DISTINCT T1.hero_id)  FROM hero_attribute AS T1  INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id  WHERE T2.attribute_name = 'Speed' AND T1.attribute_value =      (SELECT MAX(attribute_value)       FROM hero_attribute AS T3       INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id       WHERE T4.attribute_name = 'Speed')\t----- bird -----\tsuperhero",
    "829": "SELECT ABS(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name IN ('Marvel Comics', 'DC Comics');\t----- bird -----\tsuperhero",
    "830": "SELECT T2.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T2 ON T3.attribute_id = T2.id WHERE T1.superhero_name = 'Black Panther' GROUP BY T2.attribute_name ORDER BY MIN(T3.attribute_value) LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT (COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT (SUM(CASE WHEN T1.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Good') THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_good  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'Brown'\t----- bird -----\tsuperhero",
    "840": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Intelligence')\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT T3.power_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T2.height_cm > 0.8 * (SELECT AVG(height_cm) FROM superhero WHERE height_cm > 0)\t----- bird -----\tsuperhero",
    "846": "SELECT T3.driverRef FROM qualifying AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.raceId = 20 AND T1.q2 IS NULL\t----- bird -----\tformula_1",
    "847": "SELECT T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 19 AND T1.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T1.position FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN ('Japan', 'China', 'India', 'Malaysia', 'Singapore', 'Thailand', 'South Korea', 'Philippines', 'Vietnam', 'Indonesia', 'Bahrain', 'United Arab Emirates', 'Saudi Arabia', 'Russia', 'Germany', 'France', 'Italy', 'Spain', 'United Kingdom', 'Belgium', 'Netherlands', 'Sweden', 'Austria', 'Switzerland', 'Norway', 'Finland', 'Portugal', 'Ireland', 'Czech Republic', 'Hungary', 'Poland', 'Slovakia', 'Slovenia', 'Croatia', 'Denmark', 'Iceland', 'Estonia', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Monaco', 'San Marino')\t----- bird -----\tformula_1",
    "853": "SELECT DISTINCT R.name  FROM races AS R  INNER JOIN circuits AS C ON R.circuitId = C.circuitId  WHERE C.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT T2.time FROM races AS T2 INNER JOIN circuits AS T1 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 1.0 AND T1.raceId = 24\t----- bird -----\tformula_1",
    "859": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruno' AND T2.surname = 'Senna' AND T1.raceId = 354\t----- bird -----\tformula_1",
    "860": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '1:40.000' AND T1.qualifyId = 355\t----- bird -----\tformula_1",
    "861": "SELECT T2.number FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q3 = '1:54' AND T1.qualifyId = 903\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT T3.driverId)  FROM results AS T3  INNER JOIN races AS T1 ON T3.raceId = T1.raceId  INNER JOIN status AS T2 ON T3.statusId = T2.statusId  WHERE T1.name = 'Bahrain Grand Prix' AND T1.year = 2007 AND T2.status <> 'Finished'\t----- bird -----\tformula_1",
    "863": "SELECT T2.url FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.date = '2015-11-29' AND T3.status = 'Finished'\t----- bird -----\tformula_1",
    "865": "SELECT MIN(T3.dob) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.status = 'Finished' AND T1.raceId = 592\t----- bird -----\tformula_1",
    "866": "SELECT T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time = '1:27.000' AND T1.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 933 AND T1.fastestLapSpeed = (SELECT MAX(T3.fastestLapSpeed) FROM results AS T3 WHERE T3.raceId = 933)\t----- bird -----\tformula_1",
    "868": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 AND T1.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9)\t----- bird -----\tformula_1",
    "870": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lucas' AND T2.surname = 'di Grassi' AND T1.raceId = 345\t----- bird -----\tformula_1",
    "871": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '1:15.000' AND T1.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT T2.code FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 45 AND T1.q3 = '00:01:33'\t----- bird -----\tformula_1",
    "873": "SELECT T1.milliseconds FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren' AND T1.raceId = 743\t----- bird -----\tformula_1",
    "874": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'San Marino Grand Prix' AND races.year = 2006 AND results.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT T2.url FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.date = '2015-11-29' AND T3.status != 'Finished'\t----- bird -----\tformula_1",
    "877": "SELECT MIN(T2.dob) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T1.raceId = 872 AND T3.status = 'Finished'\t----- bird -----\tformula_1",
    "878": "SELECT T3.forename, T3.surname  FROM results AS T1  INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId  WHERE T1.raceId = 348 AND T1.fastestLapTime = (SELECT MIN(T1.fastestLapTime) FROM results AS T1 WHERE T1.raceId = 348)\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality FROM drivers AS d INNER JOIN results AS r ON d.driverId = r.driverId WHERE r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "880": "SELECT ((CAST(r1.fastestLapSpeed AS FLOAT) - CAST(r2.fastestLapSpeed AS FLOAT)) / CAST(r2.fastestLapSpeed AS FLOAT) * 100) AS percentage FROM results AS r1 INNER JOIN results AS r2 ON r1.driverId = r2.driverId INNER JOIN drivers ON r1.driverId = drivers.driverId WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta' AND r1.raceId = 853 AND r2.raceId = (SELECT MIN(results.raceId) FROM results WHERE results.driverId = drivers.driverId AND results.raceId > 853);\t----- bird -----\tformula_1",
    "881": "SELECT COUNT(CASE WHEN T3.status = 'Finished' THEN 1 END) * 1.0 / COUNT(T1.driverId) AS completion_rate FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.date = '1983-07-16'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(T1.raceId) AS race_count,         GROUP_CONCAT(T1.name ORDER BY T1.name DESC) AS race_names  FROM races AS T1  WHERE T1.year = 2005;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE date = (SELECT MIN(date) FROM races)\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 AND round = (SELECT MAX(round) FROM races WHERE year = 1999)\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(raceId) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND name NOT IN (SELECT name FROM races WHERE year = 2000);\t----- bird -----\tformula_1",
    "888": "SELECT T3.country, T3.name AS circuit, T3.location FROM races AS T1 INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId WHERE T1.name = 'European Grand Prix' AND T1.year = (SELECT MIN(year) FROM races WHERE name = 'European Grand Prix')\t----- bird -----\tformula_1",
    "889": "SELECT MAX(T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'British Grand Prix' AND T2.name = 'Brands Hatch'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT T3.year) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN seasons AS T3 ON T2.year = T3.year WHERE T1.name = 'Silverstone Circuit' AND T2.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT T3.forename, T3.surname FROM results AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2010 AND T2.name = 'Singapore Grand Prix' ORDER BY T1.positionOrder ASC\t----- bird -----\tformula_1",
    "892": "SELECT T1.forename, T1.surname, totalPoints  FROM drivers AS T1  INNER JOIN (SELECT driverId, SUM(points) AS totalPoints              FROM results              GROUP BY driverId) AS T2  ON T1.driverId = T2.driverId  WHERE totalPoints = (SELECT MAX(totalPoints)                       FROM (SELECT driverId, SUM(points) AS totalPoints                             FROM results                             GROUP BY driverId));\t----- bird -----\tformula_1",
    "893": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name, results.points  FROM results  INNER JOIN races ON results.raceId = races.raceId  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE races.year = 2017 AND races.name = 'Chinese Grand Prix' AND results.positionOrder <= 3\t----- bird -----\tformula_1",
    "894": "SELECT CONCAT(T2.forename, ' ', T2.surname) AS driver_name, T3.name AS race_name, MIN(T1.fastestLapTime) AS best_lap_time  FROM results AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T1.raceId = T3.raceId  WHERE T1.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T3.time) FROM lapTimes AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN results AS T2 ON T3.raceId = T2.raceId INNER JOIN races AS T4 ON T2.raceId = T4.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T4.year = 2009 AND T4.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT (COUNT(CASE WHEN R.position != 1 THEN 1 END) * 100.0 / COUNT(R.raceId)) AS percentage FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN races AS R2 ON R.raceId = R2.raceId WHERE D.driverRef = 'hamilton' AND R2.year >= 2010\t----- bird -----\tformula_1",
    "897": "SELECT T2.forename, T2.surname, T2.nationality, MAX(T1.points)  FROM results AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  WHERE T1.position = 1  GROUP BY T2.driverId  ORDER BY COUNT(T1.position) DESC  LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT T1.forename, T1.surname FROM drivers AS T1 WHERE T1.dob = (SELECT MAX(T2.dob) FROM drivers AS T2 WHERE T2.nationality = 'Japanese')\t----- bird -----\tformula_1",
    "899": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.circuitId HAVING COUNT(T2.raceId) = 4\t----- bird -----\tformula_1",
    "900": "SELECT T1.name, T1.location, T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT T1.name, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.date LIKE '2005-09-%'\t----- bird -----\tformula_1",
    "902": "SELECT T3.name FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Alex' AND T2.surname = 'Yoong' AND T1.grid < 20\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher' AND T4.name = 'Sepang International Circuit' AND T1.position = 1\t----- bird -----\tformula_1",
    "904": "SELECT R.name, R.year FROM results AS Res INNER JOIN drivers AS D ON Res.driverId = D.driverId INNER JOIN races AS R ON Res.raceId = R.raceId WHERE D.forename = 'Michael' AND D.surname = 'Schumacher' AND Res.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results AS Res2 INNER JOIN drivers AS D2 ON Res2.driverId = D2.driverId WHERE D2.forename = 'Michael' AND D2.surname = 'Schumacher')\t----- bird -----\tformula_1",
    "905": "SELECT AVG(T3.points) FROM results AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.surname = 'Irvine' AND T2.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT T2.date, T4.points  FROM drivers AS T1  INNER JOIN results AS T4 ON T1.driverId = T4.driverId  INNER JOIN races AS T2 ON T4.raceId = T2.raceId  WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'  ORDER BY T2.date ASC  LIMIT 1\t----- bird -----\tformula_1",
    "907": "SELECT R.name, C.country  FROM races AS R  INNER JOIN circuits AS C ON R.circuitId = C.circuitId  WHERE R.year = 2017  ORDER BY R.date\t----- bird -----\tformula_1",
    "908": "SELECT T1.name, T1.year, T3.location  FROM races AS T1  INNER JOIN results AS T2 ON T1.raceId = T2.raceId  INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId  WHERE T2.laps = (SELECT MAX(laps) FROM results)\t----- bird -----\tformula_1",
    "909": "SELECT (COUNT(T1.raceId) * 100.0 / (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix')) AS percentage  FROM races AS T1  INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId  WHERE T1.name = 'European Grand Prix' AND T2.country = 'Germany'\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE lat = (SELECT MAX(lat) FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring'))\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits WHERE alt IS NOT NULL) AND (SELECT MAX(alt) FROM circuits WHERE alt IS NOT NULL) IS NOT NULL\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL OR code = '';\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers);\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT T2.year FROM races AS T2 INNER JOIN circuits AS T1 ON T2.circuitId = T1.circuitId WHERE T1.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT * FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year BETWEEN 2010 AND 2019 AND LOWER(T2.name) = LOWER('Abu Dhabi Circuit')\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT T1.url FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009\t----- bird -----\tformula_1",
    "926": "SELECT MIN(T1.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "928": "SELECT T3.driverRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.position = 1 AND T2.name = 'Canadian Grand Prix' AND T2.year = 2007\t----- bird -----\tformula_1",
    "929": "SELECT DISTINCT T3.name  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT T3.name  FROM results AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T1.raceId = T3.raceId  WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'  GROUP BY T1.raceId  ORDER BY MIN(T1.positionOrder) ASC  LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T3.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT T3.positionOrder FROM results AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2008 AND T2.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.grid = 4 AND T3.year = 1989 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT T3.driverId) FROM results AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN status AS T1 ON T3.statusId = T1.statusId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.status = 'Finished'\t----- bird -----\tformula_1",
    "936": "SELECT T3.fastestLap FROM results AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.positionOrder = 2 AND T2.year = 2008 AND T2.name IN ('Australian Grand Prix', 'Chinese Grand Prix')\t----- bird -----\tformula_1",
    "938": "SELECT T3.forename, T3.surname, T3.url FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.position = 1 AND T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'UN' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T3.status = 'Finished' AND T2.name = 'Chinese Grand Prix' AND T2.year = 2008\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T2.points) FROM results AS T2 INNER JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "942": "SELECT AVG(CAST(SUBSTR(T1.fastestLapTime, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(T1.fastestLapTime, 4, 2) AS INTEGER) + CAST(SUBSTR(T1.fastestLapTime, 7) AS INTEGER) / 1000) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "943": "SELECT COUNT(CASE WHEN S.status = 'Finished' AND R.laps = (SELECT MAX(R2.laps) FROM results AS R2 WHERE R2.raceId = Ra.raceId) THEN 1 END) * 1.0 / COUNT(*) AS completion_rate  FROM results AS R  INNER JOIN races AS Ra ON R.raceId = Ra.raceId  INNER JOIN status AS S ON R.statusId = S.statusId  WHERE Ra.year = 2008 AND Ra.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "944": "WITH race_info AS (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') SELECT ((SELECT milliseconds FROM results WHERE positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = (SELECT raceId FROM race_info))) - (SELECT milliseconds FROM results WHERE positionOrder = 1 AND raceId = (SELECT raceId FROM race_info))) / (SELECT milliseconds FROM results WHERE positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = (SELECT raceId FROM race_info))) * 100 AS percentage_faster;\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(T1.points) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = (SELECT MAX(points) FROM constructorStandings)\t----- bird -----\tformula_1",
    "950": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = 0.0 AND T2.raceId = 291\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Japanese' AND T2.points = 0 GROUP BY T1.constructorId HAVING COUNT(T2.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'French' AND T2.laps > 50\t----- bird -----\tformula_1",
    "954": "SELECT (COUNT(CASE WHEN S.status = 'Finished' THEN 1 END) * 100.0 / COUNT(R.resultId)) AS completion_percentage FROM results AS R INNER JOIN races AS RACE ON R.raceId = RACE.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN status AS S ON R.statusId = S.statusId WHERE D.nationality = 'Japanese' AND RACE.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT races.year, AVG(STRFTIME('%H', results.time) * 3600 + STRFTIME('%M', results.time) * 60 + STRFTIME('%S', results.time))  FROM results  INNER JOIN races ON results.raceId = races.raceId  WHERE results.positionOrder = 1 AND races.year < 1975  GROUP BY races.year\t----- bird -----\tformula_1",
    "956": "SELECT DISTINCT T1.forename, T1.surname  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  WHERE T1.dob > '1975-12-31' AND T2.rank = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'Italian' AND T3.status != 'Finished'\t----- bird -----\tformula_1",
    "958": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "959": "SELECT T1.fastestLap FROM results AS T1 INNER JOIN ( SELECT driverId FROM results AS T2 INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2009 AND T2.positionOrder = 1 GROUP BY T2.driverId ORDER BY COUNT(*) DESC LIMIT 1 ) AS T4 ON T1.driverId = T4.driverId\t----- bird -----\tformula_1",
    "960": "SELECT AVG(CAST(T1.fastestLapSpeed AS REAL)) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "961": "SELECT T2.name, T2.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.milliseconds = (SELECT MIN(milliseconds) FROM results)\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(DISTINCT CASE WHEN D.dob < '1985-01-01' AND R.laps > 50 THEN R.driverId END) * 100.0 / COUNT(DISTINCT R.driverId)) AS percentage FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE RA.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.time < '2:00.000'\t----- bird -----\tformula_1",
    "964": "SELECT T1.code FROM drivers AS T1 WHERE T1.nationality = 'American';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "WITH YoungestDrivers AS (     SELECT code, nationality     FROM drivers     ORDER BY dob DESC     LIMIT 3 ) SELECT COUNT(*) AS NetherlandicCount, GROUP_CONCAT(code) AS Codes FROM YoungestDrivers WHERE nationality = 'Dutch';\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT T1.driverId, T1.forename, T1.surname, MIN(T2.milliseconds) AS earliest_lap_time  FROM drivers AS T1  INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId  WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1990-12-31'  GROUP BY T1.driverId  ORDER BY earliest_lap_time ASC  LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'German')\t----- bird -----\tformula_1",
    "972": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN (SELECT raceId, MIN(fastestLapTime) AS minLapTime FROM results GROUP BY raceId) AS T3 ON T2.raceId = T3.raceId AND T2.fastestLapTime = T3.minLapTime WHERE strftime('%Y', T1.dob) = '1971'\t----- bird -----\tformula_1",
    "973": "SELECT T1.driverId, T1.forename, T1.surname, T2.milliseconds FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spanish' AND T1.dob < '1982-01-01' AND T2.milliseconds = (SELECT MAX(T3.milliseconds) FROM lapTimes AS T3 INNER JOIN drivers AS T4 ON T3.driverId = T4.driverId WHERE T4.nationality = 'Spanish' AND T4.dob < '1982-01-01') ORDER BY T2.milliseconds DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT T2.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results WHERE fastestLapTime IS NOT NULL)\t----- bird -----\tformula_1",
    "975": "SELECT T2.year  FROM results AS T1  INNER JOIN races AS T2 ON T1.raceId = T2.raceId  WHERE T1.fastestLapSpeed = (SELECT MIN(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY milliseconds ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T1.raceId BETWEEN 50 AND 100 AND T2.status = 'Disqualified'\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(circuitId), location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "979": "WITH FinishCounts AS (     SELECT `T2`.`round`, COUNT(`T1`.`resultId`) AS finishCount     FROM `results` AS `T1`     INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId`     INNER JOIN `status` AS `T3` ON `T1`.`statusId` = `T3`.`statusId`     WHERE `T3`.`status` = 'Finished'     GROUP BY `T2`.`round` ) SELECT `round` FROM FinishCounts WHERE finishCount = (SELECT MAX(finishCount) FROM FinishCounts);\t----- bird -----\tformula_1",
    "980": "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 IS NOT NULL AND T2.raceId = 23\t----- bird -----\tformula_1",
    "981": "SELECT T3.year, T3.name, T3.date, T3.time  FROM drivers AS T1  INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.dob = (SELECT MAX(dob) FROM drivers)  ORDER BY T3.date ASC  LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'American' AND T3.status = 'Puncture'\t----- bird -----\tformula_1",
    "983": "WITH ItalianConstructorPoints AS (     SELECT `T1`.`constructorId`, SUM(`T2`.`points`) AS total_points     FROM `constructors` AS `T1`     INNER JOIN `constructorStandings` AS `T2` ON `T1`.`constructorId` = `T2`.`constructorId`     WHERE `T1`.`nationality` = 'Italian'     GROUP BY `T1`.`constructorId` ) SELECT `T1`.`url` FROM `constructors` AS `T1` WHERE `T1`.`constructorId` = (SELECT `constructorId` FROM ItalianConstructorPoints WHERE total_points = (SELECT MAX(total_points) FROM ItalianConstructorPoints))\t----- bird -----\tformula_1",
    "984": "SELECT constructors.url  FROM constructors  INNER JOIN (SELECT constructorId, SUM(wins) AS total_wins              FROM constructorStandings              GROUP BY constructorId              ORDER BY total_wins DESC              LIMIT 1) AS top_constructor  ON constructors.constructorId = top_constructor.constructorId\t----- bird -----\tformula_1",
    "985": "SELECT T1.driverId FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'French Grand Prix' AND T1.lap = 3 AND T1.milliseconds = (SELECT MAX(T3.milliseconds) FROM lapTimes AS T3 INNER JOIN races AS T4 ON T3.raceId = T4.raceId WHERE T4.name = 'French Grand Prix' AND T3.lap = 3)\t----- bird -----\tformula_1",
    "986": "SELECT T2.name, MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.lap = 1 GROUP BY T2.name ORDER BY MIN(T1.milliseconds) LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.positionOrder <= 10 AND T2.year = 2006 AND T2.name = 'United States Grand Prix'\t----- bird -----\tformula_1",
    "988": "SELECT T1.forename, T1.surname, AVG(T2.milliseconds) AS avgPitStopDuration FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T1.driverId ORDER BY avgPitStopDuration ASC LIMIT 3\t----- bird -----\tformula_1",
    "989": "SELECT T3.forename, T3.surname, T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.position = 1 AND T2.name = 'Canadian Grand Prix' AND T2.year = 2008\t----- bird -----\tformula_1",
    "990": "SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN constructors AS T3 ON T1.constructorId = T3.constructorId WHERE T1.positionOrder = 1 AND T2.year = 2009 AND T2.name = 'Singapore Grand Prix'\t----- bird -----\tformula_1",
    "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS full_name, url, dob FROM drivers WHERE nationality = 'German' AND STRFTIME('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT T3.name, T3.nationality, SUM(T2.points) AS total_points  FROM constructorResults AS T2  INNER JOIN races AS T1 ON T2.raceId = T1.raceId  INNER JOIN constructors AS T3 ON T2.constructorId = T3.constructorId  WHERE T1.name = 'Monaco Grand Prix' AND T1.year BETWEEN 1980 AND 2010  GROUP BY T3.constructorId  HAVING SUM(T2.points) = (SELECT MAX(total_points) FROM (SELECT SUM(points) AS total_points FROM constructorResults INNER JOIN races ON constructorResults.raceId = races.raceId WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructorResults.constructorId))\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) FROM (SELECT COUNT(raceId) AS race_count FROM races WHERE year BETWEEN 2001 AND 2010 GROUP BY year);\t----- bird -----\tformula_1",
    "997": "SELECT drivers.nationality FROM drivers GROUP BY drivers.nationality ORDER BY COUNT(drivers.driverId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT T1.wins FROM driverStandings AS T1 WHERE T1.position = 91;\t----- bird -----\tformula_1",
    "999": "SELECT races.name FROM races INNER JOIN results ON races.raceId = results.raceId WHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT T2.location || ', ' || T2.country AS full_location  FROM races AS T1  INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId  WHERE T1.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT T3.forename, T3.surname FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId INNER JOIN circuits AS T4 ON T2.circuitId = T4.circuitId WHERE T1.position = 1 AND T2.round = 3 AND T4.name = 'Marina Bay Street Circuit' AND T2.year = 2008\t----- bird -----\tformula_1",
    "1002": "SELECT T1.forename || ' ' || T1.surname AS full_name, T1.nationality, T2.name AS first_race FROM drivers AS T1 INNER JOIN results AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.dob = (SELECT MIN(dob) FROM drivers) ORDER BY T3.raceId ASC LIMIT 1\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(S.status) FROM results AS R INNER JOIN status AS S ON R.statusId = S.statusId INNER JOIN races AS R2 ON R.raceId = R2.raceId WHERE R2.name = 'Canadian Grand Prix' AND S.status = 'Accident' AND R.driverId = (SELECT R.driverId FROM results AS R INNER JOIN status AS S ON R.statusId = S.statusId INNER JOIN races AS R2 ON R.raceId = R2.raceId WHERE R2.name = 'Canadian Grand Prix' AND S.status = 'Accident' GROUP BY R.driverId ORDER BY COUNT(S.status) DESC LIMIT 1)\t----- bird -----\tformula_1",
    "1004": "SELECT COUNT(R.resultId) AS wins, D.forename, D.surname FROM drivers AS D LEFT JOIN results AS R ON D.driverId = R.driverId AND R.position = 1 WHERE D.dob = (SELECT MIN(dob) FROM drivers) GROUP BY D.driverId, D.forename, D.surname\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(milliseconds) FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT time FROM lapTimes ORDER BY milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(T1.duration) FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1008": "SELECT T3.lap FROM pitStops AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2011 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1009": "SELECT T3.forename, T3.surname, T1.duration  FROM pitStops AS T1  INNER JOIN races AS T2 ON T1.raceId = T2.raceId  INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId  WHERE T2.year = 2011 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(T3.fastestLapTime) FROM results AS T3 INNER JOIN drivers AS T2 ON T3.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1011": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes) AND T2.driverId IN (SELECT T3.driverId FROM (SELECT T1.driverId, ROW_NUMBER() OVER (ORDER BY MIN(T1.milliseconds)) AS rank FROM lapTimes AS T1 GROUP BY T1.driverId) AS T3 WHERE T3.rank <= 20)\t----- bird -----\tformula_1",
    "1012": "SELECT C.lat, C.lng FROM results AS R INNER JOIN races AS R2 ON R.raceId = R2.raceId INNER JOIN circuits AS C ON R2.circuitId = C.circuitId INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND R.fastestLap IS NOT NULL;\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1014": "SELECT T1.fastestLapTime, T1.fastestLapSpeed FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1015": "WITH MinLapTime AS (     SELECT MIN(T1.fastestLapTime) AS fastestLap FROM results AS T1      INNER JOIN races AS T2 ON T1.raceId = T2.raceId      INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId      WHERE T3.country = 'Austria' ) SELECT T2.name FROM races AS T2  INNER JOIN results AS T1 ON T1.raceId = T2.raceId  INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId  WHERE T3.country = 'Austria' AND T1.fastestLapTime = (SELECT fastestLap FROM MinLapTime)\t----- bird -----\tformula_1",
    "1016": "SELECT SUM(T3.duration) FROM pitStops AS T3 INNER JOIN results AS T2 ON T3.driverId = T2.driverId INNER JOIN races AS T1 ON T2.raceId = T1.raceId WHERE T1.name = 'Austrian Grand Prix' AND T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results WHERE raceId = T1.raceId)\t----- bird -----\tformula_1",
    "1017": "SELECT T3.latitude, T3.longitude FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.fastestLapTime = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(T1.milliseconds) FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, height FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1022": "SELECT PA.preferred_foot FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT T1.id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT League.name  FROM League  INNER JOIN Match ON League.id = Match.league_id  WHERE Match.season = '2015/2016'  GROUP BY League.name  HAVING SUM(Match.home_team_goal + Match.away_team_goal) = (     SELECT MAX(total_goals)      FROM (         SELECT SUM(Match.home_team_goal + Match.away_team_goal) AS total_goals          FROM Match          WHERE Match.season = '2015/2016'          GROUP BY Match.league_id     ) )\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.season = '2015/2016' AND T1.home_team_goal < T1.away_team_goal GROUP BY T2.team_long_name HAVING COUNT(*) = (SELECT MIN(loss_count) FROM (SELECT COUNT(*) AS loss_count FROM Match WHERE home_team_goal < away_team_goal AND season = '2015/2016' GROUP BY home_team_api_id))\t----- bird -----\teuropean_football_2",
    "1027": "SELECT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id GROUP BY P.player_name ORDER BY MAX(PA.penalties) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T2.team_long_name, COUNT(*) AS wins FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id INNER JOIN League AS T3 ON T1.league_id = T3.id WHERE T1.away_team_goal > T1.home_team_goal AND T3.name = 'Scotland Premier League' AND T1.season = '2010/2011' GROUP BY T2.team_long_name ORDER BY wins DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT T1.buildUpPlaySpeed FROM Team_Attributes AS T1 ORDER BY T1.buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT League.name FROM League INNER JOIN Match ON League.id = Match.league_id WHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal GROUP BY League.id ORDER BY COUNT(Match.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) AS age FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.sprint_speed >= 97 AND Player_Attributes.date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT T1.name, COUNT(T2.league_id) AS match_count  FROM League AS T1  INNER JOIN Match AS T2 ON T1.id = T2.league_id  GROUP BY T1.name  ORDER BY match_count DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(CAST(Player.height AS REAL)) FROM Player WHERE SUBSTR(Player.birthday, 1, 4) BETWEEN '1990' AND '1995'\t----- bird -----\teuropean_football_2",
    "1034": "WITH average_rating AS (     SELECT AVG(overall_rating) AS avg_rating FROM Player_Attributes WHERE date LIKE '2010%' ) SELECT player_api_id  FROM Player_Attributes  WHERE date LIKE '2010%'  ORDER BY (overall_rating - (SELECT avg_rating FROM average_rating)) DESC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name  FROM Team AS T1  INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T2.buildUpPlayPassing > (SELECT AVG(T3.buildUpPlayPassing) FROM Team_Attributes AS T3 WHERE strftime('%Y', T3.date) = '2012')  AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (COUNT(DISTINCT T1.player_api_id) * 1.0 / NULLIF(COUNT(DISTINCT T1.player_api_id), 0)) * 100 AS percentage  FROM Player AS T1  INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  WHERE T2.preferred_foot = 'left' AND SUBSTR(T1.birthday, 1, 4) BETWEEN '1987' AND '1992'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT T2.name, SUM(T1.home_team_goal + T1.away_team_goal) AS total_goals FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T2.name ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 WHERE T1.player_api_id = (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T2.team_long_name  FROM Team AS T2  INNER JOIN Team_Attributes AS T1 ON T1.team_api_id = T2.team_api_id  WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.date LIKE '2014%' AND T1.chanceCreationPassing < (SELECT AVG(T1.chanceCreationPassing) FROM Team_Attributes AS T1 WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.date LIKE '2014%')  ORDER BY T1.chanceCreationPassing DESC\t----- bird -----\teuropean_football_2",
    "1042": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2009/2010' GROUP BY T2.name HAVING AVG(T1.home_team_goal) > AVG(T1.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE birthday LIKE '1970-10-%';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT PA.attacking_work_rate  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE P.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT T2.finishing FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Francois Affolter' AND T2.date = '2014-09-18'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Gabriel Tamas' AND T2.date LIKE '2011%'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.season = '2015/2016' AND L.name = 'Scotland Premier League'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday = (SELECT MAX(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1051": "SELECT T1.player_name  FROM Player AS T1  INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  WHERE T2.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.weight < 130 AND PA.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT Player.birthday  FROM Player  WHERE player_api_id = (SELECT player_api_id                          FROM Player_Attributes                          WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes))\t----- bird -----\teuropean_football_2",
    "1056": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(M.home_team_goal) FROM Match AS M INNER JOIN Team AS T ON M.home_team_api_id = T.team_api_id INNER JOIN League AS L ON M.league_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE M.season = '2010/2011' AND C.name = 'Poland'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT MAX(avg_finishing)  FROM (     SELECT AVG(Player_Attributes.finishing) AS avg_finishing      FROM Player      INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id      WHERE Player.height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player)      GROUP BY Player.height ) AS finishing_rates\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(id) FROM Player WHERE STRFTIME('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating > 80 AND T1.date BETWEEN '2008-01-01 00:00:00' AND '2010-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT DISTINCT P.player_name  FROM Player_Attributes AS PA  INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id  WHERE PA.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 170 AND SUBSTRING(T1.date, 1, 4) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT T1.player_name FROM Player AS T1 WHERE T1.height = (SELECT MIN(T2.height) FROM Player AS T2)\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT DISTINCT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(match_api_id) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Germany 1. Bundesliga') AND date BETWEEN '2008-08-01' AND '2008-10-31'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = 61 AND Player_Attributes.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61)\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (AVG(CASE WHEN Player.player_name = 'Abdou Diallo' THEN Player_Attributes.ball_control END) - AVG(CASE WHEN Player.player_name = 'Aaron Appindangoye' THEN Player_Attributes.ball_control END)) AS difference  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player.player_name IN ('Abdou Diallo', 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT C.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE L.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT T1.player_name  FROM Player AS T1  INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id  ORDER BY T2.overall_rating DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.birthday < '1986-01-01' AND PA.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT T1.player_name, MAX(T2.crossing) AS max_crossing FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') GROUP BY T1.player_name ORDER BY max_crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1086": "SELECT T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.height > 180 AND PA.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match AS M INNER JOIN Team AS T ON M.home_team_api_id = T.team_api_id INNER JOIN League AS L ON T.team_fifa_api_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE M.season = '2008/2009' AND C.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT PA.long_passing FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.birthday = (SELECT MIN(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(M.id) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.date LIKE '2009-04%' AND L.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT League.name FROM League INNER JOIN Match ON League.id = Match.league_id WHERE Match.season = '2008/2009' GROUP BY Match.league_id ORDER BY COUNT(Match.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(PA.overall_rating) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE SUBSTRING(P.birthday, 1, 4) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((Ariel_rating - Paulin_rating) / Paulin_rating) * 100 AS percentage_difference FROM (     SELECT          (SELECT MAX(PA1.overall_rating)           FROM Player_Attributes AS PA1           INNER JOIN Player AS P1 ON PA1.player_api_id = P1.player_api_id           WHERE P1.player_name = 'Ariel Borysiuk') AS Ariel_rating,         (SELECT MAX(PA2.overall_rating)           FROM Player_Attributes AS PA2           INNER JOIN Player AS P2 ON PA2.player_api_id = P2.player_api_id           WHERE P2.player_name = 'Paulin Puel') AS Paulin_rating ) AS ratings WHERE Paulin_rating IS NOT NULL AND Paulin_rating != 0;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 WHERE T1.player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Pietro Marino');\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T2.chanceCreationPassing), T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(M.away_team_goal) FROM Match AS M INNER JOIN Team AS T ON M.away_team_api_id = T.team_api_id INNER JOIN League AS L ON M.league_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Italy' AND T.team_long_name = 'Parma'\t----- bird -----\teuropean_football_2",
    "1102": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = 77 AND T1.date LIKE '2016-06-23%' ORDER BY T2.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T2.potential FROM Player_Attributes AS T2 INNER JOIN Player AS T1 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Parravicini' AND T2.date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore' AND SUBSTR(T2.date, 1, 10) = '2015-05-01'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Kevin Berigaud' AND T2.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "WITH MaxCrossing AS (     SELECT MAX(T1.crossing) AS highest_crossing     FROM Player_Attributes AS T1     INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id     WHERE T2.player_name = 'Kevin Constant' ) SELECT MIN(T1.date) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' AND T1.crossing = (SELECT highest_crossing FROM MaxCrossing)\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date BETWEEN '2011-02-22 00:00:00' AND '2011-02-22 23:59:59'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T2.buildUpPlayDribblingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'LEI' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE LOWER(T1.team_long_name) = LOWER('Hannover 96') AND T2.date = '2015-09-10'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Marko Arnautovic' AND T1.date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (T1.DonovanRating - T2.BoweryRating) * 100.0 / T2.BoweryRating AS Percentage FROM (SELECT PA.overall_rating AS DonovanRating       FROM Player AS P       INNER JOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id       WHERE P.player_name = 'Landon Donovan' AND PA.date LIKE '2013-07-12%') AS T1,      (SELECT PA.overall_rating AS BoweryRating       FROM Player AS P       INNER JOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id       WHERE P.player_name = 'Jordan Bowery' AND PA.date LIKE '2013-07-12%') AS T2\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE STRFTIME('%Y', 'now') - STRFTIME('%Y', birthday) >= 35\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(T1.home_team_goal) FROM Match AS T1 WHERE EXISTS (SELECT 1 FROM Player AS P WHERE P.player_name = 'Aaron Lennon' AND P.player_api_id IN (T1.home_player_1, T1.home_player_2, T1.home_player_3, T1.home_player_4, T1.home_player_5, T1.home_player_6, T1.home_player_7, T1.home_player_8, T1.home_player_9, T1.home_player_10, T1.home_player_11))\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(T1.away_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T2.player_api_id IN (T1.away_player_1, T1.away_player_2, T1.away_player_3, T1.away_player_4, T1.away_player_5, T1.away_player_6, T1.away_player_7, T1.away_player_8, T1.away_player_9, T1.away_player_10, T1.away_player_11) WHERE T2.player_name IN ('Daan Smith', 'Filipe Ferreira')\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(M.home_team_goal) FROM Match AS M INNER JOIN Player AS P ON (M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id) WHERE STRFTIME('%Y', M.date) - STRFTIME('%Y', P.birthday) <= 30\t----- bird -----\teuropean_football_2",
    "1122": "SELECT T1.player_name  FROM Player AS T1  INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1123": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE PA.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1124": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE PA.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.finishing = 1 ORDER BY T1.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Match AS M ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11, M.away_player_1, M.away_player_2, M.away_player_3, M.away_player_4, M.away_player_5, M.away_player_6, M.away_player_7, M.away_player_8, M.away_player_9, M.away_player_10, M.away_player_11)  INNER JOIN League AS L ON M.league_id = L.id  INNER JOIN Country AS C ON L.country_id = C.id  WHERE C.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT T5.name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id INNER JOIN Team AS T3 ON T2.player_fifa_api_id = T3.team_fifa_api_id INNER JOIN League AS T4 ON T3.team_api_id = T4.country_id INNER JOIN Country AS T5 ON T4.country_id = T5.id WHERE T1.vision >= 90\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name  FROM Country  INNER JOIN (SELECT Match.country_id, AVG(Player.weight) AS avg_weight              FROM Player              INNER JOIN Match ON Player.player_api_id = Match.home_player_1 OR Player.player_api_id = Match.away_player_1              GROUP BY Match.country_id) AS avg_weights  ON Country.id = avg_weights.country_id  WHERE avg_weights.avg_weight = (SELECT MAX(avg_weight)                                   FROM (SELECT AVG(Player.weight) AS avg_weight                                         FROM Player                                         INNER JOIN Match ON Player.player_api_id = Match.home_player_1 OR Player.player_api_id = Match.away_player_1                                         GROUP BY Match.country_id));\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(P.height) FROM Player AS P INNER JOIN Match AS M ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11, M.away_player_1, M.away_player_2, M.away_player_3, M.away_player_4, M.away_player_5, M.away_player_6, M.away_player_7, M.away_player_8, M.away_player_9, M.away_player_10, M.away_player_11) INNER JOIN League AS L ON M.league_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1132": "SELECT T1.player_name  FROM Player AS T1  INNER JOIN Player_Attributes AS T2  ON T1.player_api_id = T2.player_api_id  WHERE T1.height > 180  ORDER BY T2.overall_rating DESC, T1.player_name ASC  LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE birthday >= '2000-01-01 00:00:00' AND player_name LIKE 'Aaron %';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE id = 6)) - (SELECT jumping FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE id = 23)) AS score_difference\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (COUNT(DISTINCT player_api_id) * 100.0 / (SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes)) AS percentage FROM Player_Attributes WHERE strength > 80 AND stamina > 80\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT Match.home_team_goal, Match.away_team_goal FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.date = '2008-09-24' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge' AND T2.buildUpPlaySpeedClass IN ('Slow', 'Balanced', 'Fast')\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.season = '2015/2016' AND L.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(Match.home_team_goal) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Netherlands Eredivisie'\t----- bird -----\teuropean_football_2",
    "1144": "SELECT PA.finishing, PA.curve  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE P.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "1145": "SELECT Match.league_id, COUNT(Match.id) AS game_count FROM Match WHERE Match.season = '2015/2016' GROUP BY Match.league_id ORDER BY game_count DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1146": "WITH TotalGoals AS (     SELECT away_team_api_id, SUM(away_team_goal) AS total_goals     FROM Match     GROUP BY away_team_api_id ) SELECT T.team_long_name  FROM Team AS T  INNER JOIN TotalGoals AS TG ON T.team_api_id = TG.away_team_api_id  WHERE TG.total_goals = (SELECT MAX(total_goals) FROM TotalGoals);\t----- bird -----\teuropean_football_2",
    "1147": "SELECT T1.player_name  FROM Player AS T1  INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (SUM(CASE WHEN P.height < 180 AND PA.strength > 70 THEN 1 ELSE 0 END) * 100.0) / COUNT(DISTINCT P.player_api_id) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id\t----- bird -----\teuropean_football_2",
    "1149": "WITH counts AS (SELECT COUNT(ID) AS count_in, 0 AS count_out FROM Patient WHERE SEX = 'M' AND Admission = '+' UNION ALL SELECT 0 AS count_in, COUNT(ID) AS count_out FROM Patient WHERE SEX = 'M' AND Admission = '-') SELECT CASE WHEN SUM(count_in) > SUM(count_out) THEN 'In-patient' ELSE 'Outpatient' END AS Patient_Type, ABS(SUM(count_in) - SUM(count_out)) * 100.0 / NULLIF(SUM(count_in) + SUM(count_out), 0) AS Deviation_Percentage FROM counts;\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (COUNT(CASE WHEN SEX = 'F' AND SUBSTR(Birthday, 1, 4) > '1930' THEN ID END) * 100.0) / COUNT(CASE WHEN SUBSTR(Birthday, 1, 4) > '1930' THEN ID END) AS percentage FROM Patient WHERE SUBSTR(Birthday, 1, 4) > '1930';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT (COUNT(CASE WHEN Admission = '+' THEN 1 END) * 100.0 / COUNT(ID)) AS percentage FROM Patient WHERE EXTRACT(YEAR FROM Birthday) BETWEEN 1930 AND 1940\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END), 0) AS ratio FROM Patient WHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT P.Diagnosis, L.Date FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = '163109'\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT T1.ID, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday LIKE '1937%' AND T2.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(DISTINCT P.ID) * 100.0 / NULLIF(COUNT(DISTINCT P.ID), 0)) AS percentage  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE P.SEX = 'F' AND (L.TP <= 6.0 OR L.TP >= 8.5)\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(T1.\"aCL IgG\") FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Admission = '+' AND (julianday('now') - julianday(T2.Birthday)) / 365.25 >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND substr(\"First Date\", 1, 4) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(STRFTIME('%Y', `First Date`) - STRFTIME('%Y', `Birthday`)) FROM `Patient` WHERE `First Date` IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT P.ID) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.Thrombosis = 1 AND SUBSTR(E.`Examination Date`, 1, 4) = '1997' AND P.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT (strftime('%Y', MAX(P.Birthday)) - strftime('%Y', MIN(P.Birthday))) AS age_gap  FROM Laboratory AS L  INNER JOIN Patient AS P ON L.ID = P.ID  WHERE L.TG < 200\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT T1.Symptoms, T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = (SELECT MAX(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Examination))\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(monthly_count) FROM (SELECT COUNT(DISTINCT T2.ID) AS monthly_count FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.Date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY strftime('%m', T1.Date))\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT L.Date, (JULIANDAY(P.\"First Date\") - JULIANDAY(P.Birthday)) / 365.25 AS Age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday = (SELECT MIN(P2.Birthday) FROM Patient AS P2 WHERE P2.Diagnosis LIKE '%SJS%') AND (P.Diagnosis LIKE '%SJS%' OR EXISTS (SELECT 1 FROM Examination AS E WHERE E.ID = P.ID AND E.Diagnosis LIKE '%SjS%'))\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT      (COUNT(DISTINCT CASE WHEN P.SEX = 'M' AND L.UA <= 8.0 THEN P.ID END) * 1.0) /     NULLIF(COUNT(DISTINCT CASE WHEN P.SEX = 'F' AND L.UA <= 6.5 THEN P.ID END), 0) AS male_to_female_ratio FROM      Patient AS P  INNER JOIN      Laboratory AS L ON P.ID = L.ID\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P LEFT JOIN Examination AS E ON P.ID = E.ID WHERE P.`First Date` IS NOT NULL GROUP BY P.ID HAVING MIN(E.`Examination Date`) >= DATE_ADD(P.`First Date`, INTERVAL 1 YEAR) OR MIN(E.`Examination Date`) IS NULL\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE P.Birthday > '1975-12-31' AND E.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-BIL` >= 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - CAST(strftime('%Y', P.Birthday) AS INTEGER)) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.Date LIKE '1991-10%' AND P.ID IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT (STRFTIME('%Y', E.`Examination Date`) - STRFTIME('%Y', P.`Birthday`)) AS age, E.`Diagnosis` FROM Laboratory AS L INNER JOIN Examination AS E ON L.ID = E.ID INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.HGB = (SELECT MAX(HGB) FROM Laboratory WHERE ID IN (SELECT ID FROM Examination))\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN \"T-CHO\" < 250 THEN 'Normal' ELSE 'Abnormal' END AS Cholesterol_Status FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Aortitis' ORDER BY T2.`Examination Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T1.\"aCL IgG\", T1.\"aCL IgM\", T1.\"aCL IgA\" FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE '%SLE%' AND T1.\"Examination Date\" = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT (STRFTIME('%Y', L.Date) - STRFTIME('%Y', P.Birthday) - (CASE WHEN DATE(L.Date) < DATE(STRFTIME('%Y', L.Date) || '-' || STRFTIME('%m-%d', P.Birthday)) THEN 1 ELSE 0 END)) AS age FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.UA = 8.4 AND L.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(L.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.`First Date` = '1991-06-13' AND P.Diagnosis = 'SJS' AND L.Date BETWEEN '1995-01-01' AND '1995-12-31'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT `Diagnosis` FROM `Examination` WHERE `ID` = (SELECT `ID` FROM `Examination` WHERE `Diagnosis` LIKE '%SLE%' AND `Examination Date` = '1997-01-27') ORDER BY `Examination Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-03-01' AND T2.`Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((AVG(CASE WHEN L.Date LIKE '1981-12-%' THEN L.`T-CHO` END) - AVG(CASE WHEN L.Date LIKE '1981-11-%' THEN L.`T-CHO` END)) / AVG(CASE WHEN L.Date LIKE '1981-11-%' THEN L.`T-CHO` END)) * 100  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE P.Birthday = '1959-02-18' AND (L.Date LIKE '1981-11-%' OR L.Date LIKE '1981-12-%')\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Diagnosis = 'Behcet' AND E.`Examination Date` BETWEEN '1970-01-01' AND '1997-12-31'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT COUNT(DISTINCT T2.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T1.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T3.GPT > 30 AND T3.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'F' AND strftime('%Y', T1.Birthday) = '1964' AND T1.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Thrombosis = 2 AND E.\"ANA Pattern\" = 'S' AND E.\"aCL IgM\" > (1.2 * (SELECT AVG(E2.\"aCL IgM\") FROM Examination AS E2))\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (COUNT(DISTINCT CASE WHEN (L.UA < 8.0 AND P.SEX = 'M') OR (L.UA < 6.5 AND P.SEX = 'F') THEN L.ID END) * 100.0 / COUNT(DISTINCT L.ID)) AS percentage FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE CAST(L.`U-PRO` AS REAL) > 0 AND CAST(L.`U-PRO` AS REAL) < 30\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (COUNT(CASE WHEN T1.Diagnosis LIKE '%BEHCET%' THEN 1 END) * 100.0 / COUNT(CASE WHEN SUBSTR(T1.\"First Date\", 1, 4) = '1981' THEN 1 END)) AS percentage FROM Patient AS T1 WHERE T1.SEX = 'M' AND SUBSTR(T1.\"First Date\", 1, 4) = '1981'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(DISTINCT P.ID)  FROM Patient AS P  INNER JOIN Examination AS E ON P.ID = E.ID  WHERE E.`ANA Pattern` != 'P'  AND P.SEX = 'F'  AND P.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT P.SEX FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Diagnosis LIKE '%PSS%' AND L.CRP = '2+' AND L.CRE = 1.0 AND L.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.PLT > 400 AND T2.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT E.Symptoms FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE P.Diagnosis = 'SLE' GROUP BY E.Symptoms ORDER BY COUNT(E.Symptoms) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Description, Diagnosis FROM Patient WHERE ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'F' AND T1.Diagnosis LIKE '%APS%'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE Date LIKE '1997%' AND (TP <= 6.0 OR TP >= 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT COUNT(DISTINCT P.ID) * 1.0 / NULLIF((SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.PLT < 100), 0) AS proportion  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  INNER JOIN Examination AS E ON P.ID = E.ID  WHERE L.PLT < 100 AND (P.Diagnosis LIKE '%SLE%' OR E.Diagnosis LIKE '%SLE%')\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (COUNT(CASE WHEN Patient.SEX = 'F' THEN 1 END) * 100.0 / COUNT(*)) FROM Patient WHERE SUBSTR(Patient.Birthday, 1, 4) = '1980' AND Patient.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND T2.Diagnosis LIKE '%Behcet%' AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT julianday(`Examination`.`Examination Date`) - julianday(`Patient`.`First Date`) AS Duration FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`ID` = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN ( (P.SEX = 'M' AND L.UA > 8.0) OR (P.SEX = 'F' AND L.UA > 6.5) ) THEN 'Yes' ELSE 'No' END AS result FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = 48473 AND GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T2.Date BETWEEN '1994-01-01' AND '1994-12-31'\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GPT > 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 60 ORDER BY T1.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT P.ID, STRFTIME('%Y', L.Date) - STRFTIME('%Y', P.Birthday) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.Admission, COUNT(*) AS PatientCount  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.ALP < 300  GROUP BY Patient.Admission\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday = '1982-04-01' AND L.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT CASE WHEN T1.TP < 6.0 THEN 6.0 - T1.TP ELSE T1.TP - 8.5 END FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND (T1.TP < 6.0 OR T1.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT T1.* FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.ALB <= 3.5 OR T2.ALB >= 5.5) ORDER BY T1.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT P.ID, CASE WHEN L.ALB BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Outside Normal Range' END AS Albumin_Status FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) = '1982'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(DISTINCT CASE WHEN L.UA > 6.5 THEN P.ID END) * 100.0 / COUNT(DISTINCT P.ID)) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA)  FROM Laboratory AS L  INNER JOIN Patient AS P ON L.ID = P.ID  WHERE ((L.UA > 8.0 AND P.SEX = 'M') OR (L.UA > 6.5 AND P.SEX = 'F'))  AND L.Date = (SELECT MAX(Date) FROM Laboratory WHERE ID = P.ID);\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE LOWER(T2.Diagnosis) LIKE '%ra%' AND T3.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN COUNT(DISTINCT CASE WHEN P.SEX = 'M' AND L.CRE >= 1.5 THEN P.ID END) > COUNT(DISTINCT CASE WHEN P.SEX = 'F' AND L.CRE >= 1.5 THEN P.ID END) THEN 'True' ELSE 'False' END AS Result FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"T-BIL\" = (SELECT MAX(\"T-BIL\") FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.\"T-BIL\" >= 2.0 GROUP BY Patient.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "WITH MaxTCHO AS (SELECT MAX(`T-CHO`) AS MaxValue FROM `Laboratory`), OldestPatient AS (SELECT `Patient`.`ID`, `Laboratory`.`T-CHO`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-CHO` = (SELECT MaxValue FROM MaxTCHO)) SELECT `ID`, `T-CHO` FROM OldestPatient WHERE `Birthday` = (SELECT MIN(`Birthday`) FROM OldestPatient)\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(CURRENT_DATE - T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT DISTINCT P.ID, P.Diagnosis  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG >= 200 AND STRFTIME('%Y', T1.Date) - STRFTIME('%Y', T2.Birthday) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) BETWEEN '1936' AND '1956' AND P.SEX = 'M' AND L.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT Patient.ID, Patient.SEX, CAST((JULIANDAY(Laboratory.Date) - JULIANDAY(Patient.Birthday)) / 365.25 AS INTEGER) AS Age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT T1.ID, T2.GLU FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU < 180 AND T1.Description BETWEEN '1991-01-01' AND '1991-12-31'\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC < 3.5 OR T2.WBC > 9.0 GROUP BY T1.SEX ORDER BY T1.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT P.ID, P.Diagnosis, (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) AS age  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.RBC < 3.5 AND P.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday) >= 50) AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%SLE%' AND T2.HGB BETWEEN 10 AND 17 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT P.ID, strftime('%Y', 'now') - strftime('%Y', P.Birthday) AS age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.HCT > 52 GROUP BY P.ID HAVING COUNT(L.HCT > 52) >= 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE HCT < 29 AND Date BETWEEN '1991-01-01' AND '1991-12-31'\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT      COUNT(DISTINCT CASE WHEN PLT <= 100 THEN ID END) AS lower_count,     COUNT(DISTINCT CASE WHEN PLT >= 400 THEN ID END) AS higher_count FROM      Laboratory  WHERE      PLT < 100 OR PLT > 400;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT DISTINCT T2.ID, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date LIKE '1984%' AND STRFTIME('%Y', T2.Birthday) < '1935' AND T1.PLT > 100 AND T1.PLT < 400\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (COUNT(CASE WHEN P.SEX = 'F' AND L.PT >= 14 AND (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) > 55 THEN P.ID END) * 100.0 /          COUNT(CASE WHEN (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) > 55 AND L.PT >= 14 THEN P.ID END)) AS percentage  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` > '1992-12-31' AND T2.PT < 14 AND T2.PT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.`Examination Date` > '1997-01-01' AND L.APTT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.APTT >= 45 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND EXISTS (SELECT 1 FROM Laboratory WHERE Laboratory.ID = Patient.ID AND Laboratory.WBC BETWEEN 3.5 AND 9.0) AND EXISTS (SELECT 1 FROM Laboratory WHERE Laboratory.ID = Patient.ID AND (Laboratory.FG < 150 OR Laboratory.FG > 450))\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday > '1980-01-01' AND (L.FG < 150 OR L.FG > 450)\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT P.Diagnosis FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.\"U-PRO\" > 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID LEFT JOIN Examination AS E ON P.ID = E.ID WHERE (L.\"U-PRO\" = 'TR' OR (L.\"U-PRO\" IS NOT NULL AND CAST(L.\"U-PRO\" AS REAL) > 0 AND CAST(L.\"U-PRO\" AS REAL) < 30)) AND (P.Diagnosis LIKE '%SLE%' OR E.Diagnosis LIKE '%SLE%')\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG > 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGG > 900 AND T1.IGG < 2000 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T2.Diagnosis FROM Patient AS T2 WHERE T2.ID = (SELECT T1.ID FROM Laboratory AS T1 WHERE T1.IGA = (SELECT MAX(T3.IGA) FROM Laboratory AS T3 WHERE T3.IGA > 80 AND T3.IGA < 500))\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGA > 80 AND L.IGA < 500 AND P.`First Date` > '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT P.Diagnosis, COUNT(P.Diagnosis) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGM <= 40 OR L.IGM >= 400 GROUP BY P.Diagnosis ORDER BY COUNT(P.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Laboratory WHERE CAST(CRP AS FLOAT) >= 1.0 AND ID NOT IN (SELECT ID FROM Patient);\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 70\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON L.ID = P.ID INNER JOIN Examination AS E ON E.ID = P.ID WHERE L.RA IN ('-', '+-') AND (E.KCT = '+' OR E.RVVT = '+' OR E.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT P.Diagnosis  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE P.Birthday > '1985-01-01' AND L.RA = '-'\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT DISTINCT P.ID  FROM Laboratory AS L  INNER JOIN Patient AS P ON L.ID = P.ID  WHERE L.RA IN ('-', '+-')  AND (STRFTIME('%Y', L.Date) - STRFTIME('%Y', P.Birthday)) >= 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE (L.RF LIKE '<%' AND CAST(SUBSTRING(L.RF, 2) AS DECIMAL) < 20) OR (CAST(L.RF AS DECIMAL) < 20) AND E.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.C3 > 35 AND T2.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.HCT <= 29 OR L.HCT >= 52 ORDER BY (E.\"aCL IgG\" + E.\"aCL IgM\" + E.\"aCL IgA\") DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.Thrombosis IN (1, 2, 3) AND L.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.RNP = '0' AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT MAX(P.Birthday) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RNP = '1'\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Examination WHERE \"anti-SM\" = '0' AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM = '1' ORDER BY T1.Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.`Examination Date` > '1997-01-01' AND L.SC170 = 'negative'\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.SC170 = 'negative' AND T1.SEX = 'F' AND T3.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA = '0' AND SUBSTR(T1.`First Date`, 1, 4) < '2000'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T2.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SSA NOT IN ('-', '+-') AND T1.SSA IS NOT NULL ORDER BY T2.\"First Date\" ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SSB IN ('N', '-') AND E.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT P.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.SSB IN ('-', '+-') AND E.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-') AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE CAST(T2.DNA AS FLOAT) > 8 UNION SELECT DISTINCT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE CAST(T2.DNA AS FLOAT) > 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE (CAST(L.DNA AS REAL) < 8 OR L.DNA IS NULL)\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGG > 900 AND L.IGG < 2000 AND P.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT COUNT(DISTINCT CASE WHEN T2.GOT >= 60 AND T1.Diagnosis LIKE '%SLE%' THEN T1.ID END) * 100.0 / COUNT(DISTINCT T1.ID) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(P.Birthday) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT < 60 ORDER BY Laboratory.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT Patient.Description FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH = (SELECT MAX(LDH) FROM Laboratory WHERE LDH < 500)\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Laboratory.Date) FROM Laboratory WHERE Laboratory.LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALP >= 300 AND P.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '-' AND L.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%SJS%' AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT T1.`Examination Date` FROM `Examination` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.ID = T2.ID WHERE T2.ALB BETWEEN 3.5 AND 5.5 AND T2.ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB BETWEEN 3.5 AND 5.5)\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT E.\"aCL IgG\", E.\"aCL IgM\", E.\"aCL IgA\" FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.UA = (SELECT MAX(UA) FROM Laboratory WHERE UA > 6.5)\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(T1.ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN ( SELECT ID, MAX(CASE WHEN `aCL IgG` >= `aCL IgM` AND `aCL IgG` >= `aCL IgA` THEN `aCL IgG` WHEN `aCL IgM` >= `aCL IgG` AND `aCL IgM` >= `aCL IgA` THEN `aCL IgM` ELSE `aCL IgA` END) AS max_acla FROM Examination GROUP BY ID ) AS T3 ON T1.ID = T3.ID WHERE T2.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.`T-BIL` >= 2.0 AND E.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT Examination.ANA FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.`T-BIL` = (SELECT MAX(Laboratory.`T-BIL`) FROM Laboratory WHERE Laboratory.`T-BIL` < 2.0)\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.`T-CHO` >= 250 AND (E.KCT = '-' OR E.RVVT = '-' OR E.LAC = '-')\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` < 250 AND T2.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.TG < 200 AND Laboratory.TG IS NOT NULL AND Examination.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG = (SELECT MAX(TG) FROM Laboratory WHERE TG < 200)\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Thrombosis = 0 AND L.CPK >= 250 AND L.CPK IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.CPK < 250 AND (E.KCT = '+' OR E.RVVT = '+' OR E.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(P.Birthday) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GLU >= 180\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT T1.ID)  FROM Laboratory AS T1  INNER JOIN Patient AS T2 ON T1.ID = T2.ID  INNER JOIN Examination AS T3 ON T2.ID = T3.ID  WHERE T1.GLU < 180 AND T3.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC > 3.5 AND T2.WBC < 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC > 3.5 AND T2.WBC < 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.PLT > 100 AND L.PLT < 400 AND E.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.PLT FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Diagnosis LIKE '%MCTD%'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(T1.PT) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.PT < 14 AND T1.PT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT T3.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Patient AS T3 ON T1.ID = T3.ID WHERE T1.Thrombosis = 2 AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name || ' ' || T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design Department'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT T1.phone FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE M.t_shirt_size = 'Medium' AND E.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1318": "SELECT T1.event_name  FROM event AS T1  INNER JOIN (SELECT link_to_event, COUNT(link_to_member) AS attendee_count              FROM attendance              GROUP BY link_to_event              ORDER BY COUNT(link_to_member) DESC              LIMIT 1) AS T2  ON T1.event_id = T2.link_to_event\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.first_name = 'Sacha' AND T3.last_name = 'Harrison' AND T2.event_date BETWEEN '2019-01-01' AND '2019-12-31'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM (SELECT attendance.link_to_event FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id GROUP BY attendance.link_to_event HAVING COUNT(attendance.link_to_member) > 10) AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting'\t----- bird -----\tstudent_club",
    "1323": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20 AND T1.type != 'Fundraiser'\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM (SELECT COUNT(T1.link_to_member) AS attendance_count FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_date LIKE '2020%' AND T2.type = 'Meeting' GROUP BY T2.event_id)\t----- bird -----\tstudent_club",
    "1325": "SELECT expense.expense_description FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.cost = (SELECT MAX(cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id)\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT DISTINCT T1.first_name || ' ' || T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT zip_code.county FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sherri' AND member.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(T2.amount) FROM income AS T2 INNER JOIN member AS T1 ON T2.link_to_member = T1.member_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(T4.cost) FROM expense AS T4 INNER JOIN budget AS T3 ON T4.link_to_budget = T3.budget_id INNER JOIN event AS T2 ON T3.link_to_event = T2.event_id WHERE T3.category = 'Food' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(e.cost)  FROM expense AS e  INNER JOIN budget AS b ON e.link_to_budget = b.budget_id  INNER JOIN event AS ev ON b.link_to_event = ev.event_id  WHERE b.category = 'Advertisement' AND ev.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT DISTINCT M.department FROM major AS M INNER JOIN member AS P ON M.major_id = P.link_to_major WHERE P.last_name IN ('Pierce', 'Guidi')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Speaker'\t----- bird -----\tstudent_club",
    "1338": "SELECT COUNT(*) = (SELECT COUNT(*) FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_budget = T2.event_id WHERE T2.event_name = 'October Meeting' AND T2.event_date LIKE '2019-10-08%') FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_budget = T2.event_id WHERE T2.event_name = 'October Meeting' AND T2.event_date LIKE '2019-10-08%' AND T1.approved = 'true'\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN attendance AS T3 ON T2.link_to_event = T3.link_to_event INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id INNER JOIN member AS T5 ON T3.link_to_member = T5.member_id WHERE T5.first_name = 'Elijah' AND T5.last_name = 'Allen' AND STRFTIME('%m', T4.event_date) IN ('09', '10')\t----- bird -----\tstudent_club",
    "1340": "SELECT      SUM(b.spent) FILTER (WHERE SUBSTR(e.event_date, 1, 4) = '2019') -      SUM(b.spent) FILTER (WHERE SUBSTR(e.event_date, 1, 4) = '2020') AS spending_difference FROM      budget AS b  INNER JOIN      event AS e ON b.link_to_event = e.event_id\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description LIKE '%Posters%' AND expense_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food')\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O''Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT T2.status FROM expense AS T1 INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T2 ON T3.link_to_event = T2.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT T2.first_name || ' ' || T2.last_name AS full_name  FROM income AS T1  INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id  WHERE T1.source = 'Dues'  AND T1.date_received = (SELECT MIN(date_received) FROM income WHERE source = 'Dues')\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*)  FROM (SELECT B1.amount AS kickoff_amount, B2.amount AS october_amount        FROM budget AS B1        INNER JOIN event AS E1 ON B1.link_to_event = E1.event_id        INNER JOIN budget AS B2        INNER JOIN event AS E2 ON B2.link_to_event = E2.event_id        WHERE B1.category = 'Advertisement' AND E1.event_name = 'Yearly Kickoff'        AND B2.category = 'Advertisement' AND E2.event_name = 'October Meeting') AS budgets  WHERE kickoff_amount > october_amount;\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(CASE WHEN B.category = 'Parking' THEN B.amount ELSE 0 END) * 100.0 / SUM(B.amount)) AS parking_percentage  FROM budget AS B  INNER JOIN event AS E ON B.link_to_event = E.event_id  WHERE E.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T2.expense_description, T2.cost FROM expense AS T2 INNER JOIN budget AS T1 ON T1.budget_id = T2.link_to_budget WHERE T1.remaining = (SELECT MIN(remaining) FROM budget)\t----- bird -----\tstudent_club",
    "1366": "SELECT DISTINCT M.first_name, M.last_name, M.email  FROM event AS E  INNER JOIN attendance AS A ON E.event_id = A.link_to_event  INNER JOIN member AS M ON A.link_to_member = M.member_id  WHERE E.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id GROUP BY T2.college ORDER BY COUNT(T1.link_to_major) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.amount = (SELECT MAX(amount) FROM budget)\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.* FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member AS M INNER JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE Z.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240'\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.* FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_id, T1.event_name, SUM(T2.spent) / SUM(T2.amount) AS spend_to_budget_ratio  FROM event AS T1  INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event  WHERE T1.status = 'Closed'  GROUP BY T1.event_id, T1.event_name  ORDER BY spend_to_budget_ratio DESC  LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND event_date LIKE '2020%'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) AS student_name  FROM member AS T1  INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member  GROUP BY T1.member_id  HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT DISTINCT T1.first_name || ' ' || T1.last_name AS full_name  FROM member AS T1  INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member  INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id  INNER JOIN major AS T4 ON T1.link_to_major = T4.major_id  WHERE T4.major_name = 'Interior Design' AND T3.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Grant' AND T2.last_name = 'Gilmour'\t----- bird -----\tstudent_club",
    "1385": "SELECT T1.member_id, T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40 AND T1.link_to_major IS NOT NULL\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1387": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.position = 'Treasurer' AND T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT T2.first_name, T2.last_name, T1.source FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount = (SELECT MAX(amount) FROM income WHERE amount IS NOT NULL)\t----- bird -----\tstudent_club",
    "1389": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.cost = (SELECT MIN(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(CASE WHEN T3.event_name = 'Yearly Kickoff' THEN T1.cost ELSE 0 END) / SUM(T1.cost)) * 100 AS percentage FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id\t----- bird -----\tstudent_club",
    "1391": "WITH FinanceCount AS (SELECT COUNT(M1.member_id) AS count FROM member AS M1 INNER JOIN major AS MA1 ON M1.link_to_major = MA1.major_id WHERE MA1.major_name = 'Finance'),      PhysicsCount AS (SELECT COUNT(M2.member_id) AS count FROM member AS M2 INNER JOIN major AS MA2 ON M2.link_to_major = MA2.major_id WHERE MA2.major_name = 'Physics') SELECT (SELECT count FROM FinanceCount) * 1.0 / (SELECT count FROM PhysicsCount) AS ratio;\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE date_received LIKE '2019-09%' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T1.email FROM member AS T1 WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND T2.event_date LIKE '2019-%'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T2.link_to_event), T3.major_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.first_name = 'Luisa' AND T1.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T2.status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.spent = (SELECT MAX(spent) FROM budget WHERE category = 'Advertisement')\t----- bird -----\tstudent_club",
    "1399": "SELECT EXISTS (SELECT 1 FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer') AS did_attend;\t----- bird -----\tstudent_club",
    "1400": "SELECT (COUNT(CASE WHEN event.type = 'Community Service' THEN 1 END) * 100.0 / COUNT(event.event_id)) AS percentage FROM event WHERE SUBSTR(event.event_date, 1, 4) = '2019'\t----- bird -----\tstudent_club",
    "1401": "SELECT SUM(T2.cost) FROM expense AS T2 INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id INNER JOIN event AS T1 ON T3.link_to_event = T1.event_id WHERE T1.event_name = 'September Speaker' AND T2.expense_description LIKE '%Posters%'\t----- bird -----\tstudent_club",
    "1402": "SELECT T1.t_shirt_size FROM member AS T1 GROUP BY T1.t_shirt_size ORDER BY COUNT(T1.t_shirt_size) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT T1.expense_description, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T1.approved = 'true' GROUP BY T1.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT T2.category, T2.amount FROM budget AS T2 INNER JOIN event AS T1 ON T2.link_to_event = T1.event_id WHERE T1.event_name = 'April Speaker' ORDER BY T2.amount ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(amount) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.category = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.link_to_member = 'rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name\t----- bird -----\tstudent_club",
    "1411": "SELECT T2.expense_description FROM expense AS T2 INNER JOIN member AS T1 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT DISTINCT T2.expense_description FROM expense AS T2 INNER JOIN member AS T1 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT T2.zip FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'School of Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member AS M INNER JOIN major AS J ON M.link_to_major = J.major_id WHERE J.college = 'School of Business' AND M.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT type FROM event WHERE event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (COUNT(CASE WHEN T2.major_name = 'Business' THEN 1 END) * 100.0 / COUNT(T1.member_id)) AS percentage FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(income_id) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major.major_id) FROM major WHERE major.college = 'College of Agriculture and Applied Sciences' AND major.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT DISTINCT B.category  FROM event AS E  INNER JOIN budget AS B ON E.event_id = B.link_to_event  WHERE E.location = 'MU 215' AND E.type = 'Guest Speaker' AND B.spent = 0.0\t----- bird -----\tstudent_club",
    "1428": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T1.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT DISTINCT M.last_name  FROM member AS M  INNER JOIN attendance AS A ON M.member_id = A.link_to_member  INNER JOIN event AS E ON A.link_to_event = E.event_id  WHERE E.notes = 'Attend Women''s soccer game as a group.'\t----- bird -----\tstudent_club",
    "1432": "SELECT (COUNT(T1.amount) * 100.0 / COUNT(T1.amount)) AS percentage  FROM income AS T1  INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id  WHERE T2.t_shirt_size = 'Medium' AND T1.source = 'Student_Club'\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE status = 'Closed' AND type = 'Game' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.link_to_event FROM attendance AS T1 INNER JOIN income AS T2 ON T1.link_to_member = T2.link_to_member WHERE T2.amount > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T2.first_name, T2.last_name, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE T1.approved = 'true' AND T1.expense_date BETWEEN '2019-10-01' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT T3.college FROM member AS T1 INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT DISTINCT M.email  FROM expense AS E  INNER JOIN member AS M ON E.link_to_member = M.member_id  WHERE E.cost > 20.0 AND E.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT (COUNT(DISTINCT CASE WHEN T2.remaining < 0 THEN T1.event_id END) * 100.0) / COUNT(DISTINCT T1.event_id) AS percentage FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT * FROM expense WHERE cost > 50.0;\t----- bird -----\tstudent_club",
    "1445": "SELECT T1.first_name || ' ' || T1.last_name FROM member AS T1 WHERE T1.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT (COUNT(*) FILTER (WHERE type = 'PO Box') * 100.0 / COUNT(*)) AS percentage FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent < T2.amount\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T2.expense_description = 'Pizza' AND T2.cost > 50 AND T2.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT DISTINCT T1.first_name, T1.last_name, T3.major_name  FROM member AS T1  INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member  INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id  WHERE T2.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT T3.city, T3.state FROM event AS T1 INNER JOIN income AS T2 ON T1.event_id = T2.link_to_event INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.event_id IN (SELECT T2.link_to_event FROM income AS T2 GROUP BY T2.link_to_event HAVING COUNT(T2.link_to_member) > 40)\t----- bird -----\tstudent_club",
    "1451": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) AS member_name, SUM(T3.cost) AS total_expense FROM member AS T1 INNER JOIN expense AS T3 ON T1.member_id = T3.link_to_member INNER JOIN budget AS T2 ON T3.link_to_budget = T2.budget_id GROUP BY T1.member_id HAVING COUNT(DISTINCT T2.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.spent < (SELECT AVG(budget.spent) FROM budget WHERE budget.category = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(CASE WHEN T3.type = 'Meeting' THEN T1.cost ELSE 0 END) / SUM(T1.cost)) * 100 AS meeting_percentage  FROM expense AS T1  INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id  INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id;\t----- bird -----\tstudent_club",
    "1455": "SELECT MAX(T1.amount) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description LIKE '%Water%' OR T2.expense_description LIKE '%chips%' OR T2.expense_description LIKE '%Cookies%'\t----- bird -----\tstudent_club",
    "1456": "SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_spending FROM expense INNER JOIN member ON expense.link_to_member = member.member_id GROUP BY member.member_id ORDER BY total_spending DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id, T1.first_name, T1.last_name, T1.phone HAVING MIN(T2.cost) > (SELECT AVG(T3.cost) FROM expense AS T3)\t----- bird -----\tstudent_club",
    "1458": "SELECT      ((SUM(CASE WHEN T2.state = 'New Jersey' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.member_id)) * 100.0) -      ((SUM(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.member_id)) * 100.0) AS percentage_difference  FROM member AS T1  INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code;\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT CONCAT(T2.first_name, ' ', T2.last_name), T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description LIKE '%water%' AND T1.expense_description LIKE '%veggie tray%' AND T1.expense_description LIKE '%supplies%'\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "1465": "SELECT T2.category FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT CONCAT(T1.first_name, ' ', T1.last_name), T3.college FROM member AS T1 INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(T1.cost) AS total_spent, T3.event_name FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T2.category = 'Speaker Gifts' GROUP BY T3.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1469": "SELECT M.first_name || ' ' || M.last_name AS full_name, M.position FROM member AS M INNER JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE Z.city = 'Lincolnton' AND Z.state = 'North Carolina' AND M.zip = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT CAST(COUNT(CASE WHEN Currency = 'EUR' THEN CustomerID END) AS REAL) / NULLIF(COUNT(CASE WHEN Currency = 'CZK' THEN CustomerID END), 0) AS ratio FROM customers\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Date LIKE '2012%' AND T2.Consumption = (SELECT MIN(T3.Consumption) FROM yearmonth AS T3 INNER JOIN customers AS T4 ON T3.CustomerID = T4.CustomerID WHERE T4.Segment = 'LAM' AND T3.Date LIKE '2012%')\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date LIKE '2013%'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT customers.CustomerID, SUM(yearmonth.Consumption) AS TotalConsumption FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK' AND yearmonth.Date LIKE '2011%' GROUP BY customers.CustomerID ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT C.CustomerID) FROM customers AS C INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE C.Segment = 'KAM' AND Y.Consumption < 30000 AND Y.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT (SUM(CASE WHEN customers.Currency = 'CZK' THEN yearmonth.Consumption ELSE 0 END) - SUM(CASE WHEN customers.Currency = 'EUR' THEN yearmonth.Consumption ELSE 0 END)) AS ConsumptionDifference FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT SUBSTR(T1.Date, 1, 4) AS Year, SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment HAVING SUM(T2.Consumption) = (SELECT MIN(T3.total_consumption) FROM (SELECT SUM(T2.Consumption) AS total_consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment) AS T3)\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(Y.Date, 1, 4) AS year, SUM(Y.Consumption) AS total_consumption FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE C.Currency = 'CZK' GROUP BY SUBSTR(Y.Date, 1, 4) ORDER BY SUM(Y.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT T1.Date FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date LIKE '2013%' ORDER BY T1.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT      (SELECT AVG(Y1.Consumption) FROM yearmonth Y1 INNER JOIN customers C1 ON Y1.CustomerID = C1.CustomerID WHERE C1.Currency = 'CZK' AND C1.Segment = 'SME' AND Y1.Date LIKE '2013%') -     (SELECT AVG(Y2.Consumption) FROM yearmonth Y2 INNER JOIN customers C2 ON Y2.CustomerID = C2.CustomerID WHERE C2.Currency = 'CZK' AND C2.Segment = 'LAM' AND Y2.Date LIKE '2013%') AS SME_LAM,          (SELECT AVG(Y3.Consumption) FROM yearmonth Y3 INNER JOIN customers C3 ON Y3.CustomerID = C3.CustomerID WHERE C3.Currency = 'CZK' AND C3.Segment = 'LAM' AND Y3.Date LIKE '2013%') -     (SELECT AVG(Y4.Consumption) FROM yearmonth Y4 INNER JOIN customers C4 ON Y4.CustomerID = C4.CustomerID WHERE C4.Currency = 'CZK' AND C4.Segment = 'KAM' AND Y4.Date LIKE '2013%') AS LAM_KAM,          (SELECT AVG(Y5.Consumption) FROM yearmonth Y5 INNER JOIN customers C5 ON Y5.CustomerID = C5.CustomerID WHERE C5.Currency = 'CZK' AND C5.Segment = 'KAM' AND Y5.Date LIKE '2013%') -     (SELECT AVG(Y6.Consumption) FROM yearmonth Y6 INNER JOIN customers C6 ON Y6.CustomerID = C6.CustomerID WHERE C6.Currency = 'CZK' AND C6.Segment = 'SME' AND Y6.Date LIKE '2013%') AS KAM_SME\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT C.Segment,         ((SUM(CASE WHEN YM.Date LIKE '2013%' THEN YM.Consumption ELSE 0 END) -           SUM(CASE WHEN YM.Date LIKE '2012%' THEN YM.Consumption ELSE 0 END)) /          SUM(CASE WHEN YM.Date LIKE '2012%' THEN YM.Consumption ELSE 0 END)) * 100 AS PercentageIncrease FROM yearmonth AS YM INNER JOIN customers AS C ON YM.CustomerID = C.CustomerID WHERE C.Currency = 'EUR' AND C.Segment IN ('SME', 'LAM', 'KAM') GROUP BY C.Segment\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (COUNT(CASE WHEN Country = 'CZE' AND Segment = 'Discount' THEN GasStationID END) - COUNT(CASE WHEN Country = 'SVK' AND Segment = 'Discount' THEN GasStationID END)) AS Difference FROM gasstations;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT      (SUM(CASE WHEN CustomerID = 7 THEN Consumption ELSE 0 END) -      SUM(CASE WHEN CustomerID = 5 THEN Consumption ELSE 0 END)) AS ConsumptionDifference FROM yearmonth WHERE Date = '201304' AND CustomerID IN (7, 5);\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT (COUNT(CASE WHEN T2.Currency = 'CZK' THEN T1.CustomerID END) - COUNT(CASE WHEN T2.Currency = 'EUR' THEN T1.CustomerID END)) AS Difference  FROM transactions_1k AS T1  INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID  WHERE T2.Segment = 'SME' AND T2.Currency IN ('CZK', 'EUR');\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T2.Currency = 'EUR' AND T1.Date = '201310' ORDER BY T1.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, MAX(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' GROUP BY T1.CustomerID ORDER BY MAX(T2.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(T3.Consumption) FROM yearmonth AS T3 INNER JOIN customers AS T2 ON T3.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND T3.Date = '201305'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (COUNT(DISTINCT CASE WHEN Y.Consumption > 46.73 THEN C.CustomerID END) * 100.0 / COUNT(DISTINCT C.CustomerID)) AS percentage  FROM customers AS C  INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID  WHERE C.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM customers WHERE Segment = 'KAM'\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (COUNT(DISTINCT CASE WHEN Consumption > 528.3 THEN CustomerID END) * 100.0 / COUNT(DISTINCT CustomerID)) AS percentage FROM yearmonth WHERE Date = '201202'\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM gasstations WHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "WITH consumption_totals AS (SELECT customers.Segment, SUM(yearmonth.Consumption) AS total_consumption FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201309' GROUP BY customers.Segment) SELECT Segment FROM consumption_totals WHERE total_consumption = (SELECT MIN(total_consumption) FROM consumption_totals);\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date = '201206' ORDER BY T1.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Date BETWEEN '2013-09-01' AND '2013-09-30'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date BETWEEN '2013-06-01' AND '2013-06-30'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT T3.ChainID FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Amount * Price) FROM transactions_1k WHERE Date LIKE '201201%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT P.Description  FROM transactions_1k AS T  INNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID  INNER JOIN products AS P ON T.ProductID = P.ProductID  WHERE G.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Price > 1000\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(T1.Amount * T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(T1.Amount * T1.Price) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID, SUM(Amount * Price) AS TotalPaid FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY TotalPaid DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T1.Country  FROM gasstations AS T1  INNER JOIN (SELECT GasStationID, MIN(Time) AS FirstPaidTime              FROM transactions_1k              WHERE Date = '2012-08-25'              GROUP BY GasStationID) AS T2  ON T1.GasStationID = T2.GasStationID  WHERE T2.FirstPaidTime = (SELECT MIN(Time)                            FROM transactions_1k                            WHERE Date = '2012-08-25');\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT customers.Currency FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T2.Segment FROM customers AS T2 INNER JOIN transactions_1k AS T1 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date = '2012-08-26' AND T1.Time < '12:00:00'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT T2.Segment FROM customers AS T2 INNER JOIN (SELECT CustomerID FROM transactions_1k ORDER BY Date ASC LIMIT 1) AS T1 ON T1.CustomerID = T2.CustomerID\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT T2.Consumption, T2.Date FROM yearmonth AS T2 WHERE T2.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-24' AND Amount * Price = 124.05) AND T2.Date = '201201'\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time >= '08:00:00' AND T1.Time < '09:00:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT C.Currency FROM customers AS C INNER JOIN (SELECT CustomerID, SUM(Amount * Price) AS TotalSpent FROM transactions_1k WHERE Date BETWEEN '2013-06-01' AND '2013-06-30' GROUP BY CustomerID HAVING TotalSpent = 214582.17) AS T ON C.CustomerID = T.CustomerID\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = '667467'\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T3.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T1.Amount * T1.Price BETWEEN 548.39 AND 548.41 AND T1.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (COUNT(DISTINCT T1.CustomerID) * 100.0 / COUNT(DISTINCT T2.CustomerID)) AS percentage  FROM customers AS T1  LEFT JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID AND T2.Date = '2012-08-25'  WHERE T1.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((SUM(CASE WHEN T2.Date LIKE '2012%' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '2013%' THEN T2.Consumption ELSE 0 END)) / SUM(CASE WHEN T2.Date LIKE '2012%' THEN T2.Consumption END)) * 100  FROM transactions_1k AS T1  INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID  WHERE T1.Price * T1.Amount = 634.8 AND T1.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT T2.GasStationID, SUM(T1.Amount * T1.Price) AS Revenue FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID GROUP BY T2.GasStationID ORDER BY Revenue DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (COUNT(GasStationID) * 100.0 / (SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'SVK')) AS percentage FROM gasstations WHERE Segment = 'Premium' AND Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Amount * Price) AS total_spent, SUM(CASE WHEN Date BETWEEN '2012-01-01' AND '2012-01-31' THEN Amount * Price ELSE 0 END) AS january_spent FROM transactions_1k WHERE CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.ProductID ORDER BY SUM(T1.Amount) DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, SUM(T2.Amount * T2.Price) / NULLIF(SUM(T2.Amount), 0) AS AveragePrice, T3.Currency FROM transactions_1k AS T2 INNER JOIN (SELECT CustomerID, SUM(Amount * Price) AS TotalSpending FROM transactions_1k GROUP BY CustomerID) AS T1 ON T1.CustomerID = T2.CustomerID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID GROUP BY T1.CustomerID ORDER BY TotalSpending DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT G.Country  FROM gasstations AS G  INNER JOIN transactions_1k AS T ON G.GasStationID = T.GasStationID  WHERE T.Price = (SELECT MAX(Price) FROM transactions_1k WHERE ProductID = 2)  AND T.ProductID = 2\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T1.Consumption FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Price > 29.00 AND T2.ProductID = 5 AND T1.Date = '201208'\t----- bird -----\tdebit_card_specializing"
}