{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM `frpm` WHERE `County Name` = 'Alameda'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT T1.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`School Type` = 'Continuation High Schools' ORDER BY T1.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT Zip FROM schools WHERE Charter = 1 AND County = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet FROM schools WHERE CDSCode = (SELECT CDSCode FROM frpm ORDER BY `FRPM Count (K-12)` DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE FundingType = 'Directly funded' AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath > 400 AND T1.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 500 AND T2.Magnet = 1\t----- bird -----\tcalifornia_schools",
    "7": "SELECT schools.Phone FROM schools INNER JOIN satscores ON satscores.cds = schools.CDSCode WHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores WHERE NumGE1500 >= 1500)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT s.NumTstTakr FROM satscores AS s INNER JOIN frpm AS f ON s.cds = f.CDSCode WHERE f.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath > 560 AND T1.FundingType = 'Directly funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT f.`FRPM Count (Ages 5-17)` FROM frpm AS f INNER JOIN satscores AS s ON f.`School Code` = s.cds WHERE s.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "11": "SELECT T1.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(frpm.`Percent (%) Eligible Free (Ages 5-17)`)  FROM satscores  INNER JOIN frpm ON satscores.cds = frpm.CDSCode  WHERE (satscores.NumGE1500 * 1.0 / satscores.NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT schools.Phone FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr > 0 ORDER BY (satscores.NumGE1500 * 1.0 / satscores.NumTstTakr) DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT T2.NCESSchool, T1.\"Enrollment (Ages 5-17)\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.\"Enrollment (Ages 5-17)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T2.District FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.StatusType = 'Active' GROUP BY T2.District ORDER BY MAX(T1.AvgScrRead) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Merged' AND T1.District LIKE '%Alameda%' AND T2.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT T1.AvgScrWrite, T2.CharterNum FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite > 499 ORDER BY T1.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Fresno' AND T2.FundingType = 'Directly funded' AND T1.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores WHERE cds IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm WHERE `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)` < 700 AND `County Name` = 'Los Angeles';\t----- bird -----\tcalifornia_schools",
    "22": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE LOWER(T2.County) = 'contra costa' AND T1.NumTstTakr = (SELECT MAX(T3.NumTstTakr) FROM satscores AS T3 INNER JOIN schools AS T4 ON T3.cds = T4.CDSCode WHERE LOWER(T4.County) = 'contra costa')\t----- bird -----\tcalifornia_schools",
    "23": "SELECT S.School, S.Street FROM frpm AS F INNER JOIN schools AS S ON F.CDSCode = S.CDSCode WHERE ABS(F.`Enrollment (K-12)` - F.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT T2.sname FROM satscores AS T2 INNER JOIN frpm AS T1 ON T1.CDSCode = T2.cds WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T2.NumGE1500 > 0\t----- bird -----\tcalifornia_schools",
    "25": "SELECT T1.School, T1.FundingType FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.City = 'Riverside' AND T2.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "26": "SELECT frpm.\"School Name\", frpm.\"Street\", frpm.\"City\", frpm.\"Zip\", frpm.\"State\" FROM frpm WHERE frpm.\"School Type\" = 'High Schools (Public)' AND frpm.\"County Name\" = 'Monterey' AND frpm.\"Free Meal Count (Ages 5-17)\" > 800\t----- bird -----\tcalifornia_schools",
    "27": "SELECT T1.School, T1.Phone, AVG(T2.AvgScrWrite) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.OpenDate > '1991-12-31' OR T1.ClosedDate < '2000-01-01' GROUP BY T1.School, T1.Phone\t----- bird -----\tcalifornia_schools",
    "28": "SELECT T1.`School Name`, T2.`DOCType` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.`CDSCode` = T4.`CDSCode` WHERE T4.`FundingType` = 'Locally funded') AND T2.`FundingType` = 'Locally funded';\t----- bird -----\tcalifornia_schools",
    "29": "SELECT T1.OpenDate FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.GSserved = '1-12' AND T2.`Enrollment (K-12)` = (SELECT MAX(T2.`Enrollment (K-12)`) FROM frpm AS T2 INNER JOIN schools AS T1 ON T1.CDSCode = T2.CDSCode WHERE T1.GSserved = '1-12')\t----- bird -----\tcalifornia_schools",
    "30": "SELECT T2.City, T1.\"Enrollment (K-12)\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.\"Enrollment (K-12)\" ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "WITH RankedSchools AS (     SELECT \"Percent (%) Eligible Free (K-12)\", \"Enrollment (K-12)\",            ROW_NUMBER() OVER (ORDER BY \"Enrollment (K-12)\" DESC) AS rank     FROM frpm ) SELECT \"Percent (%) Eligible Free (K-12)\" FROM RankedSchools WHERE rank IN (10, 11)\t----- bird -----\tcalifornia_schools",
    "32": "SELECT frpm.`Percent (%) Eligible FRPM (K-12)` FROM `frpm` INNER JOIN `schools` ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`SOC` = '66' AND schools.`GSserved` LIKE '%1-12%' ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T2.Website, T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT frpm.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.`AdmFName1` = 'Kacey' AND schools.`AdmLName1` = 'Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T2.AdmEmail1, T2.AdmEmail2, T2.AdmEmail3 FROM schools AS T2 INNER JOIN satscores AS T1 ON T2.CDSCode = T1.cds WHERE T2.Charter = 1 ORDER BY T1.enroll12 ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT CONCAT(T1.AdmFName1, ' ', T1.AdmLName1) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT T2.Street, T2.City, T2.Zip, T2.State FROM schools AS T2 INNER JOIN ( SELECT cds, MIN(NumGE1500 * 1.0 / NumTstTakr) AS min_excellence_rate FROM satscores WHERE NumTstTakr > 0 GROUP BY cds ) AS T1 ON T1.cds = T2.CDSCode ORDER BY T1.min_excellence_rate LIMIT 1\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T1.Website FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Los Angeles' AND T2.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Fresno' AND T2.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.District = 'Fresno Unified' AND T2.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores AS T3 INNER JOIN schools AS T4 ON T3.cds = T4.CDSCode WHERE T4.District = 'Fresno Unified')\t----- bird -----\tcalifornia_schools",
    "41": "WITH RankedSchools AS (     SELECT T1.School, T1.County, T2.AvgScrRead,            RANK() OVER (PARTITION BY T1.County ORDER BY T2.AvgScrRead DESC) AS Rank     FROM schools AS T1     INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds     WHERE T1.Virtual IN ('F', 'V', 'C', 'P') ) SELECT School FROM RankedSchools WHERE Rank <= 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T1.EdOpsName FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores WHERE AvgScrMath IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "43": "WITH AvgScores AS (SELECT cds, (COALESCE(AvgScrMath, 0) + COALESCE(AvgScrRead, 0) + COALESCE(AvgScrWrite, 0)) / 3.0 AS avg_all_subjects FROM satscores GROUP BY cds) SELECT T1.AvgScrMath, T2.County FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cds = (SELECT cds FROM AvgScores WHERE avg_all_subjects = (SELECT MIN(avg_all_subjects) FROM AvgScores))\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(T1.AvgScrWrite), T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T2.School, AVG(T1.AvgScrWrite) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich' GROUP BY T2.School\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SOCType = 'State Special Schools' AND T1.`Enrollment (K-12)` = (SELECT MAX(`Enrollment (K-12)`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SOCType = 'State Special Schools')\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(schools.CDSCode) / 12.0 AS monthly_average FROM schools WHERE schools.County = 'Alameda' AND schools.DOCType = 'Elementary School District' AND STRFTIME('%Y', schools.OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT (SUM(CASE WHEN DOCType = 'Unified School District' THEN 1 ELSE 0 END) * 1.0) / (SUM(CASE WHEN DOCType = 'Elementary School District' THEN 1 ELSE 0 END)) AS ratio FROM schools WHERE StatusType = 'Merged' AND County = 'Orange';\t----- bird -----\tcalifornia_schools",
    "49": "SELECT T1.School, T1.ClosedDate  FROM schools AS T1  INNER JOIN (SELECT County              FROM (SELECT County, COUNT(ClosedDate) AS ClosedCount                    FROM schools                    WHERE ClosedDate IS NOT NULL                    GROUP BY County)              ORDER BY ClosedCount DESC LIMIT 1) AS T2  ON T1.County = T2.County  WHERE T1.ClosedDate IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "50": "SELECT S.Street, SS.sname  FROM (SELECT DISTINCT AvgScrMath        FROM satscores        ORDER BY AvgScrMath DESC        LIMIT 1 OFFSET 6) AS T  JOIN satscores AS SS ON T.AvgScrMath = SS.AvgScrMath  JOIN schools AS S ON SS.cds = S.CDSCode\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T2.MailStreet, T2.School FROM schools AS T2 INNER JOIN satscores AS T1 ON T2.CDSCode = T1.cds WHERE T1.AvgScrRead IS NOT NULL AND T1.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores WHERE AvgScrRead IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 >= 1 AND T2.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(CASE WHEN County = 'Colusa' THEN 1 END) * 1.0 / NULLIF(COUNT(CASE WHEN County = 'Humboldt' THEN 1 END), 0) FROM schools WHERE MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active' AND City = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT S.Phone, S.Ext FROM schools AS S INNER JOIN (SELECT AvgScrWrite, cds FROM satscores ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332) AS T ON S.CDSCode = T.cds\t----- bird -----\tcalifornia_schools",
    "58": "SELECT T1.Phone, T1.Ext, T1.School FROM schools AS T1 WHERE T1.Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName2 = 'Mike' AND AdmLName2 = 'Larson') OR (AdmFName3 = 'Mike' AND AdmLName3 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez') OR (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez') OR (AdmFName3 = 'Dante' AND AdmLName3 = 'Alvarez')\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND City = 'Hickman' AND District = 'Elementary School District'\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM frpm WHERE `Charter School (Y/N)` = 0 AND `County Name` = 'Los Angeles' AND `Percent (%) Eligible Free (K-12)` < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT AdmFName1, AdmLName1, School, City FROM schools WHERE Charter = 1 AND CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(CASE WHEN T1.FundingType = 'Locally funded' THEN 1 END) * 100.0 / COUNT(*)) AS ratio_percentage FROM schools AS T1 WHERE T1.County = 'Santa Clara'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND FundingType = 'Directly funded' AND County = 'Stanislaus';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE DOCType = 'Community College District' AND STRFTIME('%Y', ClosedDate) = '1989' AND City = 'San Francisco'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(ClosedDate) AS ClosureCount FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOC = '11' GROUP BY County ORDER BY ClosureCount DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT DISTINCT NCESDist FROM schools WHERE SOC IS NOT NULL AND DOCType = 'State Special Schools'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE (schools.StatusType = 'Active' OR schools.StatusType = 'Closed') AND schools.SOCType = 'District Community Day Schools' AND schools.County = 'Alpine'\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT District FROM schools WHERE City = 'Fresno' AND Magnet = 0\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`frpm`.`Enrollment (Ages 5-17)`) FROM `frpm` WHERE `frpm`.`District Type` = 'State Special Schools' AND `frpm`.`School Name` LIKE '%Fremont%' AND `frpm`.`Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`EdOpsCode` = 'YTH' AND T2.`MailStreet` = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT frpm.`Low Grade` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.SOCType = 'Special Education Schools (Public)' AND schools.NCESDist = '0613360'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.EILName, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`NSLP Provision Status` = 'Breakfast Provision 2' AND T2.`County Code` = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT schools.City FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.EILName = 'High School' AND frpm.\"NSLP Provision Status\" = 'Lunch Provision 2' AND frpm.\"Low Grade\" = '9' AND frpm.\"High Grade\" = '12' AND frpm.\"County Name\" = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT T1.School, T2.\"Percent (%) Eligible FRPM (Ages 5-17)\" FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.GSserved = 'K-9' AND T1.County = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(GSserved) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT `County`, COUNT(*) as school_count FROM `schools` WHERE `Virtual` = 'F' AND `County` IN ('San Diego', 'Santa Barbara') GROUP BY `County` ORDER BY school_count DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T1.School, T1.Latitude, T1.SOCType FROM schools AS T1 WHERE T1.Latitude = (SELECT MAX(T2.Latitude) FROM schools AS T2)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT City, School, \"Low Grade\" FROM schools WHERE State = 'CA' AND Latitude = (SELECT MIN(Latitude) FROM schools WHERE State = 'CA')\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools WHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(DISTINCT frpm.`NSLP Provision Status`) AS Multiple_Provision_Types_Count, COUNT(DISTINCT schools.City) AS Cities_Count, schools.City, COUNT(*) AS Schools_Per_City  FROM schools  INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode  WHERE schools.Magnet = 1 AND schools.GSoffered = 'K-8'  GROUP BY schools.City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT FirstName, District FROM ( SELECT AdmFName1 AS FirstName, District FROM schools WHERE AdmFName1 IS NOT NULL UNION ALL SELECT AdmFName2 AS FirstName, District FROM schools WHERE AdmFName2 IS NOT NULL ) AS CombinedNames GROUP BY FirstName, District ORDER BY COUNT(*) DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, frpm.`District Code` FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`AdmFName1` = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.AdmLName1, T1.District, T1.County, T1.School FROM schools AS T1 WHERE T1.CharterNum = '0040'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT DISTINCT T1.AdmEmail1, T1.AdmEmail2, T1.AdmEmail3 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'San Bernardino' AND T1.City = 'San Bernardino' AND T1.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (T2.\"School Type\" = 'Intermediate/Middle Schools (Public)' OR T2.\"School Type\" = 'Unified Schools')\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(*) FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id WHERE A.frequency = 'POPLATEK PO OBRATU' AND D.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT AVG(district.A12) AS avg_1995, AVG(district.A13) AS avg_1996, CASE WHEN AVG(district.A12) > AVG(district.A13) THEN '1995 has higher average' WHEN AVG(district.A12) < AVG(district.A13) THEN '1996 has higher average' ELSE 'Both are equal' END AS comparison_result FROM district\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT T1.district_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id GROUP BY T1.district_id HAVING AVG(T1.A11) > 6000 AND AVG(T1.A11) < 10000\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client AS C INNER JOIN district AS D ON C.district_id = D.district_id WHERE C.gender = 'M' AND D.A3 = 'north Bohemia' AND D.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT T1.account_id, (SELECT MAX(A11) FROM district) - (SELECT MIN(A11) FROM district) AS salary_gap FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T3.gender = 'F' AND T3.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND T4.A11 = (SELECT MIN(avg_salary) FROM (SELECT AVG(A11) AS avg_salary FROM district GROUP BY district_id) AS subquery)\t----- bird -----\tfinancial",
    "95": "SELECT A1.account_id FROM account AS A1 INNER JOIN disp AS D1 ON A1.account_id = D1.account_id INNER JOIN client AS C1 ON D1.client_id = C1.client_id WHERE C1.birth_date = (SELECT MAX(birth_date) FROM client) AND C1.district_id IN (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district))\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT C1.client_id FROM client AS C1 INNER JOIN disp AS D1 ON C1.client_id = D1.client_id INNER JOIN account AS A1 ON D1.account_id = A1.account_id WHERE D1.type = 'DISPONENT' AND A1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT DISTINCT T2.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date BETWEEN '1997-01-01' AND '1997-12-31' AND T2.frequency = 'POPLATEK TYDNE' AND T1.amount = (SELECT MIN(amount) FROM loan WHERE date BETWEEN '1997-01-01' AND '1997-12-31')\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id, MAX(T2.amount) AS highest_approved_amount  FROM account AS T1  INNER JOIN loan AS T2 ON T1.account_id = T2.account_id  WHERE T2.duration > 12 AND STRFTIME('%Y', T1.date) = '1993'  GROUP BY T1.account_id  ORDER BY highest_approved_amount DESC  LIMIT 1\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN district AS DT ON A.district_id = DT.district_id WHERE C.gender = 'F' AND C.birth_date < '1950-01-01' AND DT.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM account WHERE date = (SELECT MIN(date) FROM account WHERE date BETWEEN '1995-01-01' AND '1995-12-31')\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.amount > 3000\t----- bird -----\tfinancial",
    "103": "SELECT T1.client_id FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T2.issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT account.date FROM trans INNER JOIN account ON trans.account_id = account.account_id WHERE trans.amount = 840 AND trans.date = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT T2.district_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T4.amount) FROM trans AS T4 INNER JOIN disp AS T3 ON T4.account_id = T3.account_id INNER JOIN card AS T2 ON T3.disp_id = T2.disp_id INNER JOIN client AS T1 ON T3.client_id = T1.client_id WHERE T2.issued = '1996-10-21'\t----- bird -----\tfinancial",
    "107": "SELECT T1.gender  FROM client AS T1  INNER JOIN account AS T2 ON T1.client_id = T2.account_id  WHERE T2.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district))  AND T1.birth_date = (SELECT MIN(T3.birth_date) FROM client AS T3 INNER JOIN account AS T4 ON T3.client_id = T4.account_id WHERE T4.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district)))\t----- bird -----\tfinancial",
    "108": "SELECT T3.amount  FROM trans AS T3  INNER JOIN disp AS T2 ON T3.account_id = T2.account_id  INNER JOIN account AS T1 ON T2.account_id = T1.account_id  INNER JOIN loan AS T4 ON T1.account_id = T4.account_id  WHERE T4.amount = (SELECT MAX(amount) FROM loan)  AND T3.date = (SELECT MIN(T5.date) FROM trans AS T5                 INNER JOIN disp AS T6 ON T5.account_id = T6.account_id                 WHERE T6.client_id = T2.client_id                 AND T5.date > T1.date)\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T1.gender = 'F' AND T4.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "110": "SELECT T1.disp_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T3.amount = 5100 AND T3.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice' AND STRFTIME('%Y', T1.date) = '1996'\t----- bird -----\tfinancial",
    "112": "SELECT T3.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT T4.birth_date FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.amount = 98832 AND T1.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague' ORDER BY T1.date ASC LIMIT 1\t----- bird -----\tfinancial",
    "115": "WITH max_district AS (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY CAST(A4 AS INTEGER) DESC LIMIT 1) SELECT (SELECT COUNT(client.client_id) FROM client WHERE client.gender = 'M' AND client.district_id = (SELECT district_id FROM max_district)) * 100.0 / (SELECT COUNT(client.client_id) FROM client WHERE client.district_id = (SELECT district_id FROM max_district)) AS percentage_male_clients\t----- bird -----\tfinancial",
    "116": "WITH client_account AS (     SELECT disp.account_id     FROM loan     INNER JOIN disp ON loan.account_id = disp.account_id     WHERE loan.date = '1993-07-05' ) SELECT ((SELECT balance FROM trans WHERE date = '1998-12-27' AND account_id = (SELECT account_id FROM client_account)) - (SELECT balance FROM trans WHERE date = '1993-03-22' AND account_id = (SELECT account_id FROM client_account))) / (SELECT balance FROM trans WHERE date = '1993-03-22' AND account_id = (SELECT account_id FROM client_account)) * 100 AS increase_rate;\t----- bird -----\tfinancial",
    "117": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage_fully_paid FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT (COUNT(DISTINCT CASE WHEN T1.status = 'C' THEN T1.account_id END) * 100.0 / COUNT(DISTINCT T1.account_id)) AS percentage FROM loan AS T1 WHERE T1.amount < 100000\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date LIKE '1993%' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date BETWEEN '1995-01-01' AND '2000-12-31' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "121": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.loan_id = 4990\t----- bird -----\tfinancial",
    "123": "SELECT T2.account_id, T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT T1.loan_id, T3.A3 AS district, T3.A11 AS average_salary FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT D.A2, (D.A13 - D.A12) AS unemployment_increment FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN district AS D ON A.district_id = D.district_id WHERE L.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT (COUNT(T1.account_id) * 100.0 / NULLIF(SUM(CASE WHEN T1.date LIKE '1993%' THEN 1 ELSE 0 END), 0)) AS percentage  FROM account AS T1  INNER JOIN district AS T2 ON T1.district_id = T2.district_id  WHERE T2.A2 = 'Decin' AND T1.date LIKE '1993%'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT T3.district_id, COUNT(T2.account_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' GROUP BY T3.district_id ORDER BY COUNT(T2.account_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "129": "SELECT T3.A2, T1.amount FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ' AND T1.operation != 'VYBER KARTOU' AND T1.date LIKE '1996-01%' ORDER BY T1.amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id LEFT JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.district_id IN (SELECT district_id FROM district WHERE A3 = 'South Bohemia') AND T3.card_id IS NULL\t----- bird -----\tfinancial",
    "131": "SELECT D.A2 FROM district AS D INNER JOIN account AS A ON D.district_id = A.district_id INNER JOIN loan AS L ON A.account_id = L.account_id WHERE L.status = 'C' GROUP BY D.district_id ORDER BY SUM(L.amount) DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT district_id, A2 FROM district WHERE A13 = (SELECT MAX(A13) FROM district);\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(a.account_id) FROM account AS a INNER JOIN district AS d ON a.district_id = d.district_id WHERE d.A16 = (SELECT MAX(A16) FROM district)\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT A.account_id) FROM trans AS T INNER JOIN account AS A ON T.account_id = A.account_id WHERE T.operation = 'VYBER KARTOU' AND T.balance < 0 AND A.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id WHERE L.date BETWEEN '1995-01-01' AND '1997-12-31' AND L.amount >= 250000 AND A.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status = 'C' AND T1.district_id = 1\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(T1.client_id) FROM client AS T1 WHERE T1.district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1) AND T1.gender = 'M'\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT D.A2 FROM trans AS T INNER JOIN account AS A ON T.account_id = A.account_id INNER JOIN district AS D ON A.district_id = D.district_id WHERE T.amount > 10000 AND T.date LIKE '1997%'\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT T2.account_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT T3.account_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.type = 'gold'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(T4.amount) FROM trans AS T4 INNER JOIN disp AS T3 ON T4.account_id = T3.account_id INNER JOIN card AS T2 ON T3.disp_id = T2.disp_id INNER JOIN account AS T1 ON T3.account_id = T1.account_id WHERE T4.date >= '2021-01-01' AND T4.date <= '2021-12-31'\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT C.client_id FROM trans AS T1 INNER JOIN card AS T2 ON T1.account_id = T2.disp_id INNER JOIN disp AS D ON T2.disp_id = D.disp_id INNER JOIN client AS C ON D.client_id = C.client_id WHERE T1.amount < (SELECT AVG(amount) FROM trans WHERE strftime('%Y', date) = '1998') AND strftime('%Y', T1.date) = '1998'\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT C.client_id, C.gender FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CC ON D.disp_id = CC.disp_id INNER JOIN loan AS L ON D.account_id = L.account_id WHERE C.gender = 'F'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT T3.account_id) FROM disp AS T3 INNER JOIN client AS T1 ON T3.client_id = T1.client_id INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A3 = 'south Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT T1.type FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'DISPONENT' AND T3.A11 > 8000 AND T3.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'North Bohemia' AND T3.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ'\t----- bird -----\tfinancial",
    "152": "SELECT AVG(T1.A15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND T2.date >= '1997-01-01'\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card AS C INNER JOIN disp AS D ON C.disp_id = D.disp_id WHERE C.type = 'classic' AND D.account_id IN (SELECT account_id FROM loan);\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT (COUNT(CASE WHEN issued < '1998-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM card WHERE type = 'gold';\t----- bird -----\tfinancial",
    "156": "SELECT client.client_id  FROM client  INNER JOIN disp ON client.client_id = disp.client_id  INNER JOIN account ON disp.account_id = account.account_id  INNER JOIN loan ON account.account_id = loan.account_id  WHERE disp.type = 'OWNER' AND loan.amount = (SELECT MAX(amount) FROM loan)\t----- bird -----\tfinancial",
    "157": "SELECT T2.A15 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.account_id = 532\t----- bird -----\tfinancial",
    "158": "SELECT T2.district_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.order_id = 33333\t----- bird -----\tfinancial",
    "159": "SELECT T3.* FROM trans AS T3 INNER JOIN disp AS T2 ON T3.account_id = T2.account_id INNER JOIN client AS T1 ON T2.client_id = T1.client_id WHERE T3.type = 'VYBER' AND T1.client_id = 3356\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account AS A INNER JOIN loan AS L ON A.account_id = L.account_id WHERE A.frequency = 'POPLATEK TYDNE' AND L.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT T3.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT T2.A3 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT D.A2, COUNT(A.account_id) FROM district AS D INNER JOIN account AS A ON D.district_id = A.district_id INNER JOIN loan AS L ON A.account_id = L.account_id WHERE L.status = 'A' GROUP BY D.A2 ORDER BY COUNT(A.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT T3.client_id FROM `order` AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.order_id = 32423\t----- bird -----\tfinancial",
    "165": "SELECT T1.* FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT T3.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.type = 'junior' AND T1.issued > '1996-12-31'\t----- bird -----\tfinancial",
    "168": "SELECT (COUNT(CASE WHEN T1.gender = 'F' THEN 1 END) * 100.0 / COUNT(T1.client_id)) AS percentage  FROM client AS T1  INNER JOIN account AS T2 ON T1.client_id = T2.account_id  INNER JOIN district AS T3 ON T2.district_id = T3.district_id  WHERE T3.A11 > 10000\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1997' THEN loan.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) / SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) * 100 AS growth_rate FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT (SELECT A16 FROM district WHERE A3 = 'east Bohemia') - (SELECT A16 FROM district WHERE A3 = 'north Bohemia') AS crime_difference\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE type IN ('OWNER', 'DISPONENT') AND account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "SELECT (SELECT frequency FROM account WHERE account_id = 3) AS frequency_of_statements,         (SELECT k_symbol FROM trans WHERE amount = 3539) AS aim_of_debiting;\t----- bird -----\tfinancial",
    "174": "SELECT STRFTIME('%Y', T2.birth_date) FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 130 AND T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM account AS A INNER JOIN disp AS D ON A.account_id = D.account_id WHERE D.type = 'OWNER' AND A.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT SUM(T1.amount) AS total_debt, T1.status FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 992 GROUP BY T1.status\t----- bird -----\tfinancial",
    "177": "SELECT T1.balance, T2.gender  FROM trans AS T1  JOIN disp AS T3 ON T1.account_id = T3.account_id  JOIN client AS T2 ON T3.client_id = T2.client_id  WHERE T1.trans_id = 851 AND T2.client_id = 4\t----- bird -----\tfinancial",
    "178": "SELECT T3.type FROM card AS T3 INNER JOIN disp AS T2 ON T3.disp_id = T2.disp_id INNER JOIN client AS T1 ON T2.client_id = T1.client_id WHERE T1.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(T1.amount) FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.client_id = 617 AND T1.type = 'VYDAJ' AND STRFTIME('%Y', T1.date) = '1998'\t----- bird -----\tfinancial",
    "180": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND T4.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "181": "SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F' ORDER BY loan.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE C.gender = 'M' AND C.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T.k_symbol = 'SIPO' AND T.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Beroun' AND T1.date > '1996-12-31'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CD ON D.disp_id = CD.disp_id WHERE C.gender = 'F' AND CD.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT (COUNT(CASE WHEN C.gender = 'F' THEN 1 END) * 1.0 / COUNT(*)) AS proportion  FROM client AS C  INNER JOIN account AS A ON C.district_id = A.district_id  INNER JOIN district AS D ON A.district_id = D.district_id  WHERE D.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "186": "SELECT (SUM(CASE WHEN account.frequency = 'POPLATEK TYDNE' THEN 1 ELSE 0 END) * 100.0 / COUNT(client.client_id)) AS percentage FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id WHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id WHERE A.frequency = 'POPLATEK TYDNE' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 24 AND T1.date < '1997-01-01' ORDER BY T2.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "189": "SELECT A.account_id FROM disp AS D INNER JOIN client AS C ON D.client_id = C.client_id INNER JOIN account AS A ON D.account_id = A.account_id WHERE C.gender = 'F' AND C.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND A.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MIN(A11) FROM district))\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.birth_date) = '1920' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 24 AND T2.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'C' AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T1.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.type = 'DISPONENT'\t----- bird -----\tfinancial",
    "194": "SELECT DISTINCT T1.client_id, (strftime('%Y', CURRENT_DATE) - strftime('%Y', T1.birth_date)) AS age FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN loan AS T4 ON T2.account_id = T4.account_id WHERE T3.type = 'gold'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(count_oxygen) FROM (SELECT COUNT(A.atom_id) AS count_oxygen FROM bond AS B INNER JOIN atom AS A ON B.molecule_id = A.molecule_id WHERE A.element = 'o' AND B.bond_type = '-' GROUP BY B.molecule_id) AS subquery\t----- bird -----\ttoxicology",
    "198": "SELECT (COUNT(T1.bond_id) * 1.0 / COUNT(DISTINCT T2.molecule_id)) AS average_single_bonded_carcinogenic_molecules FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "201": "WITH double_bond_molecules AS (SELECT DISTINCT `molecule_id` FROM `bond` WHERE `bond_type` = '=')  SELECT (COUNT(CASE WHEN `element` = 'c' THEN 1 END) * 100.0 / COUNT(*)) AS percentage  FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM double_bond_molecules);\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(atom.atom_id) FROM atom WHERE atom.element <> 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM (SELECT * FROM molecule ORDER BY molecule_id LIMIT 100) AS T WHERE T.label = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT T4.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T4 ON T2.atom_id = T4.atom_id OR T2.atom_id2 = T4.atom_id WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "208": "SELECT T2.label FROM molecule AS T2 INNER JOIN atom AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT DISTINCT T3.bond_type FROM bond AS T3 INNER JOIN connected AS T2 ON T3.bond_id = T2.bond_id INNER JOIN atom AS T1 ON T2.atom_id = T1.atom_id OR T2.atom_id2 = T1.atom_id WHERE T1.element = 'cl'\t----- bird -----\ttoxicology",
    "210": "SELECT DISTINCT T1.atom_id, T1.atom_id2  FROM connected AS T1  INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id  WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT element FROM (SELECT T1.element, COUNT(T1.element) AS element_count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element) AS subquery ORDER BY element_count ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT T1.label FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id AND T2.element = 'sn' WHERE T2.molecule_id IS NULL\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element IN ('i', 's') AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT DISTINCT T1.atom_id, T1.atom_id2  FROM connected AS T1  INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id  WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT T3.atom_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id = T3.atom_id2 WHERE T1.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT (SUM(CASE WHEN M.label = '+' AND NOT EXISTS (SELECT 1 FROM atom WHERE atom.molecule_id = M.molecule_id AND atom.element = 'f') THEN 1 ELSE 0 END) * 100.0 / COUNT(M.molecule_id)) AS percentage FROM molecule AS M WHERE M.label = '+'\t----- bird -----\ttoxicology",
    "219": "SELECT (COUNT(CASE WHEN T2.label = '+' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "220": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_2_6' AND T2.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "222": "SELECT (SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN `label` = '-' THEN 1 ELSE 0 END)) AS difference FROM `molecule`;\t----- bird -----\ttoxicology",
    "223": "SELECT connected.atom_id, connected.atom_id2 FROM connected WHERE connected.bond_id = 'TR000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT DISTINCT T1.molecule_id FROM bond AS T1 WHERE T1.bond_type = '=' ORDER BY T1.molecule_id ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT ROUND((COUNT(CASE WHEN bond_type = '=' THEN 1 END) * 1.0 / COUNT(bond_type)) * 100, 5) AS percentage FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND((COUNT(CASE WHEN label = '+' THEN 1 END) * 100.0 / COUNT(molecule_id)), 3) AS percentage FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND((CAST(COUNT(CASE WHEN element = 'h' THEN 1 END) AS FLOAT) / COUNT(molecule_id)) * 100, 4) AS percentage FROM atom WHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT bond_type FROM bond WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT (SELECT bond_type FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1) AS majority_bond_type, label FROM molecule WHERE molecule_id = 'TR010';\t----- bird -----\ttoxicology",
    "232": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-' ORDER BY T2.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id ASC LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(T1.bond_id) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR009_12' OR T1.atom_id2 = 'TR009_12') AND T2.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR001_19' OR atom_id2 = 'TR001_19';\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE (T1.atom_id LIKE '%_21' OR T1.atom_id LIKE '%_22' OR T1.atom_id LIKE '%_23' OR T1.atom_id LIKE '%_24' OR T1.atom_id LIKE '%_25') AND T2.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT DISTINCT C.bond_id  FROM connected AS C  INNER JOIN atom AS A1 ON C.atom_id = A1.atom_id  INNER JOIN atom AS A2 ON C.atom_id2 = A2.atom_id  WHERE A1.element = 'p' AND A2.element = 'n'\t----- bird -----\ttoxicology",
    "244": "SELECT T3.label FROM (SELECT T1.molecule_id, COUNT(*) AS double_bond_count FROM bond AS T1 WHERE T1.bond_type = '=' GROUP BY T1.molecule_id ORDER BY double_bond_count DESC LIMIT 1) AS T2 INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count) FROM (SELECT COUNT(c.bond_id) AS bond_count FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id WHERE a.element = 'i' GROUP BY a.atom_id)\t----- bird -----\ttoxicology",
    "246": "SELECT T2.bond_type, T1.bond_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR001_45'\t----- bird -----\ttoxicology",
    "247": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id NOT IN (SELECT T2.atom_id FROM connected AS T2 UNION SELECT T2.atom_id2 FROM connected AS T2)\t----- bird -----\ttoxicology",
    "248": "SELECT T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#' AND T1.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "249": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = (SELECT molecule_id FROM bond WHERE bond_id = 'TR144_8_19')\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(CASE WHEN T2.bond_type = '=' THEN 1 END) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT T3.element FROM (SELECT T2.element, COUNT(*) as element_count FROM atom AS T2 INNER JOIN molecule AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.label = '+' GROUP BY T2.element) AS T3 ORDER BY T3.element_count ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.atom_id IN (SELECT T3.atom_id FROM atom AS T3 WHERE T3.element = 'pb')\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "SELECT (COUNT(T1.bond_id) * 100.0 / (SELECT COUNT(*) FROM bond)) AS percentage  FROM bond AS T1  INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id  INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id  INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id  GROUP BY T3.element, T4.element  HAVING COUNT(T2.bond_id) = (SELECT MAX(combination_count)                               FROM (SELECT COUNT(T2.bond_id) AS combination_count                                     FROM connected AS T2                                     INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id                                     INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id                                     GROUP BY T3.element, T4.element))\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND((COUNT(CASE WHEN T1.bond_type = '-' AND T2.label = '+' THEN 1 END) * 100.0 / COUNT(CASE WHEN T1.bond_type = '-' THEN 1 END)), 5) AS proportion FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(atom_id) FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T3.element) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT T3.atom_id) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T2.bond_type = '#' AND T3.element IN ('p', 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT DISTINCT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.atom_id)) FROM atom AS T1 WHERE T1.molecule_id IN (SELECT T2.molecule_id FROM bond AS T2 WHERE T2.bond_type = '-')\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR030';\t----- bird -----\ttoxicology",
    "267": "SELECT bond_type FROM bond WHERE molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT T1.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT CASE WHEN COUNT(CASE WHEN M.label = '+' THEN 1 END) > COUNT(CASE WHEN M.label = '-' THEN 1 END) THEN 'Mostly Carcinogenic' ELSE 'Mostly Non-Carcinogenic' END AS Majority FROM atom AS A INNER JOIN molecule AS M ON A.molecule_id = M.molecule_id WHERE A.element = 'ca'\t----- bird -----\ttoxicology",
    "271": "SELECT CASE WHEN COUNT(DISTINCT T2.element) = 2 THEN 'Yes' ELSE 'No' END AS result FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_1_8' AND (T2.element = 'cl' OR T2.element = 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-' AND T3.element = 'c' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT (COUNT(CASE WHEN T1.element = 'cl' THEN 1 END) * 100.0) / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '='\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT DISTINCT T1.element FROM connected AS T2 INNER JOIN atom AS T1 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT COUNT(T1.element) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.atom_id LIKE '%_4'\t----- bird -----\ttoxicology",
    "282": "SELECT (COUNT(CASE WHEN A.element = 'h' THEN 1 END) * 1.0 / COUNT(A.atom_id)) AS ratio, M.label  FROM atom AS A  INNER JOIN molecule AS M ON A.molecule_id = M.molecule_id  WHERE A.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT T2.label FROM molecule AS T2 INNER JOIN atom AS T1 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.element = 'c'\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / NULLIF(COUNT(DISTINCT T2.molecule_id), 0)) AS percentage FROM bond AS T1 LEFT JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "287": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR047')) AS percent FROM bond WHERE bond.bond_type = '=' AND bond.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT * FROM atom WHERE molecule_id BETWEEN 'TR010' AND 'TR050' AND element = 'c'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR000_1_2' AND T2.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT (COUNT(DISTINCT CASE WHEN T1.element = 'h' THEN T1.molecule_id END) * 100.0 / COUNT(DISTINCT T2.molecule_id)) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "299": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id FROM atom WHERE molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(T1.bond_id) AS double_bond_count, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "304": "SELECT T1.molecule_id, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "307": "SELECT DISTINCT T1.element  FROM atom AS T1  INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2  WHERE T2.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T2.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT T1.atom_id, COUNT(DISTINCT T2.bond_type) FROM atom AS T1 LEFT JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346' GROUP BY T1.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT T1.molecule_id)  FROM molecule AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id  LEFT JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id  WHERE T2.element != 's' AND (T3.bond_type IS NULL OR T3.bond_type != '=')\t----- bird -----\ttoxicology",
    "312": "SELECT T1.label FROM molecule AS T1 WHERE molecule_id = (SELECT T2.molecule_id FROM bond AS T2 WHERE T2.bond_id = 'TR001_2_4')\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT (COUNT(DISTINCT CASE WHEN T1.label = '+' AND T1.molecule_id IN (SELECT T2.molecule_id FROM atom AS T2 WHERE T2.element = 'cl') THEN T1.molecule_id END) * 100.0) / COUNT(DISTINCT CASE WHEN T1.label = '+' THEN T1.molecule_id END) AS percentage FROM molecule AS T1\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT T2.element) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_3_4'\t----- bird -----\ttoxicology",
    "320": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR000_1' AND T2.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT DISTINCT T1.molecule_id  FROM atom AS T1  INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2  WHERE (T2.atom_id = 'TR000_2' AND T2.atom_id2 = 'TR000_4')     OR (T2.atom_id = 'TR000_4' AND T2.atom_id2 = 'TR000_2')\t----- bird -----\ttoxicology",
    "322": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT (COUNT(T1.atom_id) * 100.0 / (SELECT COUNT(*) FROM atom)) AS percentage FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'n'\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 's' AND T2.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT T3.element FROM atom AS T3 INNER JOIN connected AS T2 ON T3.atom_id = T2.atom_id INNER JOIN bond AS T1 ON T2.bond_id = T1.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T1.bond_type = '=' AND T4.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "WITH AtomCounts AS (     SELECT T1.molecule_id, COUNT(T2.atom_id) AS atom_count     FROM molecule AS T1     INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id     WHERE T1.label = '+'     GROUP BY T1.molecule_id ) SELECT molecule_id FROM AtomCounts WHERE atom_count = (SELECT MAX(atom_count) FROM AtomCounts);\t----- bird -----\ttoxicology",
    "330": "SELECT (COUNT(DISTINCT M2.molecule_id) * 100.0 / NULLIF((SELECT COUNT(DISTINCT M3.molecule_id) FROM molecule AS M3 WHERE M3.label = '+'), 0)) AS percentage FROM molecule AS M2 INNER JOIN atom AS A ON M2.molecule_id = A.molecule_id INNER JOIN bond AS B ON M2.molecule_id = B.molecule_id WHERE A.element = 'h' AND B.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE molecule_id BETWEEN 'TR004' AND 'TR010' AND bond_type = '-'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR008' AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT M.molecule_id) FROM molecule AS M INNER JOIN bond AS B ON M.molecule_id = B.molecule_id INNER JOIN connected AS C ON B.bond_id = C.bond_id INNER JOIN atom AS A1 ON C.atom_id = A1.atom_id INNER JOIN atom AS A2 ON C.atom_id2 = A2.atom_id WHERE B.bond_type = '=' AND (A1.element = 'o' OR A2.element = 'o')\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR002'\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'c' AND T3.bond_type = '=' AND T3.molecule_id = 'TR012' AND T1.molecule_id = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT T1.name FROM cards AS T1 WHERE T1.hasFoil = 1 AND T1.cardKingdomFoilId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor = 'borderless' AND hasFoil = 0;\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost > convertedManaCost;\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.types LIKE '%Artifact%' AND (T2.otherFaceIds IS NULL OR T2.otherFaceIds = '') AND T1.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE (T1.power IS NULL OR T1.power = '*')  AND T2.format = 'commander'  AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T1.uuid, T1.artist, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE LOWER(T1.artist) = LOWER('Stephen Daniele') AND T1.hasContentWarning = 1\t----- bird -----\tcard_games",
    "348": "SELECT T1.text, T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Sublime Epiphany' AND T2.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT T3.name, T3.artist, T3.isPromo FROM cards AS T3 INNER JOIN (SELECT uuid, COUNT(id) AS ruling_count FROM rulings GROUP BY uuid ORDER BY ruling_count DESC LIMIT 1) AS T2 ON T3.uuid = T2.uuid\t----- bird -----\tcard_games",
    "350": "SELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Annul' AND T2.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT DISTINCT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT (COUNT(DISTINCT T1.uuid) * 100.0 / COUNT(DISTINCT T2.uuid)) AS percentage  FROM foreign_data AS T1  LEFT JOIN cards AS T2 ON T1.uuid = T2.uuid  WHERE T1.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "353": "SELECT T1.name, T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '\u221e';\t----- bird -----\tcard_games",
    "357": "SELECT T1.promoTypes FROM cards AS T1 WHERE T1.name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT T3.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.text IS NOT NULL\t----- bird -----\tcard_games",
    "362": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T2.status = 'Restricted' AND T3.type = 'starter'\t----- bird -----\tcard_games",
    "364": "SELECT T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT T2.text FROM rulings AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE LOWER(T1.name) = LOWER('Benalish Knight')\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE name LIKE '%Phyrexian%' OR type LIKE '%Phyrexian%'\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(id) * 100.0 / (SELECT COUNT(id) FROM cards)) AS percentage FROM cards WHERE borderColor = 'borderless';\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(CASE WHEN FD.language = 'French' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards AS C INNER JOIN foreign_data AS FD ON C.uuid = FD.uuid WHERE C.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT T1.name FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0.0;\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%Flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE hasFoil = 1 AND hasNonFoil = 1 AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.* FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' AND T2.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T3.language FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(T1.uuid), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' GROUP BY T2.status\t----- bird -----\tcard_games",
    "387": "SELECT T1.colors FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.code = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT T1.name, T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT T1.* FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.type LIKE '%Artifact%' AND T1.colors LIKE '%B%' AND T2.uuid IS NOT NULL\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 1 AND (power IS NULL OR power = '*' OR CAST(power AS INTEGER) < 1)\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power > 5;\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability LIKE '%mtgo%' AND hand = '-1';\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability LIKE '%paper%' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT setCode FROM set_translations WHERE language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT (SUM(CASE WHEN T1.frameEffects LIKE '%legendary%' AND T2.isOnlineOnly = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.id)) AS percentage  FROM cards AS T1  INNER JOIN sets AS T2 ON T1.setCode = T2.code  WHERE T1.frameEffects LIKE '%legendary%'\t----- bird -----\tcard_games",
    "402": "SELECT (COUNT(CASE WHEN isTextless = 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage, GROUP_CONCAT(id) AS ids  FROM cards  WHERE isStorySpotlight = 1\t----- bird -----\tcard_games",
    "403": "WITH counts AS (     SELECT          COUNT(id) AS total_count,         COUNT(CASE WHEN language = 'Spanish' THEN id END) AS spanish_count     FROM foreign_data ) SELECT      (spanish_count * 100.0 / total_count) AS percentage,     foreign_data.name  FROM foreign_data, counts  WHERE foreign_data.language = 'Spanish';\t----- bird -----\tcard_games",
    "404": "SELECT T2.language FROM set_translations AS T2 INNER JOIN sets AS T1 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Portuguese (Brazil)' AND T2.block = 'Commander'\t----- bird -----\tcard_games",
    "406": "SELECT DISTINCT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type LIKE '%Creature%' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German'\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE (power = '*' OR power IS NULL) AND (text LIKE '%When%' OR text LIKE '%Whenever%' OR text LIKE '%At the beginning of%')\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(T2.uuid) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T2.uuid = T3.uuid WHERE T1.format = 'premodern' AND T3.text = 'This is a triggered mana ability.' AND T2.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability LIKE '%paper%'\t----- bird -----\tcard_games",
    "411": "SELECT T2.artist FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE LOWER(T1.flavorText) = LOWER('Das perfekte Gegenmittel zu einer dichten Formation')\t----- bird -----\tcard_games",
    "412": "SELECT DISTINCT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE foreign_data.language = 'French' AND cards.type LIKE '%Creature%' AND cards.layout = 'normal' AND cards.borderColor = 'black' AND cards.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.text IS NOT NULL AND T2.date = '2007-02-01'\t----- bird -----\tcard_games",
    "414": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(T1.uuid) * 100.0 / NULLIF(SUM(CASE WHEN T1.format = 'commander' AND T1.status = 'Legal' THEN 1 ELSE 0 END), 0)) AS percentage FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.format = 'commander' AND T1.status = 'Legal' AND T2.hasContentWarning = 0\t----- bird -----\tcard_games",
    "416": "SELECT (COUNT(*) * 100.0 / NULLIF((SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*'), 0)) AS percentage FROM cards AS C INNER JOIN foreign_data AS F ON C.uuid = F.uuid WHERE (C.power IS NULL OR C.power = '*') AND F.language = 'French'\t----- bird -----\tcard_games",
    "417": "SELECT (COUNT(T1.setCode) * 100.0 / (SELECT COUNT(*) FROM set_translations AS T1 WHERE T1.language = 'Japanese')) AS percentage FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese' AND T2.type = 'expansion'\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE colors IS NOT NULL AND borderColor = 'borderless' AND edhrecRank > 12000\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE power IS NULL OR power = '*' AND promoTypes LIKE '%arenaleague%' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY edhrecRank ASC, cardKingdomFoilId ASC LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT CAST(COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) AS REAL) / COUNT(*) FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE isOnlineOnly = 0 ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Archenemy' AND T1.code = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T1.language, T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT T1.id, T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.block = 'Shadowmoor' ORDER BY T1.name ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.isForeignOnly = 0 AND T1.isFoilOnly = 1 AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "432": "WITH MaxSize AS (     SELECT MAX(T2.totalSetSize) AS max_total_size     FROM sets AS T2     INNER JOIN set_translations AS T1 ON T1.setCode = T2.code     WHERE T1.language = 'Russian' ) SELECT T2.name FROM sets AS T2 INNER JOIN set_translations AS T1 ON T1.setCode = T2.code WHERE T1.language = 'Russian' AND T2.totalSetSize = (SELECT max_total_size FROM MaxSize)\t----- bird -----\tcard_games",
    "433": "SELECT (SELECT COUNT(DISTINCT sets.code) FROM sets INNER JOIN cards ON sets.code = cards.setCode INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified' AND sets.isOnlineOnly = 1) * 1.0 / (SELECT COUNT(DISTINCT sets.code) FROM sets) * 100 AS percentage\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isOnlineOnly = 0\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT T1.id FROM cards AS T1 WHERE T1.frameEffects LIKE '%extendedart%'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 174\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE LOWER(T1.name) = LOWER('A Pedra Fellwar')\t----- bird -----\tcard_games",
    "441": "SELECT setCode FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT FD.name, C.type FROM cards AS C INNER JOIN foreign_data AS FD ON C.uuid = FD.uuid WHERE C.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT T1.language, T1.flavorText, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM cards AS T3 INNER JOIN sets AS T4 ON T3.setCode = T4.code WHERE T4.name LIKE '%Abyssal Horror%')) AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.convertedManaCost = 10 AND T2.name LIKE '%Abyssal Horror%'\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type LIKE '%expansion%' OR type LIKE '%commander%'\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name, cards.type FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T2.language, T1.type FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.watermark = 'azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND (power >= 10 OR power = '\u221e');\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT T1.name FROM cards AS T1 WHERE T1.text IS NOT NULL;\t----- bird -----\tcard_games",
    "453": "SELECT manaCost FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(T1.id) FROM cards AS T1 WHERE T1.borderColor = 'white' AND (T1.power IS NULL OR T1.power = '*')\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT types FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT CASE           WHEN (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel') >                (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper')           THEN 'Serra Angel'           ELSE 'Shrine Keeper'         END AS Higher_Cost_Card\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT T1.name FROM cards AS T1 WHERE T1.frameVersion = '2003' ORDER BY T1.convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(T3.translation) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Seventh Edition'\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS(SELECT 1 FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'Korean')\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize FROM sets WHERE name = 'Seventh Edition';\t----- bird -----\tcard_games",
    "468": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Chinese Simplified' AND T2.name = 'Eighth Edition'\t----- bird -----\tcard_games",
    "469": "SELECT EXISTS (SELECT 1 FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy' AND T2.isOnlineOnly = 1)\t----- bird -----\tcard_games",
    "470": "SELECT T2.releaseDate FROM sets AS T2 INNER JOIN cards AS T1 ON T1.setCode = T2.code WHERE T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT EXISTS (SELECT 1 FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Adarkar Valkyrie' AND T2.isForeignOnly = 1)\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 100\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost = (SELECT MAX(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap')\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND (T2.name = 'Coldsnap' OR T2.code = 'Coldsnap')\t----- bird -----\tcard_games",
    "478": "SELECT T1.* FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.number = '4' AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.convertedManaCost > 5 AND T2.name = 'Coldsnap' AND (T1.power IS NULL OR T1.power = '*')\t----- bird -----\tcard_games",
    "480": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Italian' AND T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT T1.text FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.setCode = 'Coldsnap' AND T1.language = 'Italian'\t----- bird -----\tcard_games",
    "484": "WITH MaxCost AS (SELECT MAX(convertedManaCost) AS maxCost, setCode FROM cards GROUP BY setCode) SELECT DISTINCT FD.name FROM foreign_data AS FD INNER JOIN cards AS C ON FD.uuid = C.uuid INNER JOIN sets AS S ON C.setCode = S.code INNER JOIN MaxCost AS M ON C.convertedManaCost = M.maxCost AND M.setCode = S.code WHERE FD.language = 'Italian' AND S.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "485": "SELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT (COUNT(CASE WHEN cards.convertedManaCost = 7 THEN 1 END) * 100.0) / COUNT(*) AS percentage FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT (COUNT(CASE WHEN T1.power > 5 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = DATE('2017-06-09');\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT totalSetSize FROM sets WHERE name = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT type FROM sets WHERE name LIKE '%Huiti\u00e8me \u00e9dition%' OR name = 'Unlimited Edition'\t----- bird -----\tcard_games",
    "498": "SELECT T3.translation FROM set_translations AS T3 INNER JOIN sets AS T2 ON T3.setCode = T2.code INNER JOIN cards AS T1 ON T2.code = T1.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T3.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(T2.translation) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Tenth Edition'\t----- bird -----\tcard_games",
    "500": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN cards AS T3 ON T2.code = T3.setCode WHERE T3.name = 'Fellwar Stone' AND T1.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Journey into Nyx Hero''s Path' AND T1.convertedManaCost = (SELECT MAX(T3.convertedManaCost) FROM cards AS T3 INNER JOIN sets AS T4 ON T3.setCode = T4.code WHERE T4.name = 'Journey into Nyx Hero''s Path')\t----- bird -----\tcard_games",
    "502": "SELECT S.releaseDate FROM sets AS S INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.translation = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT T2.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3\t----- bird -----\tcard_games",
    "505": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Chinese Simplified' AND T2.name = 'Mirrodin'\t----- bird -----\tcard_games",
    "506": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM sets WHERE code IN (SELECT setCode FROM set_translations WHERE language = 'Japanese'))) AS percentage FROM sets AS T1 WHERE T1.isNonFoilOnly = 1 AND T1.code IN (SELECT setCode FROM set_translations WHERE language = 'Japanese')\t----- bird -----\tcard_games",
    "507": "SELECT (COUNT(CASE WHEN T2.isOnlineOnly = 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE isTextless = 1 AND artist = 'Aleksi Briclot'\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets)\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE side IS NULL)\t----- bird -----\tcard_games",
    "511": "SELECT T1.frameEffects, COUNT(*) AS count FROM cards AS T1 WHERE T1.hasFoil = 1 AND T1.convertedManaCost > 0 GROUP BY T1.frameEffects ORDER BY count DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'A';\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' AND totalSetSize = (SELECT MAX(totalSetSize) FROM sets WHERE type = 'commander');\t----- bird -----\tcard_games",
    "514": "SELECT T1.name, T1.convertedManaCost FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'duel' AND T2.status = 'Legal' ORDER BY T1.convertedManaCost DESC LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT MIN(T1.originalReleaseDate) AS oldest_release_date, T2.format  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE T1.rarity = 'mythic'  AND T1.originalReleaseDate = (SELECT MIN(originalReleaseDate) FROM cards WHERE rarity = 'mythic')\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Ba\u01f5a' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T1.type LIKE '%Enchantment%' AND T1.name = 'Abundance' AND T1.uuid IN (SELECT T2.uuid FROM legalities AS T2 GROUP BY T2.uuid HAVING COUNT(*) = COUNT(CASE WHEN T2.status = 'Legal' THEN 1 END))\t----- bird -----\tcard_games",
    "518": "SELECT legalities.format, GROUP_CONCAT(cards.name)  FROM legalities  INNER JOIN cards ON legalities.uuid = cards.uuid  WHERE legalities.status = 'Banned'  GROUP BY legalities.format  HAVING COUNT(legalities.status) = (SELECT MAX(banned_count) FROM (SELECT COUNT(*) AS banned_count FROM legalities WHERE status = 'Banned' GROUP BY format))\t----- bird -----\tcard_games",
    "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE LOWER(T1.name) = LOWER('Battlebond')\t----- bird -----\tcard_games",
    "520": "--error--\t----- bird -----\tcard_games",
    "521": "SELECT T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.frameVersion = '1997' AND T2.artist = 'D. Alexander Gregory' AND T1.format = 'legacy' AND T2.hasContentWarning = 1\t----- bird -----\tcard_games",
    "522": "SELECT DISTINCT T1.name, T2.format  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "523": "WITH annual_counts AS (     SELECT STRFTIME('%Y', releaseDate) AS year, COUNT(*) AS annual_count      FROM sets      WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31'      GROUP BY STRFTIME('%Y', releaseDate) ), common_language AS (     SELECT T2.language      FROM set_translations AS T2      INNER JOIN sets AS T1 ON T2.setCode = T1.code      WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31'      GROUP BY T2.language      ORDER BY COUNT(T2.language) DESC      LIMIT 1 ) SELECT AVG(annual_count) AS annual_average, (SELECT language FROM common_language) AS common_language  FROM annual_counts;\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT uuid FROM legalities WHERE format = 'oldschool' AND status IN ('Restricted', 'Banned');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT T1.text, T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Kev Walker' ORDER BY T1.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T2.name, T3.format FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode INNER JOIN legalities AS T3 ON T2.uuid = T3.uuid WHERE T1.name = 'Hour of Devastation'\t----- bird -----\tcard_games",
    "529": "SELECT T2.name FROM sets AS T2 LEFT JOIN set_translations AS T1 ON T2.code = T1.setCode AND T1.language = 'Japanese' WHERE T2.code IN (SELECT T1.setCode FROM set_translations AS T1 WHERE T1.language = 'Korean') AND T1.setCode IS NULL\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT T1.frameVersion, T1.name, T2.status FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams'\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT T2.DisplayName FROM users AS T2 INNER JOIN (SELECT OwnerUserId, SUM(ViewCount) AS TotalViews FROM posts GROUP BY OwnerUserId) AS T1 ON T2.Id = T1.OwnerUserId ORDER BY TotalViews DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND CreationDate > '2013-12-31';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(T2.Id) FROM posts AS T2 INNER JOIN users AS T1 ON T2.OwnerUserId = T1.Id WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ViewCount = (SELECT MAX(T3.ViewCount) FROM posts AS T3 INNER JOIN users AS T4 ON T3.OwnerUserId = T4.Id WHERE T4.DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "541": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(T1.CommentCount) FROM posts AS T1 WHERE T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(T1.AnswerCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score > 19\t----- bird -----\tcodebase_community",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT T3.Body FROM tags AS T1 INNER JOIN posts AS T3 ON T1.ExcerptPostId = T3.Id WHERE T1.Count = (SELECT MAX(Count) FROM tags)\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "552": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND STRFTIME('%Y', T1.Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT users.DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId GROUP BY badges.UserId ORDER BY COUNT(badges.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_count) FROM (SELECT COUNT(badges.Id) AS badge_count FROM users LEFT JOIN badges ON users.Id = badges.UserId WHERE users.Views > 200 GROUP BY users.Id)\t----- bird -----\tcodebase_community",
    "557": "SELECT (SUM(CASE WHEN T2.Age > 65 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(T1.Id), 0)) * 100 AS percentage  FROM posts AS T1  INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id  WHERE T1.Score > 5\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(Id) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT T2.Title FROM posts AS T2 INNER JOIN comments AS T1 ON T2.Id = T1.PostId WHERE T1.Score = (SELECT MAX(Score) FROM comments)\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT P.FavoriteCount FROM posts AS P INNER JOIN comments AS C ON P.Id = C.PostId WHERE C.UserId = 3025 AND C.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "564": "SELECT T2.Text FROM comments AS T2 INNER JOIN posts AS T1 ON T1.Id = T2.PostId WHERE T1.ParentId = 107829 LIMIT 1\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN T2.ClosedDate IS NULL THEN 'not well-finished' ELSE 'well-finished' END AS PostStatus FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "566": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 65041\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "568": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Body LIKE '%data visualization%' OR T2.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(P.OwnerUserId) * 1.0 / NULLIF(COUNT(V.UserId), 0) FROM users AS U LEFT JOIN posts AS P ON U.Id = P.OwnerUserId LEFT JOIN votes AS V ON U.Id = V.UserId WHERE U.Id = 24\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName, Id FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT DISTINCT users.DisplayName  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE badges.Name = 'Necromancer'  LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
    "582": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score), T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny' GROUP BY T2.WebsiteUrl\t----- bird -----\tcodebase_community",
    "584": "SELECT comments.Text FROM comments WHERE UserId IN (SELECT UserId FROM postHistory WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?'))\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) FROM votes INNER JOIN posts ON posts.Id = votes.PostId WHERE posts.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT DISTINCT T3.DisplayName FROM votes AS T1  INNER JOIN posts AS T2 ON T1.PostId = T2.Id  INNER JOIN users AS T3 ON T1.UserId = T3.Id  WHERE T1.BountyAmount = 50 AND T2.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT T1.Title, GROUP_CONCAT(T4.Text) AS Comments, AVG(T1.ViewCount) AS AverageViewCount FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId INNER JOIN tags AS T3 ON T2.RelatedPostId = T3.Id INNER JOIN comments AS T4 ON T1.Id = T4.PostId WHERE T3.TagName = 'humor' GROUP BY T1.Id\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT T2.Id FROM users AS T2 INNER JOIN posts AS T1 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount = (SELECT MIN(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND Date BETWEEN '2011-01-01' AND '2011-12-31'\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.Id HAVING COUNT(T2.Id) > 5\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN (SELECT T2.UserId FROM badges AS T2 WHERE T2.Name IN ('Teacher', 'Supporter') GROUP BY T2.UserId HAVING COUNT(DISTINCT T2.Name) = 2) AS T3 ON T1.Id = T3.UserId WHERE T1.Location LIKE '%New York%'\t----- bird -----\tcodebase_community",
    "594": "SELECT T1.OwnerUserId, T2.Reputation  FROM posts AS T1  INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id  WHERE T1.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT DISTINCT T3.Id FROM users AS T3 INNER JOIN postHistory AS T1 ON T3.Id = T1.UserId INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount >= 1000 GROUP BY T1.PostId, T3.Id HAVING COUNT(T1.Id) = 1\t----- bird -----\tcodebase_community",
    "596": "SELECT DISTINCT B.Name FROM badges AS B INNER JOIN (SELECT C.UserId FROM comments AS C GROUP BY C.UserId HAVING COUNT(C.Id) = (SELECT MAX(CommentCount) FROM (SELECT COUNT(Id) AS CommentCount FROM comments GROUP BY UserId))) AS MaxUsers ON B.UserId = MaxUsers.UserId\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(*) FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE U.Location LIKE '%India%' AND B.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "WITH badge_counts AS (     SELECT          COUNT(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 END) AS count_2011,         COUNT(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 END) AS count_2010     FROM badges     WHERE Name = 'Student' ) SELECT ((count_2011 - count_2010) / count_2010) * 100 AS percentage_difference FROM badge_counts;\t----- bird -----\tcodebase_community",
    "599": "SELECT postHistory.PostHistoryTypeId, COUNT(DISTINCT comments.UserId) FROM postHistory LEFT JOIN comments ON comments.PostId = 3720 WHERE postHistory.PostId = 3720 GROUP BY postHistory.PostHistoryTypeId\t----- bird -----\tcodebase_community",
    "600": "SELECT T2.Id, T2.ViewCount, T2.Score, T2.FavoriteCount  FROM postLinks AS T1  INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id OR T1.PostId = T2.Id  WHERE T1.PostId = 61217 OR T1.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT T1.Id, T1.OwnerUserId FROM posts AS T1 WHERE T1.Score > 60\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND CreaionDate BETWEEN '2011-01-01' AND '2011-12-31';\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(T2.UpVotes) AS AverageUpVotes, AVG(T2.Age) AS AverageUserAge  FROM users AS T2  INNER JOIN (SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING COUNT(Id) > 10) AS T1  ON T2.Id = T1.OwnerUserId\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT DISTINCT T1.Name  FROM badges AS T1  INNER JOIN users AS T2 ON T1.UserId = T2.Id  WHERE T2.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT T1.Reputation FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (COUNT(DISTINCT T1.UserId) * 100.0 / COUNT(T2.Id)) AS percentage FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "615": "SELECT (SUM(CASE WHEN users.Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) * 100.0 / COUNT(badges.UserId)) AS percentage FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "616": "SELECT Score FROM comments WHERE PostId = (SELECT Id FROM posts WHERE CreationDate = '2010-07-19 19:19:56.0')\t----- bird -----\tcodebase_community",
    "617": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT DISTINCT U.Age FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE U.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE U.Age BETWEEN 19 AND 65 AND B.Name = 'Supporter';\t----- bird -----\tcodebase_community",
    "620": "SELECT T1.Views FROM users AS T1 WHERE T1.Id IN (SELECT UserId FROM badges WHERE Date = '2010-07-19 19:39:08.0')\t----- bird -----\tcodebase_community",
    "621": "SELECT DISTINCT badges.Name  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE users.Reputation = (SELECT MIN(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "622": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Age > 65 AND T2.Name = 'Supporter';\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location LIKE '%New York%'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE CreationDate LIKE '2010%';\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "WITH UserViews AS (SELECT T1.Id, T1.DisplayName, SUM(T2.ViewCount) AS total_views FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId GROUP BY T1.Id) SELECT Id, DisplayName FROM UserViews WHERE total_views = (SELECT MAX(total_views) FROM UserViews);\t----- bird -----\tcodebase_community",
    "629": "SELECT (COUNT(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 END) * 1.0) / (COUNT(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 END) * 1.0) FROM votes\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT T2.Tags FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'John Salvatier'\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo'\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(T1.ViewCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN votes AS T3 ON T1.Id = T3.PostId WHERE T2.DisplayName = 'Matt Parker' GROUP BY T1.Id HAVING COUNT(T3.PostId) > 4\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(DISTINCT T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T3.DisplayName = 'Neil McGuigan' AND T1.Score < 60\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id LEFT JOIN comments AS T3 ON T1.Id = T3.PostId WHERE T2.DisplayName = 'Mark Meckes' AND T3.PostId IS NULL AND T1.Tags IS NOT NULL\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT T1.DisplayName  FROM users AS T1  INNER JOIN badges AS T2 ON T1.Id = T2.UserId  WHERE T2.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT (SUM(CASE WHEN posts.Body LIKE '%R%' THEN 1 ELSE 0 END) * 100.0 / COUNT(posts.Id)) AS percentage  FROM users  INNER JOIN posts ON users.Id = posts.OwnerUserId  WHERE users.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "640": "SELECT (COALESCE(SUM(CASE WHEN u.DisplayName = 'mornington' THEN p.ViewCount ELSE 0 END), 0) - COALESCE(SUM(CASE WHEN u.DisplayName = 'Amos' THEN p.ViewCount ELSE 0 END), 0)) AS ViewCountDifference FROM posts p JOIN users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND Date BETWEEN '2014-01-01' AND '2014-12-31'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(Id) FROM posts WHERE CreaionDate = '2010-07-21';\t----- bird -----\tcodebase_community",
    "643": "SELECT T2.DisplayName, T2.Age FROM users AS T2 WHERE T2.Id IN (SELECT T1.OwnerUserId FROM posts AS T1 WHERE T1.ViewCount = (SELECT MAX(ViewCount) FROM posts))\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = 13;\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date BETWEEN '2011-01-01 00:00:00' AND '2011-12-31 23:59:59' AND T2.Location LIKE '%North Pole%'\t----- bird -----\tcodebase_community",
    "648": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(T1.PostId), T2.LastEditDate FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY T2.LastEditDate\t----- bird -----\tcodebase_community",
    "650": "SELECT T1.LastAccessDate, T1.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM posts AS T2 INNER JOIN postLinks AS T1 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'How to tell if something happened in a data set which monitors a value over time')\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.Id AS PostId, T2.Name AS BadgeName  FROM posts AS T1  INNER JOIN badges AS T2 ON T1.OwnerUserId = T2.UserId  INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id  WHERE T3.DisplayName = 'Samuel'  AND STRFTIME('%Y', T1.CreaionDate) = '2013'  AND STRFTIME('%Y', T2.Date) = '2013'\t----- bird -----\tcodebase_community",
    "653": "SELECT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT T3.DisplayName, T3.Location FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T1.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT related_posts.Title, postLinks.LinkTypeId  FROM postLinks  INNER JOIN posts AS related_posts ON postLinks.RelatedPostId = related_posts.Id  INNER JOIN posts AS main_post ON postLinks.PostId = main_post.Id  WHERE main_post.Title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT T2.OwnerDisplayName FROM posts AS T1 INNER JOIN posts AS T2 ON T1.ParentId = T2.Id WHERE T1.Score = (SELECT MAX(T3.Score) FROM posts AS T3 WHERE T3.ParentId IS NOT NULL)\t----- bird -----\tcodebase_community",
    "657": "SELECT T1.DisplayName, T1.WebsiteUrl  FROM users AS T1  INNER JOIN votes AS T2 ON T1.Id = T2.UserId  WHERE T2.VoteTypeId = 8 AND T2.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts AS P INNER JOIN votes AS V ON P.Id = V.PostId WHERE STRFTIME('%Y', V.CreationDate) = '2011' AND V.BountyAmount = 50\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE CreaionDate >= '2010-07-19 00:00:00' AND CreaionDate < '2010-07-20 00:00:00';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(monthly_count) FROM (SELECT COUNT(postLinks.Id) AS monthly_count FROM postLinks INNER JOIN posts ON postLinks.PostId = posts.Id WHERE postLinks.CreationDate LIKE '2010%' AND posts.AnswerCount <= 2 GROUP BY strftime('%m', postLinks.CreationDate))\t----- bird -----\tcodebase_community",
    "666": "SELECT T1.Id FROM posts AS T1 WHERE T1.Score = (SELECT MAX(T2.Score) FROM posts AS T2 INNER JOIN votes AS T3 ON T2.Id = T3.PostId WHERE T3.UserId = 1465)\t----- bird -----\tcodebase_community",
    "667": "SELECT T2.Title FROM posts AS T2 INNER JOIN postLinks AS T1 ON T2.Id = T1.PostId WHERE T1.CreationDate = (SELECT MIN(CreationDate) FROM postLinks)\t----- bird -----\tcodebase_community",
    "668": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN (SELECT UserId FROM badges GROUP BY UserId ORDER BY COUNT(Id) DESC LIMIT 1) AS T2 ON T1.Id = T2.UserId\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(T2.CreationDate) FROM votes AS T2 INNER JOIN users AS T1 ON T2.UserId = T1.Id WHERE T1.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreaionDate) FROM posts INNER JOIN users ON users.Id = posts.OwnerUserId WHERE users.Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "671": "SELECT T2.DisplayName  FROM badges AS T1  INNER JOIN users AS T2 ON T1.UserId = T2.Id  WHERE T1.Name = 'Autobiographer'  ORDER BY T1.Date ASC  LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT U.Id) FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId WHERE U.Location LIKE '%United Kingdom%' GROUP BY U.Id HAVING SUM(P.FavoriteCount) >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(post_count) FROM (SELECT COUNT(votes.PostId) AS post_count FROM votes WHERE votes.UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users)) GROUP BY votes.UserId)\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Reputation > 2000 AND T2.ViewCount > 1000\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Jay Stevens') AND CreaionDate LIKE '2010%'\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' AND T1.ViewCount = (SELECT MAX(T1.ViewCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky')\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts WHERE Score = (SELECT MAX(Score) FROM posts)\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(T2.Score) FROM posts AS T2 INNER JOIN users AS T1 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ViewCount > 20000 AND STRFTIME('%Y', T2.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "682": "SELECT T1.Id, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.CreaionDate BETWEEN '2010-01-01' AND '2010-12-31' AND (T1.Score = (SELECT MAX(Score) FROM posts WHERE CreaionDate BETWEEN '2010-01-01' AND '2010-12-31') OR T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE CreaionDate BETWEEN '2010-01-01' AND '2010-12-31'))\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(CASE WHEN T2.Reputation > 1000 AND STRFTIME('%Y', T1.CreaionDate) = '2011' THEN 1 END) * 100.0) / COUNT(T1.Id) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id\t----- bird -----\tcodebase_community",
    "684": "SELECT (COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) * 100.0) / COUNT(*) AS percentage_of_teenage_users FROM users\t----- bird -----\tcodebase_community",
    "685": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE LOWER(T1.Title) = LOWER('Computer Game Datasets')\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts WHERE ViewCount IS NOT NULL);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(c.Id) FROM comments c INNER JOIN posts p ON c.PostId = p.Id WHERE p.Score = (SELECT MAX(Score) FROM posts);\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(T1.Id) FROM posts AS T1 LEFT JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount > 35000 AND T2.PostId IS NULL\t----- bird -----\tcodebase_community",
    "689": "SELECT T2.DisplayName, T2.Location FROM posts AS T1 LEFT JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183\t----- bird -----\tcodebase_community",
    "690": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' AND T1.Date = (SELECT MAX(Date) FROM badges WHERE UserId = T2.Id)\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM (SELECT U.Id FROM users AS U INNER JOIN votes AS V ON U.Id = V.UserId WHERE U.Age BETWEEN 19 AND 65 AND V.VoteTypeId = 2 GROUP BY U.Id HAVING COUNT(V.VoteTypeId) > 5000) AS Subquery;\t----- bird -----\tcodebase_community",
    "692": "SELECT JULIANDAY(B.Date) - JULIANDAY(U.CreationDate) AS time_difference FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE U.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(T2.Id) AS PostCount, COUNT(T3.Id) AS CommentCount FROM users AS T1 LEFT JOIN posts AS T2 ON T1.Id = T2.OwnerUserId LEFT JOIN comments AS T3 ON T1.Id = T3.UserId WHERE T1.CreationDate = (SELECT MAX(CreationDate) FROM users)\t----- bird -----\tcodebase_community",
    "694": "SELECT C.Text, U.DisplayName FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id INNER JOIN users AS U ON C.UserId = U.Id WHERE P.Title = 'Analysing wind data with R' ORDER BY C.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE Tags LIKE '%<careers>%'\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT      (SELECT COUNT(*) FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.Title = 'Clustering 1D data') +      (SELECT COUNT(*) FROM posts AS A WHERE A.ParentId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')) AS TotalCount\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(DISTINCT T1.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.BountyAmount > 30\t----- bird -----\tcodebase_community",
    "701": "SELECT (COUNT(CASE WHEN Score > 50 THEN 1 END) * 100.0 / COUNT(*)) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users))\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Body LIKE '%linear regression%' OR posts.Title LIKE '%linear regression%'\t----- bird -----\tcodebase_community",
    "707": "SELECT MAX(comments.Score) FROM posts INNER JOIN comments ON comments.PostId = posts.Id WHERE posts.ViewCount BETWEEN 100 AND 150\t----- bird -----\tcodebase_community",
    "708": "SELECT T2.CreationDate, T2.Age FROM users AS T2 INNER JOIN comments AS T1 ON T1.UserId = T2.Id WHERE T1.Text LIKE '%website%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(C.Id) FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.CommentCount = 1 AND C.Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(users.Id) FROM users INNER JOIN comments ON users.Id = comments.UserId WHERE comments.Score = 0 AND users.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.Id, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT users.DisplayName  FROM comments  INNER JOIN users ON comments.UserId = users.Id  WHERE comments.Score BETWEEN 1 AND 5 AND users.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(CASE WHEN U.UpVotes = 0 THEN 1 END) * 100.0 / COUNT(U.Id)) AS percentage FROM comments AS C INNER JOIN users AS U ON C.UserId = U.Id WHERE C.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT hero_power.hero_id) FROM hero_power INNER JOIN superhero ON hero_power.hero_id = superhero.id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT T2.full_name FROM superhero AS T2 WHERE T2.id IN (SELECT T1.hero_id FROM hero_power AS T1 GROUP BY T1.hero_id HAVING COUNT(T1.power_id) > 15)\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.eye_colour_id = (SELECT T2.id FROM colour AS T2 WHERE T2.colour = 'Blue')\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT T1.eye_colour_id, COUNT(T1.eye_colour_id) AS popularity FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' GROUP BY T1.eye_colour_id ORDER BY popularity DESC\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.height_cm > 0 AND T1.height_cm IS NOT NULL\t----- bird -----\tsuperhero",
    "730": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.publisher_name = 'Marvel Comics' AND T4.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name  FROM publisher AS p  JOIN superhero AS s ON p.id = s.publisher_id  JOIN hero_attribute AS ha ON s.id = ha.hero_id  WHERE ha.attribute_value = (SELECT MIN(attribute_value)                              FROM hero_attribute                              WHERE attribute_id = (SELECT id                                                    FROM attribute                                                    WHERE attribute_name = 'Speed'))  AND ha.attribute_id = (SELECT id                         FROM attribute                         WHERE attribute_name = 'Speed');\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT T2.superhero_name  FROM hero_attribute AS T1  INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id  INNER JOIN superhero AS T2 ON T1.hero_id = T2.id  WHERE T3.attribute_name = 'Intelligence'  AND T1.attribute_value = (SELECT MIN(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence')\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_attribute AS T1 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T1.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "WITH PowerCounts AS (SELECT T2.hero_id, COUNT(T2.power_id) AS power_count FROM hero_power AS T2 GROUP BY T2.hero_id) SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN PowerCounts AS PC ON T1.id = PC.hero_id WHERE PC.power_count = (SELECT MAX(power_count) FROM PowerCounts);\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT (COUNT(CASE WHEN T4.alignment = 'Neutral' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_neutral, COUNT(CASE WHEN T4.alignment = 'Neutral' AND T1.publisher_name = 'Marvel Comics' THEN 1 END) AS count_marvel FROM superhero AS T3 INNER JOIN publisher AS T1 ON T3.publisher_id = T1.id INNER JOIN alignment AS T4 ON T3.alignment_id = T4.id\t----- bird -----\tsuperhero",
    "744": "SELECT ABS(SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END))  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  WHERE T2.publisher_name IN ('DC Comics', 'Marvel Comics')\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(id) FROM superhero WHERE full_name IS NULL OR full_name = '-';\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.gender_id = (SELECT id FROM gender WHERE gender = 'Male') LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.height_cm BETWEEN 170 AND 190 AND T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'No Colour')\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT DISTINCT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT T3.colour FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.race = 'Human' AND T1.height_cm = 185\t----- bird -----\tsuperhero",
    "759": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = (SELECT MAX(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "760": "SELECT (COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(*)) AS percentage  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  WHERE T1.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT superhero_name FROM superhero WHERE gender_id = 1 AND weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero);\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T1.power_id ORDER BY COUNT(T1.power_id) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT T2.full_name FROM superhero AS T2 WHERE T2.id = (SELECT T1.hero_id FROM hero_attribute AS T1 INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' AND T1.attribute_value = (SELECT MAX(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(T1.height_cm) AS average_height, AVG(T1.weight_kg) AS average_weight FROM superhero AS T1 LEFT JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE (T1.skin_colour_id IS NULL OR T2.colour = 'No Colour') AND T1.height_cm > 0 AND T1.weight_kg > 0\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_attribute AS T1 ON T2.id = T1.hero_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id INNER JOIN attribute AS T4 ON T1.attribute_id = T4.id WHERE T4.attribute_name = 'Durability' AND T3.publisher_name = 'Dark Horse Comics' ORDER BY T1.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abe Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_power AS T1 ON T2.id = T1.hero_id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T2.colour AS eye_colour, T3.colour AS hair_colour, T4.colour AS skin_colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN colour AS T4 ON T1.skin_colour_id = T4.id INNER JOIN publisher AS T5 ON T1.publisher_id = T5.id WHERE T1.gender_id = 2 AND T5.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T2.publisher_name, T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.hair_colour_id = T1.skin_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT T2.alignment, T3.race, T4.publisher_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT CASE WHEN COUNT(T1.id) = 0 THEN 0 ELSE (COUNT(T1.id) * 1.0 / (SELECT COUNT(T2.id) FROM superhero AS T2 INNER JOIN gender AS T3 ON T2.gender_id = T3.id WHERE T3.gender = 'Female')) * 100 END AS percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female' AND T3.colour = 'Blue'\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T2.power_id) FROM hero_power AS T2 INNER JOIN superhero AS T1 ON T2.hero_id = T1.id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T2.eye_colour_id = T1.id INNER JOIN colour AS T3 ON T2.skin_colour_id = T3.id WHERE T3.colour = 'Gold'\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN alignment AS T1 ON T2.alignment_id = T1.id WHERE T1.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "WITH MaxStrength AS (SELECT MAX(T1.attribute_value) AS max_value FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength') SELECT COUNT(T3.hero_id) FROM hero_attribute AS T3 WHERE T3.attribute_value = (SELECT max_value FROM MaxStrength)\t----- bird -----\tsuperhero",
    "787": "SELECT T3.race, T2.alignment FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T1.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT (COUNT(T1.id) * 1.0 / (SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female') * 100) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics' AND T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "790": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler');\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) FROM superhero WHERE height_cm > 0 GROUP BY superhero_name\t----- bird -----\tsuperhero",
    "792": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.race = 'God / Eternal' AND T3.gender = 'Male'\t----- bird -----\tsuperhero",
    "794": "SELECT T3.superhero_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Speed' ORDER BY T1.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "796": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'Brown')\t----- bird -----\tsuperhero",
    "798": "SELECT DISTINCT P.publisher_name  FROM superhero AS S  INNER JOIN publisher AS P ON S.publisher_id = P.id  WHERE S.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT (COUNT(CASE WHEN T2.colour = 'Blue' THEN T1.id END) * 1.0 / COUNT(T1.id)) * 100 AS percentage FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id\t----- bird -----\tsuperhero",
    "801": "SELECT COUNT(CASE WHEN gender.gender = 'Male' THEN superhero.id END) * 1.0 / NULLIF(COUNT(CASE WHEN gender.gender = 'Female' THEN superhero.id END), 0) AS ratio FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.weight_kg IS NULL OR T1.weight_kg = 0\t----- bird -----\tsuperhero",
    "806": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "811": "SELECT alignment.alignment, superpower.power_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT DISTINCT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T3.attribute_value) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "814": "SELECT DISTINCT C.colour FROM hero_attribute AS HA INNER JOIN superhero AS S ON HA.hero_id = S.id INNER JOIN colour AS C ON S.skin_colour_id = C.id WHERE HA.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.gender = 'Female' AND T3.alignment = 'Good'\t----- bird -----\tsuperhero",
    "816": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT T4.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN race AS T4 ON T1.race_id = T4.id WHERE T2.colour = 'Blue' AND T3.gender = 'Male'\t----- bird -----\tsuperhero",
    "818": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM superhero AS T2 INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T3.alignment = 'Bad')) AS percentage FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad' AND T3.gender = 'Female'\t----- bird -----\tsuperhero",
    "819": "SELECT (COUNT(CASE WHEN T2.colour = 'Blue' THEN T1.id END) - COUNT(CASE WHEN T2.colour = 'No Colour' THEN T1.id END)) AS difference FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE (T1.weight_kg = 0 OR T1.weight_kg IS NULL)\t----- bird -----\tsuperhero",
    "820": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Strength' AND T3.superhero_name = 'Hulk'\t----- bird -----\tsuperhero",
    "821": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_power AS T1 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'control wind' ORDER BY T2.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.weight_kg = (SELECT MAX(T1.weight_kg) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.race != 'Human' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(DISTINCT T1.hero_id) FROM hero_attribute AS T1 WHERE T1.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') AND T1.attribute_value = (SELECT MAX(T2.attribute_value) FROM hero_attribute AS T2 WHERE T2.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed'))\t----- bird -----\tsuperhero",
    "829": "SELECT (SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  WHERE T2.publisher_name IN ('Marvel Comics', 'DC Comics');\t----- bird -----\tsuperhero",
    "830": "SELECT T2.attribute_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = 'Black Panther' AND T1.attribute_value = (SELECT MIN(T4.attribute_value) FROM hero_attribute AS T4 INNER JOIN superhero AS T5 ON T4.hero_id = T5.id WHERE T5.superhero_name = 'Black Panther')\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT (SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(T1.id), 0)) * 100 AS percentage  FROM superhero AS T1  INNER JOIN gender AS T2 ON T1.gender_id = T2.id  INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id  WHERE T3.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT (COUNT(CASE WHEN T3.alignment = 'Good' THEN 1 END) * 100.0 / COUNT(*)) AS good_percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE SUBSTR(full_name, 1, INSTR(full_name, ' ') - 1) = 'John';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'Brown'\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral' AND T1.height_cm IS NOT NULL AND T1.height_cm != 0\t----- bird -----\tsuperhero",
    "843": "SELECT T1.hero_id FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT T3.power_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T2.height_cm > 0.8 * (SELECT AVG(height_cm) FROM superhero)\t----- bird -----\tsuperhero",
    "846": "SELECT T2.driverRef FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.position > 15 AND T1.q2 IS NULL AND T1.raceId = 20\t----- bird -----\tformula_1",
    "847": "SELECT T3.surname FROM qualifying AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.raceId = 19 AND T1.q2 = (SELECT MIN(T2.q2) FROM qualifying AS T2 WHERE T2.raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT T1.url FROM races AS T1 WHERE T1.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya')\t----- bird -----\tformula_1",
    "850": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T1.position FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T4 ON T1.raceId = T4.raceId INNER JOIN circuits AS T3 ON T4.circuitId = T3.circuitId WHERE T2.constructorRef = 'renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN ('Asia', 'Europe')\t----- bird -----\tformula_1",
    "853": "SELECT DISTINCT races.name  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT T1.name, T1.date, T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON races.circuitId = circuits.circuitId WHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.points = 1 AND T3.raceId = 24\t----- bird -----\tformula_1",
    "859": "SELECT T2.q1 FROM qualifying AS T2 INNER JOIN drivers AS T1 ON T1.driverId = T2.driverId WHERE T1.forename = 'Bruno' AND T1.surname = 'Senna' AND T2.raceId = 354\t----- bird -----\tformula_1",
    "860": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '0:01:40' AND T1.raceId = 355\t----- bird -----\tformula_1",
    "861": "SELECT T2.number FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q3 = '0:01.540' AND T1.raceId = 903\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.name = 'Bahrain Grand Prix' AND T2.year = 2007 AND T3.status != 'Finished'\t----- bird -----\tformula_1",
    "863": "SELECT T2.url FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.date = '2015-11-29' AND T3.status = 'Finished'\t----- bird -----\tformula_1",
    "865": "SELECT T1.forename, T1.surname  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN status AS T3 ON T2.statusId = T3.statusId  WHERE T2.raceId = 592 AND T3.status = 'Finished'  AND T1.dob = (SELECT MIN(T4.dob)                FROM drivers AS T4                INNER JOIN results AS T5 ON T4.driverId = T5.driverId                INNER JOIN status AS T6 ON T5.statusId = T6.statusId                WHERE T5.raceId = 592 AND T6.status = 'Finished');\t----- bird -----\tformula_1",
    "866": "SELECT d.url FROM drivers AS d INNER JOIN lapTimes AS l ON d.driverId = l.driverId WHERE l.time = '0:01:27' AND l.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT T2.nationality  FROM results AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  WHERE T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933) AND T1.raceId = 933\t----- bird -----\tformula_1",
    "868": "SELECT C.lat, C.lng FROM circuits AS C INNER JOIN races AS R ON C.circuitId = R.circuitId WHERE R.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT url FROM constructors WHERE constructorId = (SELECT constructorId FROM constructorResults WHERE raceId = 9 ORDER BY points DESC LIMIT 1)\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying AS Q INNER JOIN drivers AS D ON Q.driverId = D.driverId WHERE D.forename = 'Lucas' AND D.surname = 'di Grassi' AND Q.raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '00:01:15' AND T1.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT T3.code FROM qualifying AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.raceId = 45 AND T1.q3 = (SELECT T1.q3 FROM qualifying AS T1 WHERE T1.raceId = 45 ORDER BY ABS(STRFTIME('%s', T1.q3) - STRFTIME('%s', '0:01:33')) LIMIT 1)\t----- bird -----\tformula_1",
    "873": "SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren' AND T1.raceId = 743\t----- bird -----\tformula_1",
    "874": "SELECT T3.forename, T3.surname FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'San Marino Grand Prix' AND T2.year = 2006 AND T1.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*) FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN status AS S ON R.statusId = S.statusId WHERE RA.date = '2015-11-29' AND S.status != 'Finished'\t----- bird -----\tformula_1",
    "877": "SELECT MIN(D.dob) FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN status AS S ON R.statusId = S.statusId WHERE S.status = 'Finished' AND R.raceId = 872\t----- bird -----\tformula_1",
    "878": "SELECT CONCAT(T1.forename, ' ', T1.surname) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 348 AND T2.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE raceId = 348)\t----- bird -----\tformula_1",
    "879": "SELECT T2.nationality FROM drivers AS T2 INNER JOIN results AS T1 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "880": "SELECT ((SELECT milliseconds FROM lapTimes WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) - (SELECT milliseconds FROM lapTimes WHERE raceId = 854 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta'))) / (SELECT milliseconds FROM lapTimes WHERE raceId = 854 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) * 100 AS percentage_difference;\t----- bird -----\tformula_1",
    "881": "SELECT COUNT(CASE WHEN status.status = 'Finished' THEN 1 END) * 1.0 / COUNT(results.driverId) FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN status ON results.statusId = status.statusId WHERE races.date = '1983-07-16'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) AS race_count, GROUP_CONCAT(name ORDER BY name DESC) AS race_names FROM races WHERE year = 2005;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE date = (SELECT MIN(date) FROM races);\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE round = (SELECT MAX(round) FROM races WHERE year = 1999) AND year = 1999\t----- bird -----\tformula_1",
    "886": "SELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year GROUP BY T1.year ORDER BY COUNT(T2.raceId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "887": "SELECT R1.name  FROM races AS R1  LEFT JOIN races AS R2 ON R1.name = R2.name AND R2.year = 2000  WHERE R1.year = 2017 AND R2.name IS NULL;\t----- bird -----\tformula_1",
    "888": "SELECT C.country, C.name, C.location FROM circuits AS C INNER JOIN races AS R ON C.circuitId = R.circuitId WHERE R.name = 'European Grand Prix' AND R.year = (SELECT MIN(year) FROM races WHERE name = 'European Grand Prix')\t----- bird -----\tformula_1",
    "889": "SELECT MAX(T3.year) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN seasons AS T3 ON T2.year = T3.year WHERE T1.name = 'Brands Hatch' AND T2.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT T3.year) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN seasons AS T3 ON T2.year = T3.year WHERE T1.name = 'Silverstone Circuit' AND T2.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT T3.forename, T3.surname FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.name = 'Singapore Grand Prix' AND T1.year = 2010 ORDER BY T2.position\t----- bird -----\tformula_1",
    "892": "SELECT T2.forename || ' ' || T2.surname, T1.points FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.points = (SELECT MAX(points) FROM driverStandings)\t----- bird -----\tformula_1",
    "893": "SELECT T2.forename || ' ' || T2.surname AS full_name, T1.points FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Chinese Grand Prix' AND T3.year = 2017 ORDER BY T1.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT T2.forename, T2.surname, T3.name, MIN(T1.milliseconds) AS best_lap_time  FROM lapTimes AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T1.raceId = T3.raceId  GROUP BY T2.forename, T2.surname, T3.name  ORDER BY best_lap_time ASC  LIMIT 1;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T3.time) FROM lapTimes AS T3 WHERE T3.driverId = (SELECT T1.driverId FROM drivers AS T1 WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton') AND T3.raceId = (SELECT T2.raceId FROM races AS T2 WHERE T2.year = 2009 AND T2.name = 'Malaysian Grand Prix')\t----- bird -----\tformula_1",
    "896": "SELECT (COUNT(CASE WHEN results.position != 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year >= 2010\t----- bird -----\tformula_1",
    "897": "SELECT D.forename || ' ' || D.surname AS driver_name, D.nationality, MAX(DS.points) AS max_points  FROM drivers AS D  INNER JOIN driverStandings AS DS ON D.driverId = DS.driverId  WHERE DS.wins = (SELECT MAX(wins) FROM driverStandings)  GROUP BY D.driverId;\t----- bird -----\tformula_1",
    "898": "SELECT strftime('%Y', 'now') - strftime('%Y', dob) AS age, forename || ' ' || surname AS name FROM drivers WHERE nationality = 'Japanese' AND dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'Japanese')\t----- bird -----\tformula_1",
    "899": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.name HAVING COUNT(T2.raceId) = 4\t----- bird -----\tformula_1",
    "900": "SELECT T1.name, T1.location, T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT T1.name, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.date BETWEEN '2005-09-01' AND '2005-09-30'\t----- bird -----\tformula_1",
    "902": "SELECT T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 20\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T3.resultId) FROM results AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN circuits AS T1 ON T2.circuitId = T1.circuitId INNER JOIN drivers AS T4 ON T3.driverId = T4.driverId WHERE T4.forename = 'Michael' AND T4.surname = 'Schumacher' AND T3.positionText = '1' AND T1.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "904": "SELECT T3.name, T3.year FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher' AND T1.fastestLapTime = (SELECT MIN(T1.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher')\t----- bird -----\tformula_1",
    "905": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Eddie' AND T3.surname = 'Irvine' AND T2.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT MIN(T1.date) AS first_race_date, T3.points  FROM races AS T1  INNER JOIN drivers AS T2 ON T1.raceId = T2.driverId  INNER JOIN results AS T3 ON T1.raceId = T3.raceId  WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' GROUP BY T1.raceId  ORDER BY T1.date ASC  LIMIT 1\t----- bird -----\tformula_1",
    "907": "SELECT T1.name, T2.country FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2017 ORDER BY T1.date\t----- bird -----\tformula_1",
    "908": "SELECT T3.name, T3.year, T2.location FROM results AS T1 INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T2 ON T3.circuitId = T2.circuitId WHERE T1.laps = (SELECT MAX(laps) FROM results)\t----- bird -----\tformula_1",
    "909": "SELECT (SUM(CASE WHEN T2.country = 'Germany' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.raceId)) AS percentage  FROM races AS T1  INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId  WHERE T1.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT circuits.name FROM circuits WHERE lat = (SELECT MAX(lat) FROM circuits WHERE circuits.name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring'))\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits WHERE alt IS NOT NULL);\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL OR code = '';\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT T2.year FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT T1.name, T1.date, T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.name = 'Abu Dhabi Circuit'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT T3.url FROM races AS T1 INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "926": "SELECT MIN(lapTimes.time) FROM lapTimes INNER JOIN results ON lapTimes.raceId = results.raceId AND lapTimes.driverId = results.driverId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "928": "SELECT T3.driverRef FROM driverStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.position = 1 AND T2.name = 'Canadian Grand Prix' AND T2.year = 2007\t----- bird -----\tformula_1",
    "929": "SELECT DISTINCT T3.name  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT T3.name FROM races AS T3 INNER JOIN results AS T2 ON T3.raceId = T2.raceId INNER JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' GROUP BY T3.name ORDER BY MIN(T2.position) ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T3.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT R.position  FROM results AS R  INNER JOIN drivers AS D ON R.driverId = D.driverId  INNER JOIN races AS RA ON R.raceId = RA.raceId  WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND RA.year = 2008 AND RA.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT T3.forename, T3.surname FROM results AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.grid = 4 AND T2.year = 1989 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(*) FROM results AS R INNER JOIN races AS R2 ON R.raceId = R2.raceId WHERE R.position IS NOT NULL AND R2.year = 2008 AND R2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "936": "SELECT MIN(time) FROM lapTimes WHERE driverId = 1 AND raceId = 200\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.position = 2 AND T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "938": "SELECT drivers.forename, drivers.surname, drivers.url FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE results.position = 1 AND races.year = 2008 AND races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT D.driverId) FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE D.nationality = 'Uruguayan' AND RA.year = 2008 AND RA.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Chinese Grand Prix') AND positionText IS NOT NULL AND positionText GLOB '*[0-9]*'\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T1.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "942": "SELECT AVG(CAST(SUBSTR(fastestLapTime, 1, INSTR(fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(fastestLapTime, INSTR(fastestLapTime, ':') + 1) AS REAL)) FROM results WHERE driverId IN (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "943": "WITH RaceDetails AS (SELECT R1.raceId, MAX(R1.laps) AS maxLaps FROM results AS R1 INNER JOIN races AS R2 ON R1.raceId = R2.raceId WHERE R2.name = 'Australian Grand Prix' AND R2.year = 2008 GROUP BY R1.raceId) SELECT (COUNT(R1.driverId) * 100.0 / (SELECT COUNT(DISTINCT R3.driverId) FROM results AS R3 WHERE R3.raceId IN (SELECT R2.raceId FROM races AS R2 WHERE R2.name = 'Australian Grand Prix' AND R2.year = 2008))) AS rate FROM results AS R1 INNER JOIN RaceDetails AS RD ON R1.raceId = RD.raceId WHERE R1.laps = RD.maxLaps;\t----- bird -----\tformula_1",
    "944": "WITH race_info AS (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) SELECT ((SELECT milliseconds FROM results WHERE raceId = (SELECT raceId FROM race_info) AND position = (SELECT MAX(position) FROM results WHERE raceId = (SELECT raceId FROM race_info) AND statusId = (SELECT statusId FROM status WHERE status = 'Finished'))) - (SELECT milliseconds FROM results WHERE raceId = (SELECT raceId FROM race_info) AND position = 1)) / (SELECT milliseconds FROM results WHERE raceId = (SELECT raceId FROM race_info) AND position = 1) * 100 AS percentage_difference\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(T1.points) FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT T1.name  FROM constructors AS T1  INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId  WHERE T2.points = (SELECT MAX(points) FROM constructorResults) UNION SELECT T1.name  FROM constructors AS T1  INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId  WHERE T2.points = (SELECT MAX(points) FROM constructorStandings);\t----- bird -----\tformula_1",
    "950": "SELECT T2.name FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 0 AND T1.raceId = 291\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'Japanese' AND T1.points = 0 GROUP BY T1.constructorId HAVING COUNT(DISTINCT T1.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN results AS T3 ON T1.constructorId = T3.constructorId INNER JOIN lapTimes AS T2 ON T3.raceId = T2.raceId AND T3.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.lap > 50\t----- bird -----\tformula_1",
    "954": "SELECT (COUNT(T1.position) * 100.0 / COUNT(T1.raceId)) AS completion_percentage FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.nationality = 'Japanese' AND T3.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "955": "SELECT races.year, AVG(CASE WHEN INSTR(results.time, ':') > 0 THEN CAST(SUBSTR(results.time, 1, INSTR(results.time, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(results.time, INSTR(results.time, ':') + 1) AS REAL) ELSE CAST(results.time AS REAL) END) as average_time FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.position = 1 AND races.year < 1975 GROUP BY races.year\t----- bird -----\tformula_1",
    "956": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob > '1975-12-31' AND T2.position = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'Italian' AND T3.status != 'Finished'\t----- bird -----\tformula_1",
    "958": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes)\t----- bird -----\tformula_1",
    "959": "SELECT T1.fastestLap FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.position = 1 AND T2.year = 2009\t----- bird -----\tformula_1",
    "960": "SELECT AVG(T2.fastestLapSpeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "961": "SELECT T2.name, T2.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time = (SELECT MIN(time) FROM results)\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(DISTINCT D2.driverId) * 100.0) / (SELECT COUNT(DISTINCT driverId) FROM drivers) AS percentage FROM drivers AS D2 INNER JOIN lapTimes AS L ON D2.driverId = L.driverId INNER JOIN races AS R ON L.raceId = R.raceId WHERE R.year BETWEEN 2000 AND 2005 AND D2.dob < '1985-01-01' AND L.lap > 50\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.time < '02:00.00'\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "WITH TopYoungest AS (     SELECT driverId, code, nationality      FROM drivers      ORDER BY dob DESC      LIMIT 3 ) SELECT COUNT(*) AS NetherlandicCount FROM TopYoungest WHERE nationality LIKE '%Netherlands%';\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT T1.driverId, T1.forename, T1.surname, MIN(T2.time) AS earliest_lap_time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY T1.driverId ORDER BY earliest_lap_time ASC LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'German');\t----- bird -----\tformula_1",
    "972": "WITH FastestLaps AS (     SELECT raceId, MIN(time) AS fastestLapTime     FROM lapTimes     GROUP BY raceId ) SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN FastestLaps AS FL ON T2.raceId = FL.raceId AND T2.time = FL.fastestLapTime WHERE T1.dob BETWEEN '1971-01-01' AND '1971-12-31'\t----- bird -----\tformula_1",
    "973": "SELECT T1.driverId, T1.forename, T1.surname, MAX(T2.time)  FROM drivers AS T1  INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId  WHERE T1.nationality = 'Spanish' AND T1.dob < '1982-01-01'  GROUP BY T1.driverId  ORDER BY MAX(T2.time) DESC  LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT races.year FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "975": "SELECT T2.year FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId GROUP BY T2.year HAVING MAX(T1.milliseconds) = (SELECT MIN(maxMilliseconds) FROM (SELECT MAX(T1.milliseconds) AS maxMilliseconds FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId GROUP BY T2.year))\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM (SELECT driverId, MIN(time) AS fastest_time FROM lapTimes WHERE lap = 1 GROUP BY driverId) AS T ORDER BY fastest_time ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.raceId BETWEEN 50 AND 100 AND T3.status = 'Disqualified'\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(*) AS total, location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "979": "SELECT raceId FROM results WHERE position IS NOT NULL GROUP BY raceId ORDER BY COUNT(position) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 IS NOT NULL AND T2.raceId = 23\t----- bird -----\tformula_1",
    "981": "SELECT T3.year, T3.name, T3.date, T3.time FROM races AS T3 JOIN qualifying AS T2 ON T3.raceId = T2.raceId JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T1.driverId = (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1) ORDER BY T3.date LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'American' AND T3.status = 'Puncture'\t----- bird -----\tformula_1",
    "983": "SELECT T1.name, T1.url  FROM constructors AS T1  INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId  WHERE T1.nationality = 'Italian'  GROUP BY T1.constructorId  ORDER BY MAX(T2.points) DESC  LIMIT 1\t----- bird -----\tformula_1",
    "984": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.wins = (SELECT MAX(wins) FROM constructorStandings)\t----- bird -----\tformula_1",
    "985": "SELECT D.forename, D.surname FROM drivers AS D INNER JOIN lapTimes AS L ON D.driverId = L.driverId WHERE L.raceId = (SELECT R.raceId FROM races AS R WHERE R.name = 'French Grand Prix') AND L.lap = 3 AND L.time = (SELECT MAX(L2.time) FROM lapTimes AS L2 WHERE L2.raceId = L.raceId AND L2.lap = 3)\t----- bird -----\tformula_1",
    "986": "SELECT T2.name, MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.lap = 1 GROUP BY T2.raceId ORDER BY MIN(T1.milliseconds) LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2006 AND T2.name = 'United States Grand Prix' AND T1.position BETWEEN 1 AND 10\t----- bird -----\tformula_1",
    "988": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name, AVG(pitStops.duration) AS average_duration  FROM drivers  INNER JOIN pitStops ON drivers.driverId = pitStops.driverId  WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31'  GROUP BY drivers.driverId  ORDER BY average_duration ASC  LIMIT 3\t----- bird -----\tformula_1",
    "989": "SELECT T1.forename, T1.surname, T2.time FROM results AS T2 INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2008 AND T2.position = 1\t----- bird -----\tformula_1",
    "990": "SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN constructors AS T3 ON T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.position = 1\t----- bird -----\tformula_1",
    "991": "SELECT T1.forename, T1.surname, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'Austrian' AND T1.dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1",
    "992": "SELECT T1.forename, T1.surname, T1.url, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY T1.dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT T3.name, T3.nationality, SUM(T1.points) AS score FROM constructorResults AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN constructors AS T3 ON T1.constructorId = T3.constructorId WHERE T2.name = 'Monaco Grand Prix' AND T2.year BETWEEN 1980 AND 2010 GROUP BY T3.name, T3.nationality ORDER BY score DESC LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T3.points) FROM results AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(count) FROM (SELECT COUNT(raceId) AS count FROM races WHERE year BETWEEN 2000 AND 2009 GROUP BY year);\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT wins FROM driverStandings WHERE position = 91;\t----- bird -----\tformula_1",
    "999": "SELECT T2.name FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT CONCAT(T3.forename, ' ', T3.surname) FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId INNER JOIN circuits AS T4 ON T2.circuitId = T4.circuitId WHERE T1.position = 1 AND T2.round = 3 AND T4.name = 'Marina Bay Street Circuit' AND T2.year = 2008\t----- bird -----\tformula_1",
    "1002": "SELECT CONCAT(T1.forename, ' ', T1.surname) AS full_name, T1.nationality, T3.name AS first_race  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.dob = (SELECT MIN(dob) FROM drivers)  GROUP BY T1.driverId  ORDER BY MIN(T3.date)  LIMIT 1\t----- bird -----\tformula_1",
    "1003": "WITH HighestAccidentDriver AS (     SELECT R.driverId      FROM results AS R      INNER JOIN races AS RA ON R.raceId = RA.raceId      INNER JOIN status AS S ON R.statusId = S.statusId      WHERE S.status = 'Accident' AND RA.name = 'Canadian Grand Prix'      GROUP BY R.driverId      ORDER BY COUNT(*) DESC      LIMIT 1 ) SELECT COUNT(*)  FROM results AS R  INNER JOIN status AS S ON R.statusId = S.statusId  WHERE S.status = 'Accident' AND R.driverId = (SELECT driverId FROM HighestAccidentDriver);\t----- bird -----\tformula_1",
    "1004": "SELECT CONCAT(T1.forename, ' ', T1.surname), SUM(T2.wins) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob = (SELECT MIN(dob) FROM drivers) GROUP BY T1.driverId\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(milliseconds) FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT time FROM lapTimes WHERE milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(T2.duration) FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1008": "SELECT T3.lap FROM pitStops AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.name = 'Australian Grand Prix' AND T2.year = 2011\t----- bird -----\tformula_1",
    "1009": "SELECT T1.driverId, T1.duration FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2011\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(T1.time) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1011": "SELECT CONCAT(drivers.forename, ' ', drivers.surname)  FROM lapTimes  INNER JOIN results ON lapTimes.driverId = results.driverId  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE results.position <= 20  GROUP BY lapTimes.driverId  ORDER BY MIN(lapTimes.time)  LIMIT 1\t----- bird -----\tformula_1",
    "1012": "SELECT C.name FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN circuits AS C ON RA.circuitId = C.circuitId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND R.fastestLap IS NOT NULL\t----- bird -----\tformula_1",
    "1013": "SELECT T3.fastestLapTime FROM results AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN circuits AS T1 ON T2.circuitId = T1.circuitId WHERE T1.name = 'Austrian Grand Prix Circuit' AND T2.name = 'Austrian Grand Prix'\t----- bird -----\tformula_1",
    "1014": "SELECT T1.time, T1.lap FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1015": "SELECT T2.name FROM races AS T2 INNER JOIN circuits AS T1 ON T1.circuitId = T2.circuitId INNER JOIN lapTimes AS T3 ON T3.raceId = T2.raceId WHERE T1.name = 'Austrian Grand Prix Circuit' AND T3.milliseconds = (SELECT MIN(T4.milliseconds) FROM lapTimes AS T4 INNER JOIN races AS T5 ON T4.raceId = T5.raceId INNER JOIN circuits AS T6 ON T5.circuitId = T6.circuitId WHERE T6.name = 'Austrian Grand Prix Circuit')\t----- bird -----\tformula_1",
    "1016": "SELECT P.duration  FROM pitStops AS P  INNER JOIN lapTimes AS L ON P.driverId = L.driverId AND P.raceId = L.raceId  INNER JOIN races AS R ON L.raceId = R.raceId  WHERE R.name = 'Austrian Grand Prix'  AND L.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes AS LT INNER JOIN races AS R2 ON LT.raceId = R2.raceId WHERE R2.name = 'Austrian Grand Prix')\t----- bird -----\tformula_1",
    "1017": "SELECT T3.lat, T3.lng FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.time = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(T1.milliseconds) FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT T1.player_name, T1.height FROM Player AS T1 WHERE T1.height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season IN ('2016', '2015/2016') GROUP BY League.name ORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal < T1.away_team_goal AND T1.season = '2016' GROUP BY T2.team_long_name HAVING COUNT(*) = (SELECT MIN(lost_count) FROM (SELECT COUNT(*) AS lost_count FROM Match WHERE home_team_goal < away_team_goal AND season = '2016' GROUP BY home_team_api_id) AS subquery WHERE lost_count > 0)\t----- bird -----\teuropean_football_2",
    "1027": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.penalties DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT Match.away_team_api_id, COUNT(*) AS wins FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.away_team_goal > Match.home_team_goal AND League.name = 'Scotland Premier League' AND Match.season = '2010/2011' GROUP BY Match.away_team_api_id ORDER BY wins DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT T1.buildUpPlaySpeed FROM Team_Attributes AS T1 ORDER BY T1.buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.home_team_goal = Match.away_team_goal AND Match.season = '2016' GROUP BY League.name ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT (STRFTIME('%Y', Player_Attributes.date) - STRFTIME('%Y', Player.birthday)) AS age FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id WHERE Player_Attributes.sprint_speed >= 97 AND Player_Attributes.date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT L.name, COUNT(M.id) AS match_count FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id GROUP BY L.name ORDER BY match_count DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday BETWEEN '1990-01-01' AND '1995-12-31';\t----- bird -----\teuropean_football_2",
    "1034": "WITH AverageRating AS (     SELECT AVG(overall_rating) AS avg_rating     FROM Player_Attributes     WHERE STRFTIME('%Y', date) = '2010' ) SELECT player_api_id  FROM Player_Attributes  WHERE overall_rating = (     SELECT MAX(overall_rating)      FROM Player_Attributes      WHERE overall_rating > (SELECT avg_rating FROM AverageRating)      AND STRFTIME('%Y', date) = '2010' );\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012') AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (COUNT(CASE WHEN Player_Attributes.preferred_foot = 'left' AND Player.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 23:59:59' THEN 1 END) * 100.0) / COUNT(Player.id) AS percentage FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\t----- bird -----\teuropean_football_2",
    "1038": "SELECT L.name, SUM(M.home_team_goal + M.away_team_goal) AS total_goals  FROM Match AS M  INNER JOIN League AS L ON M.league_id = L.id  GROUP BY L.id  ORDER BY total_goals ASC  LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T.team_long_name  FROM Team_Attributes AS TA  INNER JOIN Team AS T ON TA.team_api_id = T.team_api_id  WHERE TA.buildUpPlayDribblingClass = 'Normal'  AND strftime('%Y', TA.date) = '2014'  AND TA.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes)  ORDER BY TA.chanceCreationPassing DESC\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name FROM League INNER JOIN Match ON League.id = Match.league_id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT Player.player_name FROM Player WHERE STRFTIME('%Y', Player.birthday) = '1970' AND STRFTIME('%m', Player.birthday) = '10'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francois Affolter' AND T2.date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Gabriel Tamas' AND STRFTIME('%Y', T1.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(M.id) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.season = '2015/2016' AND L.name = 'Scotland Premier League'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday = (SELECT MAX(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1051": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE PA.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.weight < 130 AND PA.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT P.birthday FROM Player P INNER JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE PA.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1056": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(M.home_team_goal) FROM Match AS M INNER JOIN Country AS C ON M.country_id = C.id WHERE M.season = '2010/2011' AND C.name = 'Poland'\t----- bird -----\teuropean_football_2",
    "1058": "WITH AvgFinishing AS (     SELECT AVG(PA.finishing) AS avg_finishing, P.height     FROM Player P     INNER JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id     GROUP BY P.height ) SELECT MAX(avg_finishing) FROM AvgFinishing WHERE height = (SELECT MAX(height) FROM Player) OR height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE birthday > '1990-12-31 23:59:59';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam %' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE PA.overall_rating > 80 AND PA.date BETWEEN '2008-01-01' AND '2010-12-31'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT DISTINCT T1.team_long_name  FROM Team AS T1  INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date BETWEEN '2010-01-01' AND '2015-12-31' AND T2.height > 170\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player WHERE height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE L.name = 'Germany 1. Bundesliga' AND M.date BETWEEN '2008-08-01' AND '2008-10-31'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = 61 AND T2.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61)\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (AVG(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.ball_control END) - AVG(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.ball_control END)) AS ball_control_difference FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.player_name IN ('Abdou Diallo', 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT CASE WHEN (SELECT birthday FROM Player WHERE player_name = 'Aaron Lennon') < (SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada') THEN 'Aaron Lennon' ELSE 'Abdelaziz Barrada' END AS older_player\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.birthday < '1986-01-01' AND PA.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT T1.player_name, MAX(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') GROUP BY T1.player_name ORDER BY MAX(T2.crossing) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1086": "SELECT T1.heading_accuracy FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.height > 180 AND PA.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.season = '2008/2009' AND T2.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T2.long_passing FROM Player_Attributes AS T2 INNER JOIN Player AS T1 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday = (SELECT MIN(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND STRFTIME('%Y', date) = '2009' AND STRFTIME('%m', date) = '04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT League.name FROM League INNER JOIN Match ON Match.league_id = League.id WHERE Match.season = '2008/2009' GROUP BY League.name ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday < '1986-01-01'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((Ariel.overall_rating - Paulin.overall_rating) / Paulin.overall_rating) * 100 AS percentage_difference  FROM (SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ariel Borysiuk' ORDER BY T2.date DESC LIMIT 1) AS Ariel,       (SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Paulin Puel' ORDER BY T2.date DESC LIMIT 1) AS Paulin\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T1.buildUpPlaySpeed) FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 WHERE T1.player_api_id = (SELECT T2.player_api_id FROM Player AS T2 WHERE T2.player_name = 'Pietro Marino')\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T2.chanceCreationPassing), T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(Match.away_team_goal) FROM Match INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id INNER JOIN Country ON Match.country_id = Country.id WHERE Team.team_long_name = 'Parma' AND Country.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1102": "SELECT T1.player_name  FROM Player AS T1  INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  WHERE T2.overall_rating = 77 AND T2.date = '2016-06-23 00:00:00'  ORDER BY T1.birthday ASC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Parravicini' AND T2.date LIKE '2010-08-30%'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore' AND T2.date = '2015-05-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Berigaud' AND T2.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MIN(T1.date) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' AND T1.crossing = (SELECT MAX(crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant')\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date = '2011-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T2.buildUpPlayDribblingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'LEI' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013-09-20'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T1.defenceAggressionClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'Hannover 96' AND T1.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Marko Arnautovic' AND T1.date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ((MAX(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating END) - MAX(CASE WHEN T1.player_name = 'Jordan Bowery' THEN T2.overall_rating END)) / MAX(CASE WHEN T1.player_name = 'Jordan Bowery' THEN T2.overall_rating END)) * 100 AS percentage_difference FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.date = '2013/7/12';\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE birthday <= DATE('now', '-35 years');\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(M.home_team_goal)  FROM Match AS M  JOIN Player AS P ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11)  WHERE P.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(T1.away_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T2.player_api_id IN (T1.away_player_1, T1.away_player_2, T1.away_player_3, T1.away_player_4, T1.away_player_5, T1.away_player_6, T1.away_player_7, T1.away_player_8, T1.away_player_9, T1.away_player_10, T1.away_player_11) WHERE T2.player_name IN ('Daan Smith', 'Filipe Ferreira')\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(Match.home_team_goal) FROM Match INNER JOIN Player ON Player.player_api_id IN (Match.home_player_1, Match.home_player_2, Match.home_player_3, Match.home_player_4, Match.home_player_5, Match.home_player_6, Match.home_player_7, Match.home_player_8, Match.home_player_9, Match.home_player_10, Match.home_player_11) WHERE (STRFTIME('%Y', Match.date) - STRFTIME('%Y', Player.birthday)) <= 30\t----- bird -----\teuropean_football_2",
    "1122": "SELECT player_name FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes ORDER BY strength DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1123": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1124": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE PA.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.finishing = 1 ORDER BY T2.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT 'No valid query can be formed due to lack of relationship between Player and Country tables.' AS message;\t----- bird -----\teuropean_football_2",
    "1127": "SELECT DISTINCT P.player_name, C.name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  INNER JOIN Match AS M ON M.home_player_11 = P.player_api_id OR M.away_player_11 = P.player_api_id  INNER JOIN League AS L ON M.league_id = L.id  INNER JOIN Country AS C ON L.country_id = C.id  WHERE PA.vision >= 90\t----- bird -----\teuropean_football_2",
    "1128": "SELECT T1.name FROM Country AS T1 INNER JOIN Team AS T2 ON T1.id = T2.team_fifa_api_id INNER JOIN Match AS T3 ON T2.team_api_id = T3.home_team_api_id OR T2.team_api_id = T3.away_team_api_id INNER JOIN Player AS T4 ON T3.home_player_1 = T4.player_api_id OR T3.away_player_1 = T4.player_api_id GROUP BY T1.name ORDER BY AVG(T4.weight) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(P.height) FROM Player AS P INNER JOIN Team AS T ON P.player_api_id = T.team_api_id INNER JOIN Country AS C ON T.team_fifa_api_id = C.id WHERE C.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE birthday > '1990-12-31 23:59:59' AND player_name LIKE 'Aaron%'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT ABS((SELECT jumping FROM Player_Attributes WHERE player_api_id = 6) - (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23)) AS jumping_score_difference\t----- bird -----\teuropean_football_2",
    "1135": "SELECT T1.id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential IS NOT NULL AND T2.preferred_foot = 'right' ORDER BY T2.potential ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND PA.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT COUNT(DISTINCT CASE WHEN T1.strength > 80 AND T1.stamina > 80 THEN T1.player_api_id END) * 100.0 / COUNT(DISTINCT T1.player_api_id) AS percentage FROM Player_Attributes AS T1\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT Match.home_team_goal, Match.away_team_goal FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.date LIKE '2008-09-24%' AND League.name = 'Belgian Jupiler League'\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge' AND T2.buildUpPlaySpeedClass IN ('Slow', 'Balanced', 'Fast')\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Italy Serie A') AND season = '2015/2016'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(T1.home_team_goal) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Netherlands Eredivisie'\t----- bird -----\teuropean_football_2",
    "1144": "SELECT PA.finishing, PA.curve  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE P.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT L.name, COUNT(M.id) AS game_count  FROM Match AS M  INNER JOIN League AS L ON M.league_id = L.id  WHERE M.season = '2015/2016'  GROUP BY M.league_id  ORDER BY game_count DESC  LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\t----- bird -----\teuropean_football_2",
    "1147": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (SUM(CASE WHEN P.height < 180 AND PA.strength > 70 THEN 1 ELSE 0 END) * 100.0 / COUNT(P.id)) AS percentage FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id;\t----- bird -----\teuropean_football_2",
    "1149": "WITH Counts AS (SELECT COUNT(CASE WHEN Patient.SEX = 'M' AND Patient.Admission = '+' THEN Patient.ID END) AS Male_Inpatients, COUNT(CASE WHEN Patient.SEX = 'M' AND Patient.Admission = '-' THEN Patient.ID END) AS Male_Outpatients FROM Patient) SELECT CASE WHEN Male_Inpatients > Male_Outpatients THEN 'In-patients' ELSE 'Outpatients' END AS Result, ABS(Male_Inpatients - Male_Outpatients) * 100.0 / MAX(Male_Inpatients, Male_Outpatients) AS Deviation FROM Counts;\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (COUNT(CASE WHEN Patient.SEX = 'F' AND Patient.Birthday > '1930-12-31' THEN 1 END) * 100.0 / COUNT(Patient.ID)) AS percentage FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT (SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(ID)) AS percentage  FROM Patient  WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS REAL) /         NULLIF(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END), 0) AS ratio FROM Patient  WHERE Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT E.Diagnosis, L.Date FROM Laboratory AS L LEFT JOIN Examination AS E ON L.ID = E.ID WHERE L.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = '163109'\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT T1.ID, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T2.ID, T2.SEX, T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT T1.ID, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday LIKE '1937%' AND T2.\"T-CHO\" >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT T2.ID, T2.SEX, T2.Diagnosis FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(CASE WHEN T2.TP NOT BETWEEN 6.0 AND 8.5 THEN T1.ID END) * 100.0 / NULLIF(COUNT(T1.ID), 0)) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(T1.`aCL IgG`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Admission = '+' AND (strftime('%Y', T1.`Examination Date`) - strftime('%Y', T2.Birthday)) >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND `First Date` >= '1997-01-01' AND `First Date` <= '1997-12-31' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(strftime('%Y', \"Patient\".\"First Date\") - strftime('%Y', \"Patient\".\"Birthday\")) FROM Patient WHERE \"Patient\".\"First Date\" IS NOT NULL AND \"Patient\".\"Birthday\" IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Examination ON Examination.ID = Patient.ID WHERE Examination.Thrombosis = 1 AND Examination.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31' AND Patient.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX((julianday('now') - julianday(P.Birthday)) / 365.25) - MIN((julianday('now') - julianday(P.Birthday)) / 365.25) AS age_gap FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.TG < 200\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT E.Symptoms, E.Diagnosis FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE P.Birthday = (SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Examination))\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT COUNT(DISTINCT L.ID) / 12.0 AS average_male_patients_per_month  FROM Laboratory AS L  INNER JOIN Patient AS P ON L.ID = P.ID  WHERE L.Date BETWEEN '1998-01-01' AND '1998-12-31' AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT L.\"Date\", (julianday(P.\"First Date\") - julianday(P.Birthday)) / 365.25 AS Age FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.Diagnosis LIKE '%SJS%' ORDER BY P.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT      (COUNT(CASE WHEN T1.SEX = 'M' AND T2.UA > 8.0 THEN 1 END) * 1.0) /      (COUNT(CASE WHEN T1.SEX = 'F' AND T2.UA > 6.5 THEN 1 END))  FROM Patient AS T1  INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID;\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) FROM Patient WHERE NOT EXISTS (SELECT 1 FROM Examination WHERE Examination.ID = Patient.ID AND Examination.`Examination Date` <= DATE(Patient.`First Date`, '+1 year'))\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31' AND (JULIANDAY(E.`Examination Date`) - JULIANDAY(P.Birthday)) < 18 * 365.25\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-BIL` >= 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT P.Diagnosis, COUNT(P.Diagnosis) AS DiagnosisCount FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY P.Diagnosis ORDER BY DiagnosisCount DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - STRFTIME('%Y', Patient.Birthday)) FROM Patient INNER JOIN Laboratory ON Laboratory.ID = Patient.ID WHERE Laboratory.Date LIKE '1991-10%'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT strftime('%Y', L.Date) - strftime('%Y', P.Birthday) AS age, E.Diagnosis FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.ID = (SELECT ID FROM Laboratory WHERE HGB = (SELECT MAX(HGB) FROM Laboratory) LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN `T-CHO` < 250 THEN 'Normal' ELSE 'Not Normal' END AS Cholesterol_Status FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE ID = (SELECT ID FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY `First Date` ASC LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT Examination.\"aCL IgG\", Examination.\"aCL IgM\", Examination.\"aCL IgA\" FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Diagnosis = 'SLE' AND Patient.Description = '1994-02-19' AND Examination.\"Examination Date\" = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT strftime('%Y', Laboratory.Date) - strftime('%Y', Patient.Birthday) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.UA = 8.4 AND Laboratory.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(T3.ID) FROM Laboratory AS T3 INNER JOIN Patient AS T2 ON T3.ID = T2.ID WHERE T2.\"First Date\" = '1991-06-13' AND T2.Diagnosis = 'SJS' AND T3.Date BETWEEN '1995-01-01' AND '1995-12-31'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.`Examination Date` = '1997-01-27'\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT E.Symptoms FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE P.Birthday = '1959-03-01' AND E.`Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((SELECT `T-CHO` FROM `Laboratory` WHERE `Date` LIKE '1981-11%' AND `ID` = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18')) - (SELECT `T-CHO` FROM `Laboratory` WHERE `Date` LIKE '1981-12%' AND `ID` = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18'))) / (SELECT `T-CHO` FROM `Laboratory` WHERE `Date` LIKE '1981-11%' AND `ID` = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18')) * 100 AS decrease_rate\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'Behcet''s' AND T2.`Examination Date` BETWEEN '1970-01-01' AND '1997-12-31'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND L.GPT > 30 AND L.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND STRFTIME('%Y', Birthday) = '1964' AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 WHERE T1.Thrombosis = 2 AND T1.`ANA Pattern` = 'S' AND T1.`aCL IgM` > 1.2 * (SELECT AVG(`aCL IgM`) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (COUNT(CASE WHEN (Laboratory.UA <= 8.0 AND Patient.SEX = 'M') OR (Laboratory.UA <= 6.5 AND Patient.SEX = 'F') THEN Patient.ID END) * 100.0) / COUNT(CASE WHEN Laboratory.\"U-PRO\" > 0 AND Laboratory.\"U-PRO\" < 30 THEN Patient.ID END) AS percentage FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.\"U-PRO\" > 0 AND Laboratory.\"U-PRO\" < 30\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (COUNT(CASE WHEN Diagnosis LIKE '%BEHCET%' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Patient WHERE SEX = 'M' AND SUBSTR(\"First Date\", 1, 4) = '1981';\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10-%' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`ANA Pattern` != 'P' AND T1.SEX = 'F' AND T1.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.PLT > 400 AND T2.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE P.Diagnosis LIKE '%SLE%' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT `First Date`, `Diagnosis` FROM `Patient` WHERE `ID` = 48473 AND `SEX` = 'F'\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Examination.Diagnosis LIKE '%APS%'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 WHERE T1.Date BETWEEN '1997-01-01' AND '1997-12-31' AND (T1.TP <= 6.0 OR T1.TP >= 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT      COUNT(CASE WHEN E.Symptoms LIKE '%thrombocytopenia%' AND (P.Diagnosis LIKE '%SLE%' OR E.Diagnosis LIKE '%SLE%') THEN P.ID END) * 1.0 /      COUNT(CASE WHEN E.Symptoms LIKE '%thrombocytopenia%' THEN P.ID END) AS Proportion FROM Patient AS P  INNER JOIN Examination AS E ON P.ID = E.ID\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (COUNT(CASE WHEN SEX = 'F' THEN 1 END) * 100.0 / NULLIF(COUNT(*), 0)) AS percentage FROM Patient WHERE strftime('%Y', Birthday) = '1980' AND Diagnosis LIKE '%RA%'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.\"Examination Date\" BETWEEN '1995-01-01' AND '1997-12-31' AND T1.Diagnosis LIKE '%BEHCET%' AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT (SELECT MIN(E.`Examination Date`) FROM `Examination` AS E WHERE E.ID = 821298) - P.`First Date` AS time_difference FROM Patient AS P WHERE P.ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN (CASE WHEN T2.SEX = 'M' THEN T1.UA > 8.0 ELSE T1.UA > 6.5 END) THEN 'Yes' ELSE 'No' END AS `Uric Acid Normal Range` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = '48473' AND GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T2.Date LIKE '1994%'\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GPT > 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT >= 60 ORDER BY T1.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT T1.ID, (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T2.Admission FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday = '1982-04-01' AND Laboratory.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT CASE WHEN L.TP < 6.0 THEN 6.0 - L.TP WHEN L.TP > 8.5 THEN L.TP - 8.5 END FROM Laboratory AS L INNER JOIN Patient AS P ON P.ID = L.ID WHERE P.SEX = 'F' AND (L.TP < 6.0 OR L.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.ALB < 3.5 OR T2.ALB > 5.5) ORDER BY T1.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT T1.ID, (CASE WHEN T2.ALB > 3.5 AND T2.ALB < 5.5 THEN 'Within Normal Range' ELSE 'Out of Normal Range' END) AS Albumin_Status  FROM Patient AS T1  INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID  WHERE T1.Birthday LIKE '1982%'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(CASE WHEN T2.UA > 6.5 THEN 1 END) * 100.0 / NULLIF(COUNT(CASE WHEN T1.SEX = 'F' THEN 1 END), 0)) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(T1.UA)  FROM Laboratory AS T1  INNER JOIN Patient AS T2 ON T1.ID = T2.ID  WHERE ((T1.UA > 8.0 AND T2.SEX = 'M') OR (T1.UA > 6.5 AND T2.SEX = 'F'))  AND T1.Date = (SELECT MAX(T3.Date) FROM Laboratory AS T3 WHERE T3.ID = T1.ID);\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN < 30 AND T2.UN >= 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT DISTINCT P.ID, P.SEX, P.Birthday  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE P.Diagnosis LIKE '%RA%' AND L.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE             WHEN (SELECT COUNT(P.ID)                   FROM Patient AS P                   INNER JOIN Laboratory AS L ON P.ID = L.ID                   WHERE P.SEX = 'M' AND L.CRE >= 1.5) >                  (SELECT COUNT(P.ID)                   FROM Patient AS P                   INNER JOIN Laboratory AS L ON P.ID = L.ID                   WHERE P.SEX = 'F' AND L.CRE >= 1.5)             THEN 'True'             ELSE 'False'         END AS result;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`T-BIL` >= 2.0 GROUP BY Patient.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T2.ID, T1.`T-CHO` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` = (SELECT MAX(`T-CHO`) FROM Laboratory) AND T2.Birthday = (SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE `T-CHO` = (SELECT MAX(`T-CHO`) FROM Laboratory)))\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG((julianday('now') - julianday(T1.Birthday)) / 365.25) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-CHO` > 200\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(*) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.TG >= 200 AND current_date - P.Birthday > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND P.SEX = 'M' AND L.CPK > 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT T1.ID, T1.SEX, CAST((JULIANDAY('now') - JULIANDAY(T1.Birthday)) / 365.25 AS INTEGER) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.\"T-CHO\" < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT P.ID, L.GLU FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GLU < 180 AND P.\"First Date\" LIKE '1991%'\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT P.ID, P.SEX, P.Birthday  FROM Laboratory AS L  INNER JOIN Patient AS P ON L.ID = P.ID  WHERE L.WBC < 3.5 OR L.WBC > 9.0  GROUP BY P.SEX, P.ID, P.Birthday  ORDER BY P.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT P.ID, P.Diagnosis, (STRFTIME('%Y', L.Date) - STRFTIME('%Y', P.Birthday)) AS Age  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50 AND T2.RBC NOT BETWEEN 3.5 AND 6.0\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT Patient.ID, Patient.SEX FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis LIKE '%SLE%' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17 ORDER BY DATEDIFF(CURRENT_DATE, Patient.Birthday) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT T2.ID, (strftime('%Y', CURRENT_DATE) - strftime('%Y', T2.Birthday)) AS age FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.HCT > 52 GROUP BY T2.ID HAVING COUNT(*) >= 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(DISTINCT CASE WHEN PLT < 100 THEN ID END) AS lower_count, COUNT(DISTINCT CASE WHEN PLT > 400 THEN ID END) AS higher_count FROM Laboratory WHERE PLT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT P.ID FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.Date LIKE '1984%' AND (CAST(strftime('%Y', L.Date) AS INTEGER) - CAST(strftime('%Y', P.Birthday) AS INTEGER) < 50) AND (100 < L.PLT AND L.PLT < 400)\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (COUNT(CASE WHEN P.SEX = 'F' AND L.PT >= 14 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday <= DATE('now', '-55 years')\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.\"First Date\" > '1992-12-31' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.`Examination Date` > '1997-01-01' AND L.APTT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.APTT >= 45 AND E.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.WBC > 3.5 AND L.WBC < 9.0 AND (L.FG <= 150 OR L.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1980-01-01' AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT P.Diagnosis FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.\"U-PRO\" > 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"U-PRO\" > 0 AND T2.\"U-PRO\" < 30 AND T1.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG > 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG > 900 AND T2.IGG < 2000 AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT Diagnosis FROM Patient WHERE ID = (SELECT ID FROM Laboratory WHERE IGA = (SELECT MAX(IGA) FROM Laboratory WHERE IGA > 80 AND IGA < 500))\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 AND T1.`First Date` > '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT T1.Diagnosis, COUNT(T1.Diagnosis) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGM < 40 OR T2.IGM > 400 GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.CRP >= 1.0 OR T2.CRP NOT IN ('-', '+-', NULL)) AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT P.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.CRE >= 1.5 AND (strftime('%Y', L.Date) - strftime('%Y', P.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.RF < 20 AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT P.Diagnosis  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE P.Birthday > '1985-01-01' AND L.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT DISTINCT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE CAST(Laboratory.RF AS REAL) < 20 AND strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.RF < 20 AND Examination.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L INNER JOIN Examination AS E ON L.ID = E.ID WHERE L.C3 > 35 AND E.\"ANA Pattern\" = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.HCT <= 29 OR T1.HCT >= 52 ORDER BY T2.\"aCL IgG\" DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.Thrombosis > 0 AND L.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RNP = '0' AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP IN ('+-', '1')\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.SM = '0' AND E.Thrombosis = '0'\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM IS NOT NULL AND T2.SM != '-' ORDER BY T1.Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` > '1997-01-01' AND LOWER(T2.SC170) = 'negative'\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(*) FROM Laboratory AS L  INNER JOIN Patient AS P ON L.ID = P.ID  INNER JOIN Examination AS E ON P.ID = E.ID  WHERE L.SC170 = 'negative' AND P.SEX = 'F' AND (E.Symptoms IS NULL OR E.Symptoms = '')\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON L.ID = P.ID WHERE L.SSA = 'negative' AND P.`First Date` < '2000-01-01'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SSA NOT IN ('-', '+-') ORDER BY P.\"First Date\" LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SSB IN ('-', '+-') AND T2.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SSB = '-' AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.CENTROMEA = '-' OR Laboratory.CENTROMEA IS NULL) AND (Laboratory.SSB = '-' OR Laboratory.SSB IS NULL) AND Patient.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT COALESCE(E.Diagnosis, P.Diagnosis) AS Disease  FROM Laboratory AS L  INNER JOIN Patient AS P ON L.ID = P.ID  LEFT JOIN Examination AS E ON P.ID = E.ID  WHERE L.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.DNA < 8 AND P.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.IGG > 900 AND T1.IGG < 2000 AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (COUNT(T1.ID) * 100.0 / COUNT(T2.ID)) AS percentage FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60 AND T2.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(Patient.Birthday) FROM Patient INNER JOIN Laboratory ON Laboratory.ID = Patient.ID WHERE Laboratory.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT < 60 ORDER BY T1.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT < 60 AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT T2.Description FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE T1.LDH = (SELECT MAX(T3.LDH) FROM Laboratory AS T3 WHERE T3.LDH < 500)\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Laboratory.Date) FROM Laboratory WHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP >= 300 AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT P.Diagnosis  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis LIKE '%SJS%' AND L.TP > 6.0 AND L.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT `Examination`.`Examination Date` FROM `Examination` INNER JOIN `Laboratory` ON `Laboratory`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`ALB` = (SELECT MAX(`ALB`) FROM `Laboratory` WHERE `ALB` > 3.5 AND `ALB` < 5.5)\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.ALB > 3.5 AND L.ALB < 5.5 AND L.TP > 6.0 AND L.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT T1.`aCL IgG`, T1.`aCL IgM`, T1.`aCL IgA` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T2.SEX = 'F' AND T3.UA = (SELECT MAX(T4.UA) FROM Laboratory AS T4 INNER JOIN Patient AS T5 ON T4.ID = T5.ID WHERE T4.UA > 6.5)\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(T1.ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.CRE < 1.5 AND E.\"aCL IgG\" = (SELECT MAX(\"aCL IgG\") FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE CRE < 1.5))\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.\"T-BIL\" > 2.0 AND T2.\"ANA Pattern\" = 'p'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT Examination.ANA FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.\"T-BIL\" = (SELECT MAX(\"T-BIL\") FROM Laboratory WHERE \"T-BIL\" < 2.0)\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` > 250 AND (T2.KCT = '-' OR T2.RVVT = '-' OR T2.LAC = '-')\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.T-CHO < 250 AND E.\"ANA Pattern\" = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.TG < 200 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG = (SELECT MAX(TG) FROM Laboratory WHERE TG < 200)\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Thrombosis = 0 AND L.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.CPK < 250 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Patient.Birthday) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU >= 180\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.GLU < 180 AND E.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '+' AND L.WBC > 3.5 AND L.WBC < 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%SLE%' AND T2.WBC > 3.5 AND T2.WBC < 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.PLT FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Diagnosis LIKE '%MCTD%'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(T2.PT) FROM Laboratory AS T2 INNER JOIN Patient AS T1 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 2 AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name || ' ' || T1.last_name AS full_name  FROM member AS T1  INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id  WHERE T2.department = 'Art and Design Department'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT T1.phone FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = \"Women's Soccer\" AND T3.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT E.event_name FROM event AS E INNER JOIN attendance AS A ON E.event_id = A.link_to_event GROUP BY E.event_name ORDER BY COUNT(A.link_to_member) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT T3.event_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison' AND SUBSTR(T3.event_date, 1, 4) = '2019'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM (SELECT T2.event_id FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting' GROUP BY T1.link_to_event HAVING COUNT(T1.link_to_member) > 10)\t----- bird -----\tstudent_club",
    "1323": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_event) > 20 AND T1.type != 'Fundraiser'\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM (SELECT COUNT(T1.link_to_member) AS attendance_count FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name LIKE '%Meeting%' AND T2.event_date LIKE '2020%' GROUP BY T1.link_to_event) AS attendance_counts\t----- bird -----\tstudent_club",
    "1325": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.type = 'Club' ORDER BY T1.cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT T1.amount FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T2.category = 'Food' AND T3.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code.city, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT DISTINCT M2.department  FROM member AS M1  INNER JOIN major AS M2 ON M1.link_to_major = M2.major_id  WHERE M1.first_name IN ('Adele', 'Luisa')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Speaker'\t----- bird -----\tstudent_club",
    "1338": "SELECT NOT EXISTS (SELECT * FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T1.expense_date = '2019-10-08' AND T1.approved != 'true')\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(expense.cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND SUBSTR(event.event_date, 6, 2) IN ('09', '10')\t----- bird -----\tstudent_club",
    "1340": "SELECT (SUM(CASE WHEN T1.expense_date BETWEEN '2019-01-01' AND '2019-12-31' THEN T1.cost ELSE 0 END) - SUM(CASE WHEN T1.expense_date BETWEEN '2020-01-01' AND '2020-12-31' THEN T1.cost ELSE 0 END)) AS difference FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Student Club'\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = date('2019-09-04');\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM event WHERE type = 'Registration' AND event_date LIKE '2019-09-14%'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT z.county FROM zip_code AS z INNER JOIN member AS m ON z.zip_code = m.zip WHERE m.first_name = 'Adela' AND m.last_name = 'O''Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget AS B INNER JOIN event AS E ON B.link_to_event = E.event_id WHERE E.event_name = 'November Meeting' AND B.remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT T3.status FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT M.major_name FROM major AS M INNER JOIN member AS MEM ON M.major_id = MEM.link_to_major WHERE MEM.first_name = 'Brent' AND MEM.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT income.date_received FROM income INNER JOIN member ON member.member_id = income.link_to_member WHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.date_received = (SELECT MIN(date_received) FROM income WHERE source = 'Dues') AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM budget AS b1  INNER JOIN event AS e1 ON b1.link_to_event = e1.event_id  WHERE e1.event_name = 'Yearly Kickoff' AND b1.category = 'Advertisement'  AND b1.amount > (SELECT b2.amount FROM budget AS b2  INNER JOIN event AS e2 ON b2.link_to_event = e2.event_id  WHERE e2.event_name = 'October Meeting')\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(CASE WHEN T1.category = 'Parking' THEN T1.amount ELSE 0 END) * 100.0 / SUM(T1.amount)) AS percentage FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description LIKE '%Pizza%';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T1.expense_description, T1.cost, T1.expense_date FROM expense AS T1 WHERE T1.link_to_budget = (SELECT budget_id FROM budget WHERE remaining = (SELECT MIN(remaining) FROM budget))\t----- bird -----\tstudent_club",
    "1366": "SELECT T3.first_name, T3.last_name FROM member AS T3 INNER JOIN attendance AS T2 ON T3.member_id = T2.link_to_member INNER JOIN event AS T1 ON T2.link_to_event = T1.event_id WHERE T1.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id GROUP BY T2.college ORDER BY COUNT(T1.member_id) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.amount = (SELECT MAX(amount) FROM budget)\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.* FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240'\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.amount > 0 ORDER BY (T2.spent / T2.amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(position) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND event_date LIKE '2020%'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) AS student_name  FROM member AS T1  INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member  GROUP BY T1.member_id  HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT T1.first_name, T1.last_name  FROM member AS T1  INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member  INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id  INNER JOIN major AS T4 ON T1.link_to_major = T4.major_id  WHERE T4.major_name = 'Interior Design' AND T3.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Grant' AND T2.last_name = 'Gilmour'\t----- bird -----\tstudent_club",
    "1385": "SELECT DISTINCT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Member' AND T2.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T2 ON T3.link_to_event = T2.event_id WHERE T2.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1387": "SELECT T3.first_name, T3.last_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN expense AS T4 ON T1.budget_id = T4.link_to_budget INNER JOIN member AS T3 ON T4.link_to_member = T3.member_id WHERE T2.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT T2.first_name || ' ' || T2.last_name AS full_name, T1.source FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount = (SELECT MAX(amount) FROM income WHERE link_to_member IS NOT NULL)\t----- bird -----\tstudent_club",
    "1389": "SELECT T2.event_name FROM budget AS T1 INNER JOIN expense AS T3 ON T1.budget_id = T3.link_to_budget INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T3.cost = (SELECT MIN(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(CASE WHEN T3.event_name = 'Yearly Kickoff' THEN T1.cost ELSE 0 END) / SUM(T1.cost)) * 100 AS percentage FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id\t----- bird -----\tstudent_club",
    "1391": "SELECT (COUNT(CASE WHEN major.major_name = 'Finance' THEN member.member_id END) * 1.0 / COUNT(CASE WHEN major.major_name = 'Physics' THEN member.member_id END)) AS ratio FROM member INNER JOIN major ON member.link_to_major = major.major_id\t----- bird -----\tstudent_club",
    "1392": "SELECT income.source, SUM(income.amount) AS total_amount FROM income WHERE income.date_received LIKE '2019-09%' GROUP BY income.source ORDER BY total_amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name || ' ' || last_name AS full_name, email FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 WHERE T1.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Community Theater' AND event_date LIKE '2019%')\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.link_to_event), T3.major_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T2.status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' ORDER BY T1.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1399": "SELECT EXISTS (SELECT 1 FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer')\t----- bird -----\tstudent_club",
    "1400": "SELECT (COUNT(CASE WHEN type = 'Community Service' THEN event_id END) * 100.0 / COUNT(event_id)) FROM event WHERE event_date LIKE '2019%'\t----- bird -----\tstudent_club",
    "1401": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description LIKE '%Posters%' AND T3.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1402": "SELECT T1.t_shirt_size FROM member AS T1 GROUP BY T1.t_shirt_size ORDER BY COUNT(T1.t_shirt_size) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT T2.event_name FROM event AS T2 INNER JOIN budget AS T1 ON T1.link_to_event = T2.event_id WHERE T2.status = 'Closed' AND T1.remaining < 0 ORDER BY T1.remaining ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT T1.expense_description, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.approved = 'true' AND T3.event_name = 'October Meeting' GROUP BY T1.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT budget.category, SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'April Speaker' GROUP BY budget.category ORDER BY SUM(budget.amount) ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(T1.amount) FROM budget AS T1 WHERE T1.category = 'Food'\t----- bird -----\tstudent_club",
    "1407": "SELECT * FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(spent) FROM budget WHERE category = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT T1.first_name || ' ' || T1.last_name, SUM(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.link_to_member = 'rec4BLdZHS2Blfp4v'\t----- bird -----\tstudent_club",
    "1411": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT DISTINCT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT M.zip FROM member AS M INNER JOIN expense AS E ON M.member_id = E.link_to_member WHERE E.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT event.type FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT type FROM event WHERE event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (COUNT(CASE WHEN T2.major_name = 'Business' THEN 1 END) * 100.0 / COUNT(T1.member_id)) AS percentage  FROM member AS T1  INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT DISTINCT B.category  FROM event AS E  INNER JOIN budget AS B ON E.event_id = B.link_to_event  WHERE E.location = 'MU 215' AND E.type = 'Guest Speaker' AND B.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T1.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT (SUM(CASE WHEN income.amount = 50 AND income.source = 'Dues' AND income.link_to_member IN (SELECT member.member_id FROM member WHERE member.t_shirt_size = 'Medium') THEN income.amount ELSE 0 END) * 100.0) / NULLIF(SUM(income.amount), 0) AS percentage FROM income WHERE income.link_to_member IN (SELECT member.member_id FROM member WHERE member.t_shirt_size = 'Medium')\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT attendance.link_to_event FROM attendance INNER JOIN income ON attendance.link_to_member = income.link_to_member WHERE income.amount > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT DISTINCT M.member_id, M.first_name, M.last_name, A.link_to_event  FROM expense AS E  INNER JOIN attendance AS A ON E.link_to_member = A.link_to_member  INNER JOIN member AS M ON A.link_to_member = M.member_id  WHERE E.approved = 'true' AND E.expense_date BETWEEN '2019-10-01' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name LIKE '%business%' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT DISTINCT member.email  FROM expense  INNER JOIN member ON expense.link_to_member = member.member_id  WHERE expense.cost > 20  AND expense.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member AS M INNER JOIN major AS J ON M.link_to_major = J.major_id WHERE J.major_name LIKE '%Education%' AND J.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT (SUM(CASE WHEN T1.spent > T1.amount THEN 1 ELSE 0 END) * 100.0) / COUNT(T2.event_id) AS percentage FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01T00:00:00' AND '2020-03-31T23:59:59'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT CONCAT(first_name, ' ', last_name) FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT (COUNT(CASE WHEN type = 'PO Box' THEN 1 END) * 100.0 / COUNT(zip_code)) AS percentage FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent < T2.amount\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T2.expense_description LIKE '%pizza%' AND T2.cost > 50 AND T2.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT DISTINCT T1.first_name, T1.last_name, T3.major_name  FROM member AS T1  INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member  INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id  WHERE T2.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT T4.city, T4.county FROM event AS T1 INNER JOIN income AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN zip_code AS T4 ON T3.zip = T4.zip_code GROUP BY T1.event_id, T4.city, T4.county HAVING COUNT(T2.income_id) > 40\t----- bird -----\tstudent_club",
    "1451": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) AS member_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T1.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T2.cost) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Parking' AND T3.cost < (SELECT AVG(T4.cost) FROM expense AS T4 WHERE T4.expense_description = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(CASE WHEN T2.event_name LIKE '%Meeting%' THEN T1.cost ELSE 0 END) * 100.0 / NULLIF(SUM(T1.cost), 0)) AS percentage FROM expense AS T1 INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T2 ON T3.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "1455": "SELECT MAX(T1.amount) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description LIKE '%water%' OR T2.expense_description LIKE '%chips%' OR T2.expense_description LIKE '%cookies%'\t----- bird -----\tstudent_club",
    "1456": "SELECT T2.first_name || ' ' || T2.last_name AS full_name, SUM(T1.cost) AS total_spending FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T2.member_id ORDER BY total_spending DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T1.first_name || ' ' || T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT ABS((COUNT(CASE WHEN zip_code.state = 'New Jersey' THEN member.member_id END) * 1.0 / COUNT(member.member_id) * 100) - (COUNT(CASE WHEN zip_code.state = 'Vermont' THEN member.member_id END) * 1.0 / COUNT(member.member_id) * 100)) AS difference FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state IN ('New Jersey', 'Vermont')\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT T2.first_name || ' ' || T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description LIKE '%water%' AND T1.expense_description LIKE '%veggie tray%' AND T1.expense_description LIKE '%supplies%'\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T2.amount  FROM member AS T1  INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member  WHERE T2.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "1465": "SELECT T2.category FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) AS full_name, T3.college FROM member AS T1 INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(b.spent) AS total_spent, e.event_name  FROM budget AS b  INNER JOIN event AS e ON b.link_to_event = e.event_id  WHERE b.category = 'Speaker Gifts'  GROUP BY e.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T1.position  FROM member AS T1  INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code  WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT (SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) * 1.0) / (SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END)) AS ratio FROM customers\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT yearmonth.CustomerID FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date LIKE '2012%' AND customers.Segment = 'LAM' ORDER BY yearmonth.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date LIKE '2013%'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT T3.CustomerID FROM (SELECT T1.CustomerID, SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 WHERE T1.Date LIKE '2011%' GROUP BY T1.CustomerID) AS T3 INNER JOIN customers AS T4 ON T3.CustomerID = T4.CustomerID WHERE T4.Currency = 'CZK' AND T3.TotalConsumption = (SELECT MAX(TotalConsumption) FROM (SELECT SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE Date LIKE '2011%' GROUP BY CustomerID))\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Consumption < 30000 AND T2.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT ABS(COALESCE(SUM(CASE WHEN C.Currency = 'CZK' THEN Y.Consumption END), 0) - COALESCE(SUM(CASE WHEN C.Currency = 'EUR' THEN Y.Consumption END), 0)) AS ConsumptionDifference FROM customers AS C INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE Y.Date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT SUBSTR(T1.Date, 1, 4) AS year, SUM(T1.Consumption)  FROM yearmonth AS T1  INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID  WHERE T2.Currency = 'EUR'  GROUP BY year  ORDER BY SUM(T1.Consumption) DESC  LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT T2.Segment FROM customers AS T2 INNER JOIN yearmonth AS T1 ON T1.CustomerID = T2.CustomerID GROUP BY T2.Segment ORDER BY SUM(T1.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(yearmonth.Date, 1, 4) AS Year, SUM(yearmonth.Consumption) AS TotalConsumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' GROUP BY SUBSTR(yearmonth.Date, 1, 4) ORDER BY SUM(yearmonth.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT T1.Date FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date LIKE '2013%' AND T1.Consumption = (SELECT MAX(T3.Consumption) FROM yearmonth AS T3 INNER JOIN customers AS T4 ON T3.CustomerID = T4.CustomerID WHERE T4.Segment = 'SME' AND T3.Date LIKE '2013%')\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT      COALESCE(SME.avg_consumption, 0) - COALESCE(LAM.avg_consumption, 0) AS SME_LAM_diff,     COALESCE(LAM.avg_consumption, 0) - COALESCE(KAM.avg_consumption, 0) AS LAM_KAM_diff,     COALESCE(KAM.avg_consumption, 0) - COALESCE(SME.avg_consumption, 0) AS KAM_SME_diff FROM      (SELECT AVG(y.Consumption) AS avg_consumption      FROM yearmonth AS y       INNER JOIN customers AS c ON y.CustomerID = c.CustomerID       WHERE c.Currency = 'CZK' AND y.Date LIKE '2013%'       AND c.Segment = 'SME'      GROUP BY c.Segment) AS SME,     (SELECT AVG(y.Consumption) AS avg_consumption      FROM yearmonth AS y       INNER JOIN customers AS c ON y.CustomerID = c.CustomerID       WHERE c.Currency = 'CZK' AND y.Date LIKE '2013%'       AND c.Segment = 'LAM'      GROUP BY c.Segment) AS LAM,     (SELECT AVG(y.Consumption) AS avg_consumption      FROM yearmonth AS y       INNER JOIN customers AS c ON y.CustomerID = c.CustomerID       WHERE c.Currency = 'CZK' AND y.Date LIKE '2013%'       AND c.Segment = 'KAM'      GROUP BY c.Segment) AS KAM\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT `Segment`,         ((SUM(CASE WHEN `Y`.`Date` LIKE '2013%' THEN `Y`.`Consumption` ELSE 0 END) -           SUM(CASE WHEN `Y`.`Date` LIKE '2012%' THEN `Y`.`Consumption` ELSE 0 END)) /           SUM(CASE WHEN `Y`.`Date` LIKE '2012%' THEN `Y`.`Consumption` ELSE 0 END)) * 100 AS `Percentage_Increase` FROM `yearmonth` AS `Y` INNER JOIN `customers` AS `C` ON `Y`.`CustomerID` = `C`.`CustomerID` WHERE `C`.`Currency` = 'EUR' AND `C`.`Segment` IN ('SME', 'LAM', 'KAM') GROUP BY `Segment` ORDER BY `Percentage_Increase` ASC\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount') - (SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount') AS difference;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT      (SUM(CASE WHEN CustomerID = 7 THEN Consumption ELSE 0 END) -      SUM(CASE WHEN CustomerID = 5 THEN Consumption ELSE 0 END)) AS ConsumptionDifference  FROM yearmonth  WHERE Date = '201304';\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT (COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) - COUNT(CASE WHEN Currency = 'EUR' THEN 1 END)) AS difference FROM customers WHERE Segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID, MAX(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND T2.Date = '201310' GROUP BY T1.CustomerID ORDER BY MAX(T2.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, MAX(T2.Consumption) AS MaxConsumption  FROM customers AS T1  INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID  WHERE T1.Segment = 'KAM'  GROUP BY T1.CustomerID  ORDER BY MaxConsumption DESC  LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND T1.Date = '201305'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (SUM(CASE WHEN T1.Consumption > 46.73 THEN 1 ELSE 0 END) * 100.0) / COUNT(T2.CustomerID) AS percentage FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (COUNT(CASE WHEN Currency = 'EUR' THEN CustomerID END) * 100.0 / COUNT(CustomerID)) AS percentage FROM customers WHERE Segment = 'KAM'\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (COUNT(CASE WHEN Consumption > 528.3 THEN CustomerID END) * 100.0 / COUNT(CustomerID)) AS percentage FROM yearmonth WHERE Date = '201202'\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM gasstations WHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' AND Consumption = (SELECT MAX(Consumption) FROM yearmonth WHERE Date = '201309')\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT customers.Segment, SUM(yearmonth.Consumption) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date = '201309' GROUP BY customers.Segment ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T2.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date = '201206' ORDER BY T1.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT T2.Description FROM products AS T2 INNER JOIN transactions_1k AS T1 ON T1.ProductID = T2.ProductID WHERE T1.Date BETWEEN '2013-09-01' AND '2013-09-30'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date BETWEEN '2013-06-01' AND '2013-06-30'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT T2.ChainID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT DISTINCT products.Description  FROM transactions_1k  INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID  INNER JOIN products ON transactions_1k.ProductID = products.ProductID  WHERE customers.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date BETWEEN '2012-01-01' AND '2012-01-31';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT P.Description FROM products AS P INNER JOIN transactions_1k AS T ON P.ProductID = T.ProductID INNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID WHERE G.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Price > 1000 AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date > '2012-01-01' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(transactions_1k.Amount * transactions_1k.Price) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(T1.Amount * T1.Price) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' ORDER BY (T1.Amount * T1.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' ORDER BY T2.Time ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T2.Currency FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T2.Segment FROM customers AS T2 WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00')\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Time BETWEEN '06:00:00' AND '12:00:00' AND T1.Date = '2012-08-26'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers)\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT T1.Date, T1.Consumption  FROM yearmonth AS T1  WHERE T1.CustomerID = (SELECT T2.CustomerID                          FROM transactions_1k AS T2                          WHERE T2.Price = 124.05 AND T2.Date = '2012-08-24')  AND T1.Date = '201201'\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Time >= '08:00:00' AND T1.Time < '09:00:00' AND T1.Date = '2012-08-26' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT C.Currency FROM customers AS C INNER JOIN transactions_1k AS T ON C.CustomerID = T.CustomerID WHERE T.Date BETWEEN '2013-06-01' AND '2013-06-30' GROUP BY C.Currency HAVING SUM(T.Price) = 214582.17\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = 667467\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Price = 548.4 AND T1.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (COUNT(DISTINCT T1.CustomerID) * 100.0 / NULLIF(COUNT(DISTINCT T1.CustomerID), 0))  FROM customers AS T1  INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID  WHERE T1.Currency = 'EUR' AND T2.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (SUM(CASE WHEN Y.Date LIKE '2012%' THEN Y.Consumption ELSE 0 END) - SUM(CASE WHEN Y.Date LIKE '2013%' THEN Y.Consumption ELSE 0 END)) / NULLIF(SUM(CASE WHEN Y.Date LIKE '2012%' THEN Y.Consumption ELSE 0 END), 0) AS decrease_rate FROM transactions_1k AS T INNER JOIN yearmonth AS Y ON T.CustomerID = Y.CustomerID WHERE T.Price = 634.8 AND T.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID, SUM(Amount * Price) AS Revenue FROM transactions_1k GROUP BY GasStationID ORDER BY Revenue DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM gasstations WHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT (SELECT SUM(Amount) FROM transactions_1k WHERE CustomerID = 38508) AS TotalSpentAtGasStations, (SELECT Consumption FROM yearmonth WHERE CustomerID = 38508 AND Date = '201201') AS AmountSpentInJanuary\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT T2.Description FROM products AS T2 INNER JOIN (SELECT ProductID, SUM(Amount) AS TotalSales FROM transactions_1k GROUP BY ProductID ORDER BY TotalSales DESC LIMIT 5) AS T1 ON T1.ProductID = T2.ProductID\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, AVG(T1.Price) AS AveragePrice, T2.Currency  FROM transactions_1k AS T1  INNER JOIN (SELECT CustomerID, SUM(Amount * Price) AS TotalSpent              FROM transactions_1k              GROUP BY CustomerID              ORDER BY TotalSpent DESC              LIMIT 1) AS TopCustomer  ON T1.CustomerID = TopCustomer.CustomerID  INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID  GROUP BY T1.CustomerID\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT g.Country  FROM gasstations g  INNER JOIN transactions_1k t ON g.GasStationID = t.GasStationID  WHERE t.ProductID = 2  AND t.Price = (SELECT MAX(Price) FROM transactions_1k WHERE ProductID = 2)\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T2.Consumption FROM yearmonth AS T2 INNER JOIN transactions_1k AS T1 ON T1.CustomerID = T2.CustomerID WHERE T1.Price > 29.00 AND T1.ProductID = 5 AND T2.Date = '201208'\t----- bird -----\tdebit_card_specializing"
}