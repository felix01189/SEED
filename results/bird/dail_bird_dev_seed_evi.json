{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm WHERE `County Name` = 'Alameda'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT frpm.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.`School Type` = 'Continuation High Schools' ORDER BY frpm.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT DISTINCT schools.Zip FROM schools WHERE schools.Charter = 1 AND schools.County = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT schools.MailStreet FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE FundingType = 'Directly funded' AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT schools.School FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr > 500 AND schools.Magnet = 1\t----- bird -----\tcalifornia_schools",
    "7": "SELECT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY satscores.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT satscores.NumTstTakr FROM frpm INNER JOIN satscores ON frpm.CDSCode = satscores.cds ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(DISTINCT schools.CDSCode) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath > 560 AND schools.FundingType = 'Directly funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T2.`FRPM Count (Ages 5-17)` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT T1.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(frpm.`Percent (%) Eligible Free (Ages 5-17)`) FROM satscores INNER JOIN frpm ON satscores.cds = frpm.CDSCode WHERE (satscores.NumGE1500 / satscores.NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY (satscores.NumGE1500 / satscores.NumTstTakr) DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT `s`.`NCESSchool`, `f`.`Enrollment (Ages 5-17)` FROM `frpm` AS `f` INNER JOIN `schools` AS `s` ON `f`.`CDSCode` = `s`.`CDSCode` ORDER BY `f`.`Enrollment (Ages 5-17)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T1.District FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Active' GROUP BY T1.District ORDER BY AVG(T2.AvgScrRead) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(schools.CDSCode) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.StatusType = 'Merged' AND schools.District LIKE '%Alameda%' AND satscores.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT schools.School, schools.CharterNum, satscores.AvgScrWrite FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrWrite > 499 ORDER BY satscores.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Fresno' AND schools.FundingType = 'Directly funded' AND satscores.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT `schools`.`Phone` FROM `schools` INNER JOIN `satscores` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrMath` = ( SELECT MAX(`AvgScrMath`) FROM `satscores` )\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(DISTINCT frpm.CDSCode) FROM frpm WHERE frpm.`County Name` = 'Amador' AND frpm.`Low Grade` = '9' AND frpm.`High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(`School Name`) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)` < 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Contra Costa' ORDER BY satscores.NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "23": "SELECT T1.`School Name`, T1.Street FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE ABS(T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT satscores.sname FROM satscores INNER JOIN frpm ON frpm.CDSCode = satscores.cds WHERE frpm.`Percent (%) Eligible Free (K-12)` > 0.1 AND satscores.NumGE1500 > 0\t----- bird -----\tcalifornia_schools",
    "25": "SELECT schools.School, schools.FundingType FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.City = 'Riverside' AND satscores.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "26": "SELECT frpm.`School Name`, schools.Street, schools.City, schools.Zip, schools.State FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`School Type` = 'High Schools (Public)' AND frpm.`County Name` = 'Monterey' AND frpm.`Free Meal Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "27": "SELECT schools.School, AVG(satscores.AvgScrWrite), schools.Phone FROM schools LEFT JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.OpenDate > '1991-12-31' OR schools.ClosedDate < '2000-01-01' GROUP BY schools.School, schools.Phone\t----- bird -----\tcalifornia_schools",
    "28": "SELECT frpm.`School Name`, schools.`DOCType` FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`FundingType` = 'Locally funded' AND (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`FundingType` = 'Locally funded')\t----- bird -----\tcalifornia_schools",
    "29": "SELECT `schools`.`OpenDate` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`GSserved` = '1-12' ORDER BY `frpm`.`Enrollment (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "30": "SELECT schools.City, frpm.`Enrollment (K-12)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`Enrollment (K-12)` ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `School Name`, `Percent (%) Eligible Free (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 9, 2\t----- bird -----\tcalifornia_schools",
    "32": "SELECT schools.`School`, frpm.`Percent (%) Eligible FRPM (K-12)` FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`SOC` = '66' AND schools.`GSserved` LIKE '%1-12%' ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT schools.School, schools.Website FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT frpm.`Percent (%) Eligible Free (Ages 5-17)` AS FreeRate FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.`AdmFName1` = 'Kacey' AND schools.`AdmLName1` = 'Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T1.AdmEmail1, T1.AdmEmail2, T1.AdmEmail3 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Charter = 1 AND T2.enroll12 = ( SELECT MIN(T3.enroll12) FROM schools AS T3 INNER JOIN satscores AS T4 ON T3.CDSCode = T4.cds WHERE T3.Charter = 1 )\t----- bird -----\tcalifornia_schools",
    "36": "SELECT CONCAT(schools.AdmFName1, ' ', schools.AdmLName1) AS 'Administrator Full Name' FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "37": "SELECT schools.Street, schools.City, schools.Zip, schools.State FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY (satscores.NumGE1500 / satscores.NumTstTakr) ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "38": "SELECT schools.Website FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Los Angeles' AND satscores.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(satscores.NumTstTakr) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.District = 'Fresno Unified' ORDER BY satscores.AvgScrRead LIMIT 1\t----- bird -----\tcalifornia_schools",
    "41": "SELECT schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Virtual IN ('F', 'V', 'C', 'P') AND (SELECT COUNT(*) FROM satscores AS S2 WHERE S2.AvgScrRead > satscores.AvgScrRead AND S2.cds IN (SELECT CDSCode FROM schools WHERE County = schools.County)) < 5 ORDER BY schools.County, satscores.AvgScrRead DESC\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T1.EdOpsName FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "43": "SELECT T1.AvgScrMath, T2.County FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE (T1.AvgScrMath + T1.AvgScrRead + T1.AvgScrWrite)/3 = ( SELECT MIN((AvgScrMath + AvgScrRead + AvgScrWrite)/3) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(satscores.AvgScrWrite), schools.City FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T1.School, AVG(T2.AvgScrWrite) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Ricci' AND T1.AdmLName1 = 'Ulrich' GROUP BY T1.School\t----- bird -----\tcalifornia_schools",
    "46": "SELECT schools.State, MAX(frpm.`Enrollment (K-12)`) AS max_enrollment FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.SOCType = 'State Special Schools' GROUP BY schools.State ORDER BY max_enrollment DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT CAST(COUNT(schools.CDSCode) AS REAL) / 12 FROM schools WHERE schools.County = 'Alameda' AND schools.DOCType = 'Elementary School District' AND STRFTIME('%Y', schools.OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT CAST(SUM(CASE WHEN DOCType = 'Unified School District' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN DOCType = 'Elementary School District' THEN 1 ELSE 0 END) FROM schools WHERE StatusType = 'Merged' AND County = 'Orange'\t----- bird -----\tcalifornia_schools",
    "49": "SELECT T1.County, T1.School, T1.ClosedDate FROM schools AS T1 WHERE T1.ClosedDate IS NOT NULL GROUP BY T1.County ORDER BY COUNT(T1.ClosedDate) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "50": "SELECT satscores.sname, schools.Street FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrMath DESC LIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "51": "SELECT schools.MailStreet, schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY satscores.AvgScrRead LIMIT 1\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 >= 1 AND T2.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(satscores.NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT CAST((SELECT COUNT(*) FROM schools WHERE County = 'Colusa' AND MailState = 'CA') AS REAL) / (SELECT COUNT(*) FROM schools WHERE County = 'Humboldt' AND MailState = 'CA') AS Ratio FROM schools LIMIT 1\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active' AND City = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT `schools`.`Phone`, `schools`.`Ext` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrWrite` DESC LIMIT 1 OFFSET 332;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT School, Phone, Ext FROM schools WHERE Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName2 = 'Mike' AND AdmLName2 = 'Larson') OR (AdmFName3 = 'Mike' AND AdmLName3 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez') OR (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez') OR (AdmFName3 = 'Dante' AND AdmLName3 = 'Alvarez')\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(schools.CDSCode) FROM schools WHERE schools.Charter = 1 AND schools.City = 'Hickman' AND schools.District = 'Elementary School District'\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter School (Y/N)` = 0 AND frpm.`County Name` = 'Los Angeles' AND frpm.`Percent (%) Eligible Free (K-12)` < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT AdmFName1, AdmLName1, School, City FROM schools WHERE Charter = 1 AND CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'\t----- bird -----\tcalifornia_schools",
    "65": "SELECT CAST(SUM(CASE WHEN FundingType = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(FundingType) FROM schools WHERE County = 'Santa Clara'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND FundingType = 'Directly funded' AND County = 'Stanislaus'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE DOCType = 'Community College District' AND ClosedDate IS NOT NULL AND strftime('%Y', ClosedDate) = '1989' AND City = 'San Francisco'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOC = '11' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC IS NOT NULL AND DOCType = 'State Special Schools'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(schools.CDSCode) FROM schools WHERE (schools.StatusType = 'Active' OR schools.StatusType = 'Closed') AND schools.SOCType = 'District Community Day Schools' AND schools.County = 'Alpine'\t----- bird -----\tcalifornia_schools",
    "71": "SELECT `District Code` FROM schools WHERE Magnet = 0 AND City = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "72": "SELECT `frpm`.`Enrollment (Ages 5-17)` FROM frpm WHERE `frpm`.`District Type` = 'State Special Schools' AND `frpm`.`School Name` LIKE '%Fremont%' AND `frpm`.`Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.`EdOpsCode` = 'YTH' AND schools.`MailStreet` = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT frpm.`Low Grade` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.SOCType = 'Special Education Schools (Public)' AND schools.NCESDist = '0613360' ORDER BY frpm.`Low Grade` ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.EILName, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`NSLP Provision Status` = 'Breakfast Provision 2' AND T2.`County Code` = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT schools.City FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.EILName = 'High School' AND frpm.`NSLP Provision Status` = 'Lunch Provision 2' AND frpm.`Low Grade` = '9' AND frpm.`High Grade` = '12' AND frpm.`County Name` = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT `schools`.`School`, `frpm`.`Percent (%) Eligible FRPM (Ages 5-17)` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`GSserved` = 'K-9' AND `schools`.`County` = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT T1.GSserved FROM schools AS T1 WHERE T1.City = 'Adelanto' GROUP BY T1.GSserved ORDER BY COUNT(T1.GSserved) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) as NumberOfSchools FROM schools WHERE (County = 'San Diego' OR County = 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY NumberOfSchools DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT `School Type`, `School`, `Latitude` FROM schools ORDER BY `Latitude` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "81": "SELECT schools.City, schools.School, frpm.`Low Grade` FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.State = 'CA' ORDER BY schools.Latitude ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools WHERE Longitude = ( SELECT MAX(Longitude) FROM schools )\t----- bird -----\tcalifornia_schools",
    "83": "SELECT schools.City, COUNT(*) AS num_schools, COUNT(DISTINCT frpm.`NSLP Provision Status`) AS num_provision_types FROM schools LEFT JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.Magnet = 1 AND schools.GSoffered = 'K-8' GROUP BY schools.City HAVING num_provision_types > 1\t----- bird -----\tcalifornia_schools",
    "84": "SELECT `AdmFName1`, `AdmFName2`, `District` FROM `schools` GROUP BY `AdmFName1`, `AdmFName2`, `District` ORDER BY COUNT(*) DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, frpm.`District Code` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "86": "SELECT schools.AdmLName1, schools.District, schools.County, schools.School FROM schools WHERE schools.CharterNum = '0040'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT T1.AdmEmail1, T1.AdmEmail2, T1.AdmEmail3 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'San Bernardino' AND T1.City = 'San Bernardino' AND T1.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (T2.`School Type` = 'Intermediate/Middle Schools (Public)' OR T2.`School Type` = 'Unified Schools')\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T1.School, T1.AdmEmail1 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = ( SELECT MAX(T2.NumGE1500) FROM satscores AS T2 )\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT CASE WHEN AVG(A12) > AVG(A13) THEN '1995 has higher percentage' ELSE '1996 has higher percentage' END AS 'Year with higher unemployment ratio' FROM district\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district.district_id) FROM district INNER JOIN client ON district.district_id = client.district_id WHERE client.gender = 'F' GROUP BY district.district_id HAVING AVG(district.A11) > 6000 AND AVG(district.A11) < 10000\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(DISTINCT client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M' AND district.A3 = 'north Bohemia' AND district.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT T1.account_id, MIN(T3.A11) AS lowest_avg_salary, (MAX(T3.A11) - MIN(T3.A11)) AS salary_gap FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T2.gender = 'F' GROUP BY T1.account_id ORDER BY T2.birth_date, T3.A11 LIMIT 1\t----- bird -----\tfinancial",
    "95": "SELECT account.account_id FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE client.birth_date = (SELECT MAX(birth_date) FROM client) AND district.A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id WHERE disp.type = 'DISPONENT' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT account.account_id, MIN(loan.amount) FROM account INNER JOIN loan ON account.account_id = loan.account_id WHERE STRFTIME('%Y', loan.date) = '1997' AND account.frequency = 'POPLATEK TYDNE' GROUP BY account.account_id ORDER BY MIN(loan.amount) LIMIT 1\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id, T1.date, T2.amount FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 12 AND STRFTIME('%Y', T1.date) = '1993' ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date < '1950-01-01' AND district.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM account WHERE date BETWEEN '1995-01-01' AND '1995-12-31' ORDER BY date ASC LIMIT 1\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.amount > 3000\t----- bird -----\tfinancial",
    "103": "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT account.date FROM trans INNER JOIN account ON trans.account_id = account.account_id WHERE trans.amount = 840 AND trans.date = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T1.amount) FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued = '1996-10-21'\t----- bird -----\tfinancial",
    "107": "SELECT client.gender FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id ORDER BY client.birth_date, district.A11 DESC LIMIT 1\t----- bird -----\tfinancial",
    "108": "SELECT T4.amount FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN trans AS T4 ON T3.client_id = T2.client_id WHERE T1.amount = ( SELECT MAX(amount) FROM loan ) AND T4.date > ( SELECT date FROM account WHERE account_id = T1.account_id ) ORDER BY T4.date ASC LIMIT 1\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T1.gender = 'F' AND T4.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "110": "SELECT T1.disp_id FROM disp AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 5100 AND T2.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Litomerice' AND STRFTIME('%Y', account.date) = '1996'\t----- bird -----\tfinancial",
    "112": "SELECT district.A2 FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT client.birth_date FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE loan.amount = 98832 AND loan.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT `account`.`account_id` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Prague' ORDER BY `account`.`date` ASC LIMIT 1\t----- bird -----\tfinancial",
    "115": "SELECT CAST(COUNT(CASE WHEN client.gender = 'M' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(client.client_id) AS percentage FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'south Bohemia' AND CAST(district.A4 AS INTEGER) = (SELECT MAX(CAST(A4 AS INTEGER)) FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "116": "SELECT (CAST((SUM(CASE WHEN T3.`date` = '1998-12-27' THEN T3.balance * 1 ELSE 0 END) - SUM(CASE WHEN T3.`date` = '1993-03-22' THEN T3.balance * 1 ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T3.`date` = '1993-03-22' THEN T3.balance * 1 ELSE 0 END)) AS increase_rate FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.date = '1993-07-05'\t----- bird -----\tfinancial",
    "117": "SELECT CAST(SUM(CASE WHEN `loan`.`status` = 'A' THEN `loan`.`amount` ELSE 0 END) AS REAL) * 100 / SUM(`loan`.`amount`) FROM `loan`\t----- bird -----\tfinancial",
    "118": "SELECT CAST(SUM(CASE WHEN loan.status = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT loan.account_id) FROM loan WHERE loan.amount < 100000\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T3.A2 AS district_name, T3.A3 AS district_region FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.date LIKE '1993%' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT account.account_id, account.frequency FROM account INNER JOIN district ON account.district_id = district.district_id WHERE account.date BETWEEN '1995-01-01' AND '2000-12-31' AND district.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "121": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT district.A2 AS district, district.A3 AS region FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.loan_id = 4990\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T3.A2 AS district, T3.A3 AS region FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A3, district.A11 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT district.A2, ((district.A13 - district.A12) / district.A12) * 100 AS 'Unemployment Rate Increment (%)' FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT CAST(COUNT(CASE WHEN T2.A2 = 'Decin' THEN T1.account_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "128": "SELECT district.A2, COUNT(account.account_id) AS female_account_holders FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'F' GROUP BY district.A2 ORDER BY female_account_holders DESC LIMIT 9\t----- bird -----\tfinancial",
    "129": "SELECT district.A2, trans.amount FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.type = 'VYDAJ' AND trans.operation != 'VYBER KARTOU' AND strftime('%Y-%m', trans.date) = '1996-01' ORDER BY trans.amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT A.account_id) FROM account AS A INNER JOIN disp AS D ON A.account_id = D.account_id LEFT JOIN card AS C ON D.disp_id = C.disp_id INNER JOIN district AS DI ON A.district_id = DI.district_id WHERE DI.A3 = 'South Bohemia' AND C.card_id IS NULL\t----- bird -----\tfinancial",
    "131": "SELECT district.A2 FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'C' GROUP BY district.A2 ORDER BY SUM(loan.amount) DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loan.amount) AS average_loan_amount FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT district.district_id, district.A2 FROM district INNER JOIN account ON district.district_id = account.district_id WHERE STRFTIME('%Y', account.date) = '1996' GROUP BY district.district_id ORDER BY MAX(district.A13) DESC LIMIT 1\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district ORDER BY A16 DESC LIMIT 1)\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK MESICNE' AND T2.operation = 'VYBER KARTOU' AND T2.balance < 0\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.date BETWEEN '1995-01-01' AND '1997-12-31' AND loan.amount >= 250000 AND account.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(account_id) FROM account INNER JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'C' AND account.district_id = 1\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M' AND district.district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1)\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(card.card_id) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id WHERE D.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT district.A2 FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN trans ON account.account_id = trans.account_id WHERE trans.amount > 10000 AND strftime('%Y', trans.date) = '1997'\t----- bird -----\tfinancial",
    "142": "SELECT account.account_id FROM account INNER JOIN `order` ON account.account_id = `order`.account_id INNER JOIN district ON account.district_id = district.district_id WHERE `order`.k_symbol = 'SIPO' AND district.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT account.account_id FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(T4.amount) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE STRFTIME('%Y', T4.date) = '2021' AND STRFTIME('%m', T4.date) = '01'\t----- bird -----\tfinancial",
    "145": "SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id INNER JOIN trans ON disp.account_id = trans.account_id WHERE trans.amount < (SELECT AVG(amount) FROM trans) AND STRFTIME('%Y', trans.date) = '1998'\t----- bird -----\tfinancial",
    "146": "SELECT client.client_id, client.gender FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT disp.account_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND district.A3 = 'South Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor'\t----- bird -----\tfinancial",
    "149": "SELECT disp.type FROM disp INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE disp.type = 'DISPONENT' AND district.A11 > 8000 AND district.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'North Bohemia' AND T3.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT district.A2 FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN trans ON account.account_id = trans.account_id WHERE trans.type = 'VYDAJ'\t----- bird -----\tfinancial",
    "152": "SELECT AVG(T1.A15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND STRFTIME('%Y', T2.date) >= '1997'\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(DISTINCT card.card_id) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE card.type = 'classic'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT CAST(COUNT(CASE WHEN issued < '1998-01-01' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM card WHERE type = 'gold'\t----- bird -----\tfinancial",
    "156": "SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN loan ON account.account_id = loan.account_id WHERE disp.type = 'OWNER' AND loan.amount = ( SELECT MAX(amount) FROM loan )\t----- bird -----\tfinancial",
    "157": "SELECT district.A15 FROM account INNER JOIN district ON account.district_id = district.district_id WHERE account.account_id = 532 AND district.A14 = 1995\t----- bird -----\tfinancial",
    "158": "SELECT `account`.`district_id` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` WHERE `order`.`order_id` = 33333\t----- bird -----\tfinancial",
    "159": "SELECT trans.* FROM trans INNER JOIN disp ON disp.account_id = trans.account_id INNER JOIN client ON client.client_id = disp.client_id WHERE trans.type = 'VYBER' AND client.client_id = 3356\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN loan ON account.account_id = loan.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND loan.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT card.type FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT district.A3 AS region FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT district.A2 FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.A2 ORDER BY COUNT(account.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT T3.gender, T3.birth_date FROM client AS T3 INNER JOIN disp AS T2 ON T3.client_id = T2.client_id INNER JOIN `order` AS T1 ON T2.account_id = T1.account_id WHERE T1.order_id = 32423\t----- bird -----\tfinancial",
    "165": "SELECT T1.* FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "167": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'junior' AND T3.issued > '1996-12-31'\t----- bird -----\tfinancial",
    "168": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A11 > 10000\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(CASE WHEN YEAR(T1.date) = 1997 THEN T1.amount ELSE 0 END) - SUM(CASE WHEN YEAR(T1.date) = 1996 THEN T1.amount ELSE 0 END)) / SUM(CASE WHEN YEAR(T1.date) = 1996 THEN T1.amount ELSE 0 END)) * 100 AS growth_rate FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T4.gender = 'M' AND (YEAR(T1.date) = 1996 OR YEAR(T1.date) = 1997)\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT (SELECT A16 FROM district WHERE A3 = 'East Bohemia') - (SELECT A16 FROM district WHERE A3 = 'North Bohemia') AS difference FROM district WHERE A4 = '1996'\t----- bird -----\tfinancial",
    "172": "SELECT disp.type, COUNT(*) FROM disp WHERE disp.type IN ('OWNER', 'DISPONENT') AND disp.account_id BETWEEN 1 AND 10 GROUP BY disp.type\t----- bird -----\tfinancial",
    "173": "SELECT account.frequency, trans.k_symbol FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE account.account_id = 3 AND trans.amount = 3539\t----- bird -----\tfinancial",
    "174": "SELECT strftime('%Y', T2.birth_date) AS birth_year FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 130 AND T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM account AS a INNER JOIN disp AS d ON a.account_id = d.account_id WHERE d.type = 'OWNER' AND a.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT SUM(loan.amount), loan.status FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 992\t----- bird -----\tfinancial",
    "177": "SELECT T1.balance, T3.gender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.trans_id = 851 AND T3.client_id = 4\t----- bird -----\tfinancial",
    "178": "SELECT card.type FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(T3.amount) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.client_id = 617 AND T3.type = 'VYDAJ' AND STRFTIME('%Y', T3.date) = '1998'\t----- bird -----\tfinancial",
    "180": "SELECT T1.client_id, T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND T4.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "181": "SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F' ORDER BY loan.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE client.gender = 'M' AND client.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND trans.k_symbol = 'SIPO' AND trans.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Beroun' AND account.date > '1996-12-31'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE client.gender = 'F' AND card.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT CAST(SUM(CASE WHEN client.gender = 'F' THEN 1 ELSE 0 END) AS REAL) / COUNT(client.client_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "186": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' AND T3.frequency = 'POPLATEK TYDNE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id, T1.date, T2.amount FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 24 AND T1.date < '1997-01-01' ORDER BY T2.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "189": "SELECT account.account_id FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' GROUP BY account.account_id ORDER BY MIN(client.birth_date), MIN(district.A11) LIMIT 1\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE strftime('%Y', client.birth_date) = '1920' AND district.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(loan.loan_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.duration = 24 AND account.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(loan.amount) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.status = 'C' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T1.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.type = 'DISPONENT'\t----- bird -----\tfinancial",
    "194": "SELECT client.client_id, YEAR(CURRENT_DATE) - YEAR(client.birth_date) AS age FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE card.type = 'gold'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT a.molecule_id) FROM atom AS a INNER JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '-' AND a.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT CAST(COUNT(T1.atom_id) AS REAL) / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T1.element = 'O' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "198": "SELECT CAST(COUNT(DISTINCT T3.bond_id) AS REAL) / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id WHERE T1.label = '+' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'na' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT `molecule`.`molecule_id`, `molecule`.`label` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN (SELECT molecule_id FROM bond WHERE bond_type = '=') AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = 'triple'\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(`atom`.`atom_id`) FROM `atom` WHERE `atom`.`element` != 'Br'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id IN (SELECT molecule_id FROM molecule ORDER BY molecule_id LIMIT 100)\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'C'\t----- bird -----\ttoxicology",
    "206": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT A1.element, A2.element FROM atom AS A1 JOIN connected AS C ON A1.atom_id = C.atom_id JOIN atom AS A2 ON C.atom_id2 = A2.atom_id JOIN bond AS B ON C.bond_id = B.bond_id WHERE B.bond_type = '='\t----- bird -----\ttoxicology",
    "208": "SELECT molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'h' GROUP BY molecule.label ORDER BY COUNT(molecule.label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT DISTINCT bond.bond_type FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON (connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id) WHERE atom.element = 'cl'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT a1.atom_id AS atom1, a2.atom_id AS atom2 FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN molecule AS m ON a1.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id WHERE m.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY atom.element ORDER BY COUNT(atom.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT bond.bond_type FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT label FROM molecule WHERE molecule_id NOT IN (SELECT molecule_id FROM atom WHERE element = 'sn')\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(atom_id) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element IN ('i', 's') AND bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT T2.atom_id, T2.element FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN atom AS T2 ON T3.atom_id2 = T2.atom_id WHERE T1.molecule_id = 'TR181' UNION SELECT DISTINCT T2.atom_id, T2.element FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id2 INNER JOIN atom AS T2 ON T3.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT CAST(SUM(CASE WHEN NOT EXISTS (SELECT 1 FROM atom WHERE atom.molecule_id = molecule.molecule_id AND atom.element = 'f') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule.molecule_id) FROM molecule WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "219": "SELECT CAST(SUM(CASE WHEN T1.label = '+' AND T2.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_type) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "220": "SELECT DISTINCT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR000' ORDER BY T1.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR001' AND T1.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END) AS difference FROM molecule\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT molecule.label FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = '=' GROUP BY molecule.label ORDER BY molecule.label ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT ROUND(CAST(SUM(CASE WHEN T1.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_type), 5) AS percentage FROM bond AS T1 WHERE T1.molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT FORMAT(CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(molecule_id) * 100, 3) AS 'Percentage' FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND(CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id), 4) AS percentage FROM atom AS T1 WHERE T1.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT `bond`.`bond_type` FROM `bond` WHERE `bond`.`molecule_id` = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T1.bond_type, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT molecule.molecule_id, molecule.label FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = '-' AND molecule.label != 'carcinogenic' ORDER BY molecule.label ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond.bond_id FROM bond WHERE bond.molecule_id = 'TR006' ORDER BY bond.bond_id ASC LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(`bond`.`bond_id`) FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE (`connected`.`atom_id` = 'TR009_12' OR `connected`.`atom_id2` = 'TR009_12') AND `bond`.`molecule_id` = 'TR009'\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT b.bond_type, c.atom_id, c.atom_id2 FROM bond AS b INNER JOIN connected AS c ON b.bond_id = c.bond_id WHERE b.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR001_19' OR atom_id2 = 'TR001_19'\t----- bird -----\ttoxicology",
    "240": "SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT T2.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id IN ('_21', '_22', '_23', '_24', '_25') AND T2.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id WHERE (T3.element = 'p' AND T4.element = 'n') OR (T3.element = 'n' AND T4.element = 'p')\t----- bird -----\ttoxicology",
    "244": "SELECT CASE WHEN T1.label = '+' THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic FROM molecule AS T1 INNER JOIN ( SELECT molecule_id, COUNT(bond_type) AS num FROM bond WHERE bond_type = '=' GROUP BY molecule_id ORDER BY num DESC LIMIT 1 ) AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "245": "SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'I'\t----- bird -----\ttoxicology",
    "246": "SELECT T2.bond_type, T1.bond_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR001_45'\t----- bird -----\ttoxicology",
    "247": "SELECT `element` FROM `atom` WHERE `atom_id` NOT IN (SELECT `atom_id` FROM `connected` UNION SELECT `atom_id2` FROM `connected`)\t----- bird -----\ttoxicology",
    "248": "SELECT T3.atom_id, T3.atom_id2 FROM bond AS T1 INNER JOIN connected AS T3 ON T1.bond_id = T3.bond_id WHERE T1.bond_type = '#' AND T1.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "249": "SELECT `atom`.`element` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_id` = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT molecule.label FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE molecule.label = '+' AND bond.bond_type = '=' GROUP BY molecule.molecule_id ORDER BY COUNT(bond.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY atom.element ORDER BY COUNT(atom.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT DISTINCT T2.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'pb'\t----- bird -----\ttoxicology",
    "253": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "SELECT CAST(COUNT(T1.bond_id) AS REAL) * 100 / (SELECT COUNT(bond_id) FROM bond) AS \"percentage\" FROM ( SELECT atom_id, atom_id2, bond_id, COUNT(*) AS count FROM ( SELECT c.bond_id, a1.element AS atom1_element, a2.element AS atom2_element FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id ) AS sub GROUP BY atom1_element, atom2_element ORDER BY count DESC LIMIT 1 ) AS T1 JOIN bond ON T1.bond_id = bond.bond_id\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND(CAST(SUM(CASE WHEN T1.bond_type = '-' AND T2.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.bond_type = '-' THEN 1 ELSE 0 END), 5) AS Proportion FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(atom_id) FROM atom WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology",
    "257": "SELECT connected.atom_id2 FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT bond.bond_type FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON (connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id) WHERE atom.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT atom.element) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#' AND T1.element IN ('p', 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT molecule.molecule_id FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT CAST(COUNT(CASE WHEN T1.element = 'cl' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT `label` FROM `molecule` WHERE `molecule_id` IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR030'\t----- bird -----\ttoxicology",
    "267": "SELECT `bond_type` FROM `bond` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT b.bond_id) FROM bond AS b INNER JOIN connected AS c ON b.bond_id = c.bond_id INNER JOIN atom AS a ON c.atom_id = a.atom_id WHERE a.element = 'I'\t----- bird -----\ttoxicology",
    "270": "SELECT CASE WHEN COUNT(CASE WHEN T2.label = '+' THEN 1 END) > COUNT(CASE WHEN T2.label = '-' THEN 1 END) THEN 'Carcinogenic' ELSE 'Non-Carcinogenic' END AS Majority FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'\t----- bird -----\ttoxicology",
    "271": "SELECT CASE WHEN COUNT(DISTINCT element) = 2 THEN 'Yes' ELSE 'No' END AS 'Both Elements Present' FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR001_1_8' ) AND element IN ('cl', 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '-' AND `atom`.`element` = 'c' GROUP BY `molecule`.`molecule_id` HAVING COUNT(`molecule`.`molecule_id`) = 2\t----- bird -----\ttoxicology",
    "273": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT `atom`.`element` FROM `atom` WHERE `atom`.`molecule_id` = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type = '='\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT `bond`.`bond_id`, `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT atom.element, COUNT(atom.element) AS count FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom.atom_id LIKE '%_4' GROUP BY atom.element\t----- bird -----\ttoxicology",
    "282": "SELECT CAST(SUM(CASE WHEN `atom`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(`atom`.`atom_id`) AS ratio, `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT CASE WHEN EXISTS (SELECT 1 FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'ca' AND T1.label = '+') THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic\t----- bird -----\ttoxicology",
    "284": "SELECT bond.bond_type FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'C' GROUP BY bond.bond_type\t----- bird -----\ttoxicology",
    "285": "SELECT T1.element, T2.element FROM atom AS T1, atom AS T2, connected AS T3 WHERE T3.bond_id = 'TR001_10_11' AND T1.atom_id = T3.atom_id AND T2.atom_id = T3.atom_id2\t----- bird -----\ttoxicology",
    "286": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.bond_type = '#' THEN T1.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "287": "SELECT CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) AS percentage FROM bond WHERE molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT label FROM molecule WHERE molecule_id = (SELECT molecule_id FROM atom WHERE atom_id = 'TR001_1')\t----- bird -----\ttoxicology",
    "289": "SELECT CASE WHEN EXISTS ( SELECT 1 FROM molecule WHERE molecule_id = 'TR151' AND label = '+' ) THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic\t----- bird -----\ttoxicology",
    "290": "SELECT `atom`.`element` FROM `atom` WHERE `atom`.`molecule_id` = 'TR151' AND `atom`.`element` IN ('Mercury', 'Lead', 'Cadmium', 'Arsenic')\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "292": "SELECT `atom_id` FROM `atom` WHERE `molecule_id` BETWEEN 'TR010' AND 'TR050' AND `element` = 'C'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(atom.atom_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'carcinogenic compounds'\t----- bird -----\ttoxicology",
    "294": "SELECT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(atom.atom_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'h' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR000_1_2' AND T2.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "297": "SELECT atom.atom_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'c' AND molecule.label != 'carcinogenic'\t----- bird -----\ttoxicology",
    "298": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element = 'h' THEN T2.molecule_id END) AS REAL) * 100 / COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id END) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "299": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic FROM molecule WHERE molecule_id = 'TR124'\t----- bird -----\ttoxicology",
    "300": "SELECT `atom_id` FROM `atom` WHERE `molecule_id` = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19'\t----- bird -----\ttoxicology",
    "302": "SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2 WHERE connected.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(bond.bond_id) AS DoubleBonds, CASE WHEN molecule.label = '+' THEN 'Carcinogenic' ELSE 'Non-Carcinogenic' END AS Carcinogenic FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' AND bond.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "304": "SELECT molecule.label, atom.element FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT molecule.label, GROUP_CONCAT(DISTINCT atom.element) AS elements FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id WHERE bond.bond_type = '#' GROUP BY molecule.molecule_id\t----- bird -----\ttoxicology",
    "307": "SELECT a1.element, a2.element FROM atom AS a1, atom AS a2, connected AS c WHERE c.bond_id = 'TR000_2_3' AND a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT `bond_id`) FROM `connected` WHERE `atom_id` IN (SELECT `atom_id` FROM `atom` WHERE `element` = 'cl') OR `atom_id2` IN (SELECT `atom_id` FROM `atom` WHERE `element` = 'cl')\t----- bird -----\ttoxicology",
    "309": "SELECT `atom`.`atom_id`, COUNT(DISTINCT `bond`.`bond_type`) FROM `atom` LEFT JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR346'\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) AS TotalMolecules, COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T1.molecule_id END) AS CarcinogenicMolecules FROM bond AS T1 LEFT JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN connected c ON a.atom_id = c.atom_id LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE a.element != 's' AND (b.bond_type IS NULL OR b.bond_type != '=')\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "315": "SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'cl' AND `molecule`.`label` = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT molecule_id FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'c') AND label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element = 'cl' THEN T1.molecule_id END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id IN (T2.atom_id, T2.atom_id2) WHERE T2.bond_id = 'TR001_3_4'\t----- bird -----\ttoxicology",
    "320": "SELECT bond.bond_type FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 'TR000_1' AND connected.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.atom_id = 'TR000_2' AND T2.atom_id2 = 'TR000_4'\t----- bird -----\ttoxicology",
    "322": "SELECT `element` FROM `atom` WHERE `atom_id` = 'TR000_1'\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT CAST(SUM(CASE WHEN T1.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.atom_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'n'\t----- bird -----\ttoxicology",
    "326": "SELECT T3.label FROM molecule AS T3 INNER JOIN atom AS T1 ON T3.molecule_id = T1.molecule_id INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T4 ON T2.bond_id = T4.bond_id WHERE T1.element = 'S' AND T4.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT molecule.label, COUNT(atom.atom_id) AS atom_count FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '-' GROUP BY atom.molecule_id HAVING COUNT(atom.atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT A.element FROM atom A INNER JOIN connected C ON A.atom_id = C.atom_id OR A.atom_id = C.atom_id2 INNER JOIN bond B ON C.bond_id = B.bond_id WHERE B.bond_type = '=' AND A.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT molecule.label, COUNT(atom.atom_id) AS atom_count FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+' GROUP BY molecule.molecule_id ORDER BY atom_count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT CAST(COUNT(DISTINCT T1.molecule_id) AS REAL) * 100 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+') FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id INNER JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T1.label = '+' AND T2.element = 'h' AND T4.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '-' AND molecule_id BETWEEN 'TR004' AND 'TR010'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(`atom_id`) FROM `atom` WHERE `molecule_id` = 'TR008' AND `element` = 'C'\t----- bird -----\ttoxicology",
    "334": "SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`atom_id` = 'TR004_7' AND `molecule`.`label` = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE molecule_id IN ( SELECT bond.molecule_id FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON (connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id) WHERE bond.bond_type = '=' AND atom.element = 'o' )\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label != '-'\t----- bird -----\ttoxicology",
    "337": "SELECT T1.element, T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.molecule_id = 'TR002'\t----- bird -----\ttoxicology",
    "338": "SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '=' AND `atom`.`element` = 'c' AND `bond`.`molecule_id` = 'TR012' AND `atom`.`molecule_id` = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT atom.atom_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT name FROM cards WHERE hasFoil = 1 AND cardKingdomFoilId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT cards.name FROM cards WHERE cards.borderColor = 'borderless' AND cards.hasFoil = 0\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost > convertedManaCost\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100\t----- bird -----\tcard_games",
    "344": "SELECT cards.name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T1.name, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type LIKE '%Artifact%' AND T1.otherFaceIds IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*') AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T1.name, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "348": "SELECT T2.text, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT `cards`.`name`, `cards`.`artist`, `cards`.`isPromo` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` GROUP BY `rulings`.`uuid` ORDER BY COUNT(`rulings`.`id`) DESC LIMIT 1\t----- bird -----\tcard_games",
    "350": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.language = 'Chinese Simplified' THEN T1.uuid ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.uuid) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "353": "SELECT T1.name, T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(id) FROM cards WHERE power = '\u221e'\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "360": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode INNER JOIN cards AS T3 ON T1.code = T3.setCode WHERE T3.name = 'Angel of Mercy' GROUP BY T2.language\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(cards.id) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Restricted' AND cards.text IS NOT NULL\t----- bird -----\tcard_games",
    "362": "SELECT r.text FROM rulings AS r INNER JOIN cards AS c ON r.uuid = c.uuid WHERE c.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(DISTINCT cards.id) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN sets ON cards.setCode = sets.code WHERE legalities.status = 'Restricted' AND sets.type = 'starter'\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT T.type FROM cards AS T WHERE T.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "366": "SELECT T2.text AS Rule FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE name LIKE '%Phyrexian%' OR type LIKE '%Phyrexian%'\t----- bird -----\tcard_games",
    "368": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0.0\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords LIKE '%Flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE hasFoil = 1 AND hasNonFoil = 1 AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'duel deck a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT cards.artist FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T2.language FROM cards AS T1 INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T3.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(T1.id), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' GROUP BY T2.status\t----- bird -----\tcard_games",
    "387": "SELECT cards.name, cards.colors FROM cards WHERE cards.setCode = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT cards.name, set_translations.language FROM cards INNER JOIN set_translations ON cards.setCode = set_translations.setCode WHERE cards.setCode = '10E' AND cards.convertedManaCost = 5\t----- bird -----\tcard_games",
    "389": "SELECT cards.name, rulings.date FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT cards.colors, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT cards.name, foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.type LIKE '%Artifact%' AND cards.colors LIKE '%B%'\t----- bird -----\tcard_games",
    "392": "SELECT cards.name FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'uncommon' ORDER BY rulings.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 1 AND (power IS NULL OR power = '*' OR CAST(power AS INTEGER) < X)\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power > 5\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(id) FROM cards WHERE artist = 'UDON' AND availability LIKE '%mtgo%' AND hand = '-1'\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability LIKE '%paper%' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT cards.manaCost FROM cards WHERE cards.layout = 'normal' AND cards.frameVersion = '2003' AND cards.borderColor = 'black' AND cards.availability LIKE '%paper%' AND cards.availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT T.type FROM cards AS T WHERE T.mtgArenaId IS NOT NULL\t----- bird -----\tcard_games",
    "400": "SELECT setCode FROM set_translations WHERE language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT CAST(COUNT(CASE WHEN T1.frameEffects LIKE '%legendary%' AND T2.isOnlineOnly = 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T1.frameEffects LIKE '%legendary%' THEN 1 ELSE NULL END) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code\t----- bird -----\tcard_games",
    "402": "SELECT CAST(SUM(CASE WHEN isTextless = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) AS percentage, id FROM cards WHERE isStorySpotlight = 1 GROUP BY id\t----- bird -----\tcard_games",
    "403": "SELECT foreign_data.name, CAST(SUM(CASE WHEN foreign_data.language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(foreign_data.id) AS percentage FROM foreign_data GROUP BY foreign_data.name HAVING foreign_data.language = 'Spanish'\t----- bird -----\tcard_games",
    "404": "SELECT set_translations.language FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Portuguese (Brazil)' AND T2.block = 'Commander'\t----- bird -----\tcard_games",
    "406": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.type LIKE '%Creature%' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German'\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(id) FROM cards WHERE (power = '*' OR power IS NULL) AND (text LIKE '%When%' OR text LIKE '%Whenever%' OR text LIKE '%At the beginning of%')\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(cards.uuid) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE legalities.format = 'premodern' AND rulings.text = 'This is a triggered mana ability.' AND cards.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Erica Yang' AND `legalities`.`format` = 'pauper' AND `cards`.`availability` LIKE '%paper%'\t----- bird -----\tcard_games",
    "411": "SELECT cards.artist FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE foreign_data.language = 'French' AND cards.type LIKE '%Creature%' AND cards.layout = 'normal' AND cards.borderColor = 'black' AND cards.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(DISTINCT cards.id) FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'rare' AND rulings.text IS NOT NULL AND rulings.date = '2007-02-01'\t----- bird -----\tcard_games",
    "414": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT CAST(COUNT(CASE WHEN cards.hasContentWarning = 0 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(cards.uuid) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'commander' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "416": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'\t----- bird -----\tcard_games",
    "417": "SELECT CAST(SUM(CASE WHEN T2.type = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese'\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE colors IS NOT NULL AND borderColor = 'borderless' AND edhrecRank > 12000\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\t----- bird -----\tcard_games",
    "421": "SELECT cards.name, cards.power, cards.promoTypes FROM cards WHERE (cards.power = '*' OR cards.power IS NULL) AND cards.promoTypes LIKE '%arenaleague%' ORDER BY cards.name ASC LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "423": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY edhrecRank ASC, cardKingdomFoilId ASC LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) FROM cards\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'\t----- bird -----\tcard_games",
    "426": "SELECT sets.code, sets.name FROM sets WHERE sets.isOnlineOnly = 0 ORDER BY sets.name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT set_translations.language FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Archenemy' AND sets.code = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT sets.name, set_translations.translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T1.language, T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT sets.id, sets.name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Italian' AND sets.block = 'Shadowmoor' ORDER BY sets.name ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT sets.id FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.isForeignOnly = 0 AND sets.isFoilOnly = 1 AND set_translations.language = 'Japanese'\t----- bird -----\tcard_games",
    "432": "SELECT T1.setCode, T1.translation, T2.totalSetSize FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Russian' ORDER BY T2.totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT CAST(SUM(CASE WHEN T1.language = 'Chinese Simplified' AND T2.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.setCode) FROM foreign_data AS T1 INNER JOIN sets AS T2 ON T1.uuid = T2.code\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese' AND T2.isOnlineOnly = 0\t----- bird -----\tcard_games",
    "435": "SELECT id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects LIKE '%extendedart%'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 174\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL'\t----- bird -----\tcard_games",
    "440": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT setCode FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT T2.name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT T1.language, T1.flavorText, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name LIKE '%Abyssal Horror%'\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type LIKE '%expansion%' AND type LIKE '%commander%'\t----- bird -----\tcard_games",
    "448": "SELECT T2.name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT foreign_data.language, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND (power >= 10 OR power = '\u221e')\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE text IS NOT NULL\t----- bird -----\tcard_games",
    "453": "SELECT \"cards\".\"manaCost\" FROM \"cards\" WHERE \"cards\".\"name\" = 'Ancestor's Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(cards.id) FROM cards WHERE borderColor = 'white' AND (power IS NULL OR power = '*')\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT `types` FROM `cards` WHERE `name` = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "460": "SELECT cards.artist FROM cards WHERE cards.flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor's Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(set_translations.translation) FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code INNER JOIN cards ON sets.code = cards.setCode WHERE cards.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "464": "SELECT `cards`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT CASE WHEN EXISTS (SELECT 1 FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Korean') THEN 'Yes' ELSE 'No' END AS 'Korean Version Exists'\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize FROM sets WHERE name = 'Seventh Edition'\t----- bird -----\tcard_games",
    "468": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "469": "SELECT CASE WHEN EXISTS ( SELECT 1 FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Angel of Mercy' AND sets.isOnlineOnly = 1 ) THEN 'Yes' ELSE 'No' END AS 'Did_Angel_of_Mercy_appear_online'\t----- bird -----\tcard_games",
    "470": "SELECT `sets`.`releaseDate` FROM `sets` INNER JOIN `cards` ON `sets`.`code` = `cards`.`setCode` WHERE `cards`.`name` = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT CASE WHEN sets.isForeignOnly = 1 THEN 'Yes' ELSE 'No' END AS 'Only Available Outside US' FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT sets.code) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Italian' AND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' ORDER BY cards.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "477": "SELECT cards.artist FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "478": "SELECT `cards`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`number` = '4' AND `sets`.`name` = 'Coldsnap'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(cards.id) FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.convertedManaCost > 5 AND sets.name = 'Coldsnap' AND (cards.power IS NULL OR cards.power = '*')\t----- bird -----\tcard_games",
    "480": "SELECT foreign_data.flavorText FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE foreign_data.language = 'Italian' AND cards.name = 'Ancestor's Chosen'\t----- bird -----\tcard_games",
    "481": "SELECT foreign_data.language FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Ancestor's Chosen' AND foreign_data.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor's Chosen' AND T2.language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT T1.name, T2.text FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Italian' AND T1.setCode = 'Coldsnap'\t----- bird -----\tcard_games",
    "484": "SELECT `foreign_data`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` INNER JOIN `foreign_data` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `sets`.`name` = 'Coldsnap' AND `foreign_data`.`language` = 'Italian' ORDER BY `cards`.`convertedManaCost` DESC LIMIT 1\t----- bird -----\tcard_games",
    "485": "SELECT rulings.date FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.convertedManaCost) AS \"percentage\" FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name LIKE 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT CAST(SUM(CASE WHEN T1.power > 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.setCode) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT T.type FROM sets AS T WHERE T.name = 'From the Vault: Lore'\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT cards.name, rulings.text, cards.hasContentWarning FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT `sets`.`releaseDate` FROM `sets` INNER JOIN `cards` ON `sets`.`code` = `cards`.`setCode` WHERE `cards`.`name` = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT totalSetSize FROM sets WHERE name LIKE '%Rinascita di Alara%'\t----- bird -----\tcard_games",
    "497": "SELECT `sets`.`type` FROM `sets` WHERE `sets`.`name` = 'Unlimited Edition'\t----- bird -----\tcard_games",
    "498": "SELECT T3.translation FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T3.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Tenth Edition'\t----- bird -----\tcard_games",
    "500": "SELECT T3.translation FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Fellwar Stone' AND T3.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT `cards`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Journey into Nyx Hero\\'s Path' ORDER BY `cards`.`convertedManaCost` DESC LIMIT 1\t----- bird -----\tcard_games",
    "502": "SELECT releaseDate FROM sets WHERE name = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT \"sets\".\"type\" FROM \"cards\" INNER JOIN \"sets\" ON \"cards\".\"setCode\" = \"sets\".\"code\" WHERE \"cards\".\"name\" = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'World Championship Decks 2004' AND cards.convertedManaCost = 3\t----- bird -----\tcard_games",
    "505": "SELECT set_translations.translation FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Mirrodin' AND set_translations.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "506": "SELECT CAST(SUM(CASE WHEN T1.isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT CAST(SUM(CASE WHEN sets.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE isTextless = 1 AND artist = 'Aleksi Briclot'\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE hasFoil = 1 AND convertedManaCost >= 7 GROUP BY frameEffects ORDER BY COUNT(frameEffects) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(id) FROM cards WHERE power IS NULL OR power = '*' AND hasFoil = 0 AND duelDeck = 'A'\t----- bird -----\tcard_games",
    "513": "SELECT sets.id FROM sets WHERE sets.type = 'commander' ORDER BY sets.totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "514": "SELECT cards.name, cards.convertedManaCost FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'duel' AND legalities.status = 'Legal' ORDER BY cards.convertedManaCost DESC LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT cards.originalReleaseDate, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'mythic' ORDER BY cards.originalReleaseDate ASC LIMIT 1\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(DISTINCT cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.artist = 'Volkan Ba\u01f5a' AND foreign_data.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(DISTINCT cards.id) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'rare' AND cards.type LIKE '%Enchantment%' AND cards.name = 'Abundance' AND legalities.status = 'Legal' AND NOT EXISTS ( SELECT 1 FROM legalities AS l2 WHERE l2.uuid = cards.uuid AND l2.status != 'Legal' )\t----- bird -----\tcard_games",
    "518": "SELECT T1.format, T2.name FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' GROUP BY T1.format ORDER BY COUNT(T1.status) DESC LIMIT 1\t----- bird -----\tcard_games",
    "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT T1.artist, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid GROUP BY T1.artist, T2.format HAVING COUNT(T1.uuid) = ( SELECT MIN(COUNT(uuid)) FROM cards GROUP BY artist )\t----- bird -----\tcard_games",
    "521": "SELECT T3.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T1.hasContentWarning = 1 AND T2.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT cards.name, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.edhrecRank = 1 AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "523": "SELECT CAST(COUNT(*) AS REAL) / 4 AS 'Annual Average', T2.language AS 'Common Language' FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY strftime('%Y', T1.releaseDate) ORDER BY COUNT(T2.language) DESC\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT uuid FROM legalities WHERE format = 'oldschool' AND status IN ('Restricted', 'Banned')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(id) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT rulings.date, rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT cards.name, legalities.format FROM cards INNER JOIN sets ON cards.setCode = sets.code INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE sets.name = 'Hour of Devastation'\t----- bird -----\tcard_games",
    "529": "SELECT s.name FROM sets AS s WHERE s.code IN ( SELECT st.setCode FROM set_translations AS st WHERE st.language = 'Korean' ) AND s.code NOT IN ( SELECT st.setCode FROM set_translations AS st WHERE st.language = 'Japanese' )\t----- bird -----\tcard_games",
    "530": "SELECT T1.frameVersion, T1.name, T2.status AS 'Banned Status' FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid AND T2.status = 'Banned' WHERE T1.artist = 'Allen Williams'\t----- bird -----\tcard_games",
    "531": "SELECT CASE WHEN (SELECT Reputation FROM users WHERE DisplayName = 'Harlan') > (SELECT Reputation FROM users WHERE DisplayName = 'Jarrod Dixon') THEN 'Harlan' ELSE 'Jarrod Dixon' END AS UserWithHigherReputation;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(Id) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "534": "SELECT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId GROUP BY posts.OwnerUserId ORDER BY SUM(posts.ViewCount) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(Id) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND CreationDate > '2013-12-31'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "538": "SELECT posts.Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT posts.Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' ORDER BY posts.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(T1.CommentCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(T1.AnswerCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE posts.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' AND posts.ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age > 65 AND posts.Score > 19\t----- bird -----\tcodebase_community",
    "548": "SELECT users.Location FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT posts.Body FROM tags INNER JOIN posts ON tags.ExcerptPostId = posts.Id ORDER BY tags.Count DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(badges.Id) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "552": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(badges.Id) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie' AND STRFTIME('%Y', badges.Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT users.DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId GROUP BY badges.UserId ORDER BY COUNT(badges.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(`posts`.`Score`) FROM `posts` INNER JOIN `users` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_count) FROM ( SELECT users.Id, COUNT(badges.Id) as badge_count FROM users LEFT JOIN badges ON users.Id = badges.UserId WHERE users.Views > 200 GROUP BY users.Id ) AS badge_counts\t----- bird -----\tcodebase_community",
    "557": "SELECT CAST(SUM(CASE WHEN users.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Score > 5\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(votes.Id) FROM votes WHERE votes.UserId = 58 AND votes.CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(Name) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT posts.Title FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE comments.Score = ( SELECT MAX(Score) FROM comments )\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910\t----- bird -----\tcodebase_community",
    "563": "SELECT T2.FavoriteCount FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 3025 AND T1.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "564": "SELECT Text FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE ParentId = 107829) LIMIT 1\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN T2.`ClosedDate` IS NULL THEN 'No' ELSE 'Yes' END AS 'Well-finished' FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "566": "SELECT users.Reputation FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Id = 65041\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "568": "SELECT users.DisplayName FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE votes.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(votes.Id) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Body LIKE '%data visualization%' OR posts.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT CAST(COUNT(T1.OwnerUserId) AS REAL) / COUNT(T2.UserId) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.OwnerUserId = T2.UserId WHERE T1.OwnerUserId = 24 AND T2.UserId = 24\t----- bird -----\tcodebase_community",
    "572": "SELECT `ViewCount` FROM `posts` WHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName, Id FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT users.DisplayName FROM users INNER JOIN comments ON users.Id = comments.UserId WHERE comments.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT `comments`.`Text` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT users.DisplayName, users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT users.DisplayName FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
    "582": "SELECT posts.Title FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score), T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT comments.Text FROM comments INNER JOIN postHistory ON comments.UserId = postHistory.UserId INNER JOIN posts ON postHistory.PostId = posts.Id WHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE posts.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT users.Id, users.DisplayName FROM users INNER JOIN votes ON users.Id = votes.UserId INNER JOIN posts ON votes.PostId = posts.Id WHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT posts.Title, comments.Text, AVG(posts.ViewCount) AS AverageViewCount FROM posts INNER JOIN postLinks ON posts.Id = postLinks.PostId INNER JOIN tags ON postLinks.RelatedPostId = tags.Id INNER JOIN comments ON posts.Id = comments.PostId WHERE tags.TagName = 'humor' GROUP BY posts.Id, comments.Id\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "590": "SELECT users.Id FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId ORDER BY posts.ViewCount ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT badges.UserId) FROM badges WHERE badges.Name = 'Supporter' AND badges.Date BETWEEN '2011-01-01' AND '2011-12-31'\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) FROM ( SELECT COUNT(badges.Id) FROM badges INNER JOIN users ON badges.UserId = users.Id GROUP BY users.Id HAVING COUNT(badges.Id) > 5 ) T1\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT U.Id) FROM users U INNER JOIN badges B ON U.Id = B.UserId WHERE U.Location LIKE '%New York%' AND B.Name IN ('Teacher', 'Supporter') GROUP BY U.Id HAVING COUNT(DISTINCT B.Name) = 2\t----- bird -----\tcodebase_community",
    "594": "SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `posts`.`Id` = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT users.Id, users.DisplayName FROM users INNER JOIN ( SELECT postHistory.UserId, posts.ViewCount FROM postHistory INNER JOIN posts ON postHistory.PostId = posts.Id GROUP BY postHistory.PostId HAVING COUNT(postHistory.Id) = 1 AND MIN(posts.ViewCount) >= 1000 ) AS T ON users.Id = T.UserId\t----- bird -----\tcodebase_community",
    "596": "SELECT users.DisplayName, badges.Name FROM users INNER JOIN comments ON users.Id = comments.UserId INNER JOIN badges ON users.Id = badges.UserId GROUP BY users.Id ORDER BY COUNT(comments.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location LIKE '%India%' AND badges.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT (CAST((SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2011') AS REAL) - CAST((SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2010') AS REAL)) / CAST((SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2010') AS REAL) * 100 AS percentage_difference FROM badges WHERE Name = 'Student' AND (strftime('%Y', Date) = '2010' OR strftime('%Y', Date) = '2011')\t----- bird -----\tcodebase_community",
    "599": "SELECT postHistory.PostHistoryTypeId, COUNT(DISTINCT comments.UserId) FROM postHistory LEFT JOIN comments ON postHistory.PostId = comments.PostId WHERE postHistory.PostId = 3720\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.PostId, T1.RelatedPostId, T2.ViewCount, T2.Score, T2.FavoriteCount FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id OR T1.RelatedPostId = T2.Id WHERE T1.PostId = 61217 OR T1.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT posts.Score, postLinks.LinkTypeId FROM posts INNER JOIN postLinks ON posts.Id = postLinks.PostId WHERE posts.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT posts.Id AS PostId, posts.OwnerUserId AS UserId FROM posts WHERE posts.Score > 60\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(posts.FavoriteCount) FROM posts WHERE posts.OwnerUserId = 686 AND posts.CreaionDate BETWEEN '2011-01-01' AND '2011-12-31'\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(T1.UpVotes), AVG(T1.Age) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId GROUP BY T2.OwnerUserId HAVING COUNT(T2.Id) > 10\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "606": "SELECT `Name` FROM `badges` WHERE `Date` = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community",
    "610": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id ORDER BY users.Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "611": "SELECT users.Reputation FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT badges.Date FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT CAST(COUNT(DISTINCT T1.UserId) AS REAL) * 100 / COUNT(T2.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "615": "SELECT CAST(SUM(CASE WHEN users.Age BETWEEN 13 AND 19 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(badges.UserId) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "616": "SELECT comments.Score FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.CreaionDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
    "617": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT users.Age FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(badges.Id) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Age BETWEEN 19 AND 65 AND badges.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(T1.Views) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT Name FROM badges WHERE UserId IN ( SELECT Id FROM users WHERE Reputation = ( SELECT MIN(Reputation) FROM users ) )\t----- bird -----\tcodebase_community",
    "622": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Age > 65 AND badges.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location LIKE '%New York%'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "628": "SELECT users.Id, users.DisplayName, SUM(posts.ViewCount) AS TotalViews FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId GROUP BY users.Id, users.DisplayName ORDER BY TotalViews DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "629": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN STRFTIME('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes\t----- bird -----\tcodebase_community",
    "630": "SELECT tags.TagName FROM tags INNER JOIN posts ON tags.Id = posts.Id INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'John Salvatier'\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Daniel Vassallo'\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT posts.Id FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'slashnick' ORDER BY posts.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT users.DisplayName, posts.Title, MAX(posts.ViewCount) AS Popularity FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY users.DisplayName ORDER BY Popularity DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(DISTINCT posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id INNER JOIN votes ON posts.Id = votes.PostId WHERE users.DisplayName = 'Matt Parker' GROUP BY posts.Id HAVING COUNT(votes.PostId) > 4\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(comments.Id) FROM comments INNER JOIN posts ON comments.PostId = posts.Id INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Neil McGuigan' AND comments.Score < 60\t----- bird -----\tcodebase_community",
    "637": "SELECT posts.Tags FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id LEFT JOIN comments ON posts.Id = comments.PostId WHERE users.DisplayName = 'Mark Meckes' AND comments.PostId IS NULL\t----- bird -----\tcodebase_community",
    "638": "SELECT users.DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(SUM(CASE WHEN T1.Body LIKE '%R%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "640": "SELECT (SUM(CASE WHEN users.DisplayName = 'Mornington' THEN posts.ViewCount ELSE 0 END) - SUM(CASE WHEN users.DisplayName = 'Amos' THEN posts.ViewCount ELSE 0 END)) AS ViewCountDifference FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT badges.UserId) FROM badges WHERE badges.Name = 'Commentator' AND badges.Date BETWEEN '2014-01-01' AND '2014-12-31'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(posts.Id) FROM posts WHERE DATE(posts.CreaionDate) = '2010-07-21'\t----- bird -----\tcodebase_community",
    "643": "SELECT users.DisplayName, users.Age FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId ORDER BY posts.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(Id) FROM comments WHERE Score < 60 AND UserId = 13\t----- bird -----\tcodebase_community",
    "646": "SELECT posts.Title, comments.UserDisplayName FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE comments.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Date BETWEEN '2011-01-01 00:00:00' AND '2011-12-31 23:59:59' AND users.Location LIKE '%North Pole%'\t----- bird -----\tcodebase_community",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(*), posts.LastEditDate FROM postHistory INNER JOIN posts ON postHistory.PostId = posts.Id WHERE posts.Title = 'What is the best introductory Bayesian statistics textbook?'\t----- bird -----\tcodebase_community",
    "650": "SELECT users.LastAccessDate, users.Location FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'How to tell if something happened in a data set which monitors a value over time')\t----- bird -----\tcodebase_community",
    "652": "SELECT posts.Id AS 'Post ID', badges.Name AS 'Badge Name' FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId INNER JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'Samuel' AND YEAR(posts.CreaionDate) = 2013 AND YEAR(badges.Date) = 2013\t----- bird -----\tcodebase_community",
    "653": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id ORDER BY posts.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "654": "SELECT users.DisplayName, users.Location FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?')\t----- bird -----\tcodebase_community",
    "656": "SELECT P2.OwnerDisplayName FROM posts AS P1 INNER JOIN posts AS P2 ON P1.ParentId = P2.Id WHERE P1.ParentId IS NOT NULL ORDER BY P1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "657": "SELECT users.DisplayName, users.WebsiteUrl FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE votes.VoteTypeId = 8 ORDER BY votes.BountyAmount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts )\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT posts.Id) FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE strftime('%Y', votes.CreationDate) = '2011' AND votes.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users ORDER BY Age ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE DATE(CreaionDate) = '2010-07-19'\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(monthly_links) AS avg_monthly_links FROM ( SELECT strftime('%m', CreationDate) AS month, COUNT(Id) AS monthly_links FROM postLinks INNER JOIN posts ON postLinks.PostId = posts.Id WHERE strftime('%Y', CreationDate) = '2010' AND AnswerCount <= 2 GROUP BY month )\t----- bird -----\tcodebase_community",
    "666": "SELECT `posts`.`Id` FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `votes`.`UserId` = 1465 ORDER BY `posts`.`Score` DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "667": "SELECT posts.Title FROM postLinks INNER JOIN posts ON postLinks.PostId = posts.Id ORDER BY postLinks.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "668": "SELECT users.DisplayName FROM users INNER JOIN ( SELECT badges.UserId, COUNT(badges.Id) AS badge_count FROM badges GROUP BY badges.UserId ORDER BY badge_count DESC LIMIT 1 ) AS badge_counts ON users.Id = badge_counts.UserId\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(T2.CreationDate) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreationDate) FROM posts INNER JOIN users ON users.Id = posts.OwnerUserId WHERE users.Age = ( SELECT MIN(Age) FROM users )\t----- bird -----\tcodebase_community",
    "671": "SELECT `users`.`DisplayName` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Autobiographer' ORDER BY `badges`.`Date` ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN posts ON posts.OwnerUserId = users.Id WHERE users.Location LIKE '%United Kingdom%' GROUP BY users.Id HAVING SUM(posts.FavoriteCount) >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(T1.num_votes) FROM ( SELECT COUNT(T2.PostId) AS num_votes FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.Age = ( SELECT MAX(Age) FROM users ) GROUP BY T1.Id ) AS T1\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE users.Reputation > 2000 AND posts.ViewCount > 1000\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Jay Stevens' AND posts.CreaionDate LIKE '2010-%'\t----- bird -----\tcodebase_community",
    "678": "SELECT posts.Id, posts.Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky' ORDER BY posts.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.ViewCount > 20000 AND STRFTIME('%Y', posts.CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "682": "SELECT posts.Id, users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.CreationDate BETWEEN '2010-01-01' AND '2010-12-31' ORDER BY posts.Score DESC, posts.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "683": "SELECT (CAST(COUNT(CASE WHEN users.Reputation > 1000 THEN 1 ELSE NULL END) AS REAL) / COUNT(posts.Id)) * 100 AS percentage FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE strftime('%Y', posts.CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
    "684": "SELECT (CAST(COUNT(*) AS REAL) WHERE Age BETWEEN 13 AND 18) / COUNT(*) * 100 AS percentage FROM users\t----- bird -----\tcodebase_community",
    "685": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > ( SELECT AVG(ViewCount) FROM posts WHERE ViewCount IS NOT NULL )\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN ( SELECT T2.Id FROM posts AS T2 ORDER BY T2.Score DESC LIMIT 1 ) AS T3 ON T1.PostId = T3.Id\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND Id NOT IN (SELECT PostId FROM comments)\t----- bird -----\tcodebase_community",
    "689": "SELECT users.DisplayName, users.Location FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE posts.Id = 183\t----- bird -----\tcodebase_community",
    "690": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Emmett' ORDER BY badges.Date DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.Age BETWEEN 19 AND 65 AND v.VoteTypeId = 2 GROUP BY u.Id HAVING SUM(v.VoteTypeId) > 5000\t----- bird -----\tcodebase_community",
    "692": "SELECT strftime('%s', badges.Date) - strftime('%s', users.CreationDate) AS TimeDifference FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)) AS NumberOfPosts, (SELECT COUNT(*) FROM comments WHERE UserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)) AS NumberOfComments\t----- bird -----\tcodebase_community",
    "694": "SELECT comments.Text, comments.UserDisplayName FROM comments INNER JOIN posts ON comments.PostId = posts.Id INNER JOIN users ON comments.UserId = users.Id WHERE posts.Title = 'Analysing wind data with R' ORDER BY comments.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol'\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(Id) FROM posts WHERE Tags LIKE '%<careers>%'\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT (SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')) AS CommentCount, (SELECT COUNT(*) FROM posts WHERE ParentId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')) AS AnswerCount\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(DISTINCT posts.Id) FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE votes.BountyAmount > 30\t----- bird -----\tcodebase_community",
    "701": "SELECT (CAST(SUM(CASE WHEN Score > 50 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(Id) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT users.Reputation, users.UpVotes FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Body LIKE '%linear regression%' OR T2.Title LIKE '%linear regression%'\t----- bird -----\tcodebase_community",
    "707": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT users.CreationDate, users.Age FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Text LIKE '%website%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T1.PostId) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(comments.Score) FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.CommentCount = 1 AND comments.Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(users.Id) FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Score = 0 AND users.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT posts.Id, comments.Text FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT comments.Text FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT users.DisplayName FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Score BETWEEN 1 AND 5 AND users.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT CAST(SUM(CASE WHEN T2.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Id) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "717": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT hero_power.hero_id) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT superhero.full_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.id HAVING COUNT(hero_power.power_id) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "722": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE superhero.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT superhero.superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT colour.colour, COUNT(superhero.eye_colour_id) AS popularity FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour ORDER BY popularity DESC\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(superhero.height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' AND superhero.height_cm > 0 AND superhero.height_cm IS NOT NULL\t----- bird -----\tsuperhero",
    "730": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.publisher_name = 'Marvel Comics' AND T4.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'Speed' ORDER BY T3.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.id ORDER BY COUNT(hero_power.power_id) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT CAST(SUM(CASE WHEN T1.alignment = 'Neutral' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage, SUM(CASE WHEN T1.alignment = 'Neutral' AND T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS Marvel_Count FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "744": "SELECT ABS((SELECT COUNT(superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics') - (SELECT COUNT(superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics')) AS difference FROM superhero LIMIT 1\t----- bird -----\tsuperhero",
    "745": "SELECT T.id FROM publisher AS T WHERE T.publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(id) FROM superhero WHERE full_name IS NULL OR full_name = '-'\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(superhero.weight_kg) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "751": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T4.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT superhero.superhero_name FROM superhero WHERE superhero.height_cm BETWEEN 170 AND 190 AND superhero.eye_colour_id = (SELECT id FROM colour WHERE colour = 'No Colour')\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT T3.colour FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.race = 'Human' AND T1.height_cm = 185\t----- bird -----\tsuperhero",
    "759": "SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` ORDER BY `superhero`.`weight_kg` DESC LIMIT 1\t----- bird -----\tsuperhero",
    "760": "SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "761": "SELECT superhero.superhero_name FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'M' AND superhero.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T1.power_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT superhero.full_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' ORDER BY hero_attribute.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(height_cm) AS Average_Height, AVG(weight_kg) AS Average_Weight FROM superhero WHERE skin_colour_id IS NULL OR skin_colour_id IN (SELECT id FROM colour WHERE colour = 'No Colour') AND height_cm > 0 AND weight_kg > 0\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T4.attribute_name = 'Durability' ORDER BY T3.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T1.superhero_name, T2.colour AS eye_colour, T3.colour AS hair_colour, T4.colour AS skin_colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN colour AS T4 ON T1.skin_colour_id = T4.id INNER JOIN publisher AS T5 ON T1.publisher_id = T5.id WHERE T1.gender_id = 2 AND T5.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.hair_colour_id = T1.skin_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT alignment.alignment, race.race, publisher.publisher_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN race ON superhero.race_id = race.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT CAST(SUM(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender_id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female'\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T3.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN race AS T3 ON T2.id = T3.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(hero_power.power_id) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id WHERE superhero.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.superhero_name, superhero.height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT DISTINCT T2.colour AS eye_colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T3.colour = 'Gold'\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT superhero.superhero_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_id) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, alignment.alignment FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE superhero.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT CAST(COUNT(CASE WHEN T1.gender_id = T2.id AND T3.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T1.gender_id = T2.id THEN T1.id ELSE NULL END) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "790": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference\t----- bird -----\tsuperhero",
    "791": "SELECT superhero.superhero_name, AVG(superhero.height_cm) FROM superhero WHERE superhero.height_cm > 0 GROUP BY superhero.superhero_name\t----- bird -----\tsuperhero",
    "792": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(s.id) FROM superhero AS s INNER JOIN race AS r ON s.race_id = r.id INNER JOIN gender AS g ON s.gender_id = g.id WHERE r.race = 'God / Eternal' AND g.gender = 'Male'\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(superhero_name) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "796": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "798": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL\t----- bird -----\tsuperhero",
    "800": "SELECT CAST(SUM(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'Male' THEN T1.id ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.gender = 'Female' THEN T1.id ELSE NULL END) AS RATIO FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id\t----- bird -----\tsuperhero",
    "802": "SELECT superhero.superhero_name FROM superhero ORDER BY superhero.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis'\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294\t----- bird -----\tsuperhero",
    "805": "SELECT superhero.full_name FROM superhero WHERE superhero.weight_kg IS NULL OR superhero.weight_kg = 0\t----- bird -----\tsuperhero",
    "806": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 108 AND `superhero`.`height_cm` = 188\t----- bird -----\tsuperhero",
    "809": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "811": "SELECT alignment.alignment, superpower.power_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T2.attribute_value) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T3.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "814": "SELECT T2.colour AS Skin_Colour FROM hero_attribute AS T1 INNER JOIN colour AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE gender.gender = 'Female' AND alignment.alignment = 'Good'\t----- bird -----\tsuperhero",
    "816": "SELECT DISTINCT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT T3.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T2.colour = 'Blue' AND T4.gender = 'Male'\t----- bird -----\tsuperhero",
    "818": "SELECT CAST(SUM(CASE WHEN gender.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(superhero.id) AS percentage FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "819": "SELECT (SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' AND (superhero.weight_kg = 0 OR superhero.weight_kg IS NULL)) - (SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'No Colour' AND (superhero.weight_kg = 0 OR superhero.weight_kg IS NULL)) AS DIFFERENCE\t----- bird -----\tsuperhero",
    "820": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Hulk' AND T3.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'control wind' ORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT T3.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN superpower AS T4 ON T2.power_id = T4.id WHERE T4.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT superhero.superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics' ORDER BY superhero.weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.race != 'Human' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' AND T2.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' )\t----- bird -----\tsuperhero",
    "829": "SELECT (SELECT COUNT(superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics') - (SELECT COUNT(superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics') AS difference FROM superhero\t----- bird -----\tsuperhero",
    "830": "SELECT T3.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Black Panther' ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero.superhero_name FROM superhero ORDER BY superhero.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "833": "SELECT superhero.superhero_name FROM superhero WHERE superhero.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) AS percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT CAST(COUNT(CASE WHEN T4.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T4 ON T1.alignment_id = T4.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE SUBSTR(full_name, 1, INSTR(full_name, ' ') - 1) = 'John'\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.weight_kg < 100 AND colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral' AND T1.height_cm != 0 AND T1.height_cm IS NOT NULL\t----- bird -----\tsuperhero",
    "843": "SELECT hero_power.hero_id FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour AS eye_colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.height_cm > 0.8 * (SELECT AVG(height_cm) FROM superhero)\t----- bird -----\tsuperhero",
    "846": "SELECT drivers.driverRef FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 20 AND qualifying.position > 15 AND qualifying.q2 IS NULL\t----- bird -----\tformula_1",
    "847": "SELECT drivers.surname FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId INNER JOIN races ON qualifying.raceId = races.raceId WHERE races.round = 19 ORDER BY qualifying.q2 ASC LIMIT 1\t----- bird -----\tformula_1",
    "848": "SELECT races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T4.position, T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN constructorStandings AS T4 ON T2.raceId = T4.raceId INNER JOIN constructors AS T3 ON T4.constructorId = T3.constructorId WHERE T3.constructorRef = 'renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.country NOT IN ('Asia', 'Europe')\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT races.name, races.date, races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT `races`.`time` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 1 AND T1.raceId = 24\t----- bird -----\tformula_1",
    "859": "SELECT T2.q1 FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Bruno' AND T1.surname = 'Senna' AND T2.raceId = 354\t----- bird -----\tformula_1",
    "860": "SELECT `drivers`.`nationality` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`q2` = '0:01:40' AND `qualifying`.`raceId` = 355\t----- bird -----\tformula_1",
    "861": "SELECT drivers.number FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE qualifying.raceId = 903 AND qualifying.q3 = '1:30.754'\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT results.driverId) FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN status ON results.statusId = status.statusId WHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND status.status != 'Finished'\t----- bird -----\tformula_1",
    "863": "SELECT `seasons`.`url` FROM `races` INNER JOIN `seasons` ON `races`.`year` = `seasons`.`year` WHERE `races`.`raceId` = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN status ON results.statusId = status.statusId WHERE races.date = '2015-11-29' AND status.status = 'Finished'\t----- bird -----\tformula_1",
    "865": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN status ON results.statusId = status.statusId WHERE results.raceId = 592 AND status.status = 'Finished' ORDER BY drivers.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT T1.url FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time = '0:01:27' AND T2.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT drivers.nationality FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE results.raceId = 933 ORDER BY results.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "868": "SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT constructors.url FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructorResults.raceId = 9 ORDER BY constructorResults.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi')\t----- bird -----\tformula_1",
    "871": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '0:01:15' AND T1.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT T2.code FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 45 AND T1.q3 = '1:30.039'\t----- bird -----\tformula_1",
    "873": "SELECT results.time FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Bruce' AND drivers.surname = 'McLaren' AND results.raceId = 743\t----- bird -----\tformula_1",
    "874": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'San Marino Grand Prix' AND races.year = 2006 AND results.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*) FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN status ON results.statusId = status.statusId WHERE races.date = '2015-11-29' AND status.status != 'Finished'\t----- bird -----\tformula_1",
    "877": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN status ON results.statusId = status.statusId WHERE results.raceId = 872 AND status.status = 'Finished' ORDER BY drivers.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT CONCAT(drivers.forename, ' ', drivers.surname) AS Full_Name FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.raceId = 348 ORDER BY lapTimes.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "879": "SELECT drivers.nationality FROM results INNER JOIN drivers ON results.driverId = drivers.driverId ORDER BY results.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "880": "SELECT (CAST((SELECT fastestLapSpeed FROM lapTimes WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) AS REAL) - (SELECT fastestLapSpeed FROM lapTimes WHERE raceId = 854 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta'))) / (SELECT fastestLapSpeed FROM lapTimes WHERE raceId = 854 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) * 100 AS percentage_difference;\t----- bird -----\tformula_1",
    "881": "SELECT CAST(COUNT(CASE WHEN T4.status = 'Finished' THEN 1 ELSE NULL END) AS REAL) / COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId INNER JOIN status AS T4 ON T2.statusId = T4.statusId WHERE T1.date = '1983-07-16'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix'\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) AS 'Number of Races', name AS 'Race Name' FROM races WHERE year = 2005 ORDER BY name DESC;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE date = (SELECT MIN(date) FROM races)\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 AND round = (SELECT MAX(round) FROM races WHERE year = 1999)\t----- bird -----\tformula_1",
    "886": "SELECT races.year FROM races GROUP BY races.year ORDER BY COUNT(races.raceId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "887": "SELECT T1.name FROM races AS T1 WHERE T1.year = 2017 AND T1.name NOT IN (SELECT T2.name FROM races AS T2 WHERE T2.year = 2000)\t----- bird -----\tformula_1",
    "888": "SELECT circuits.country, circuits.name, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix' ORDER BY races.year LIMIT 1\t----- bird -----\tformula_1",
    "889": "SELECT MAX(seasons.year) FROM seasons INNER JOIN races ON seasons.year = races.year INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Brands Hatch' AND races.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT `seasons`.`year`) FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` INNER JOIN `seasons` ON `races`.`year` = `seasons`.`year` WHERE `circuits`.`name` = 'Silverstone Circuit' AND `races`.`name` = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT drivers.forename, drivers.surname, results.position FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Singapore Grand Prix' AND races.year = 2010 ORDER BY results.position\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename || ' ' || drivers.surname AS Full_Name, MAX(driverStandings.points) AS Points_Scored FROM driverStandings INNER JOIN drivers ON driverStandings.driverId = drivers.driverId GROUP BY driverStandings.driverId ORDER BY Points_Scored DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name, results.points AS points_scored FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Chinese Grand Prix' AND races.year = 2017 ORDER BY results.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT drivers.forename, drivers.surname, races.name, MIN(lapTimes.milliseconds) AS Best_Lap_Time FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId ORDER BY Best_Lap_Time ASC LIMIT 1\t----- bird -----\tformula_1",
    "895": "SELECT AVG(lapTimes.time) FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2009 AND races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT CAST(SUM(CASE WHEN results.position != 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(results.position) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year >= 2010\t----- bird -----\tformula_1",
    "897": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name, drivers.nationality, MAX(driverStandings.points) AS max_points FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId GROUP BY drivers.driverId ORDER BY COUNT(driverStandings.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT forename || ' ' || surname AS name, strftime('%Y', 'now') - strftime('%Y', dob) - (strftime('%m-%d', 'now') < strftime('%m-%d', dob)) AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT c.name FROM circuits AS c INNER JOIN races AS r ON c.circuitId = r.circuitId WHERE r.year BETWEEN 1990 AND 2000 GROUP BY r.circuitId HAVING COUNT(r.circuitId) = 4\t----- bird -----\tformula_1",
    "900": "SELECT c.circuitId, c.name AS circuit_name, c.location, r.name AS race_name FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE c.country = 'USA' AND r.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location AS circuit_location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.date BETWEEN '2005-09-01' AND '2005-09-30'\t----- bird -----\tformula_1",
    "902": "SELECT races.name FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' AND results.positionText = '1' AND circuits.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "904": "SELECT races.name AS race, races.year AS year FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' ORDER BY results.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "905": "SELECT AVG(results.points) FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND races.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT races.name AS first_race, results.points AS points_recorded FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY races.date LIMIT 1\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date\t----- bird -----\tformula_1",
    "908": "SELECT races.name AS race_name, races.year AS year, circuits.location AS circuit_location, MAX(results.laps) AS most_laps FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId GROUP BY races.name, races.year, circuits.location ORDER BY most_laps DESC LIMIT 1\t----- bird -----\tformula_1",
    "909": "SELECT CAST(SUM(CASE WHEN T2.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.name) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT name, MAX(lat) FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring')\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT `country` FROM `circuits` ORDER BY `alt` DESC LIMIT 1\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(driverId) FROM drivers WHERE code IS NULL OR code = ''\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian'\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "920": "SELECT races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT races.name, races.date, races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.name = 'Abu Dhabi Circuit'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT races.date FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT circuits.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MIN(lapTimes.time) AS Fastest_Lap_Time FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId ORDER BY results.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "928": "SELECT drivers.driverRef FROM driverStandings INNER JOIN races ON driverStandings.raceId = races.raceId INNER JOIN drivers ON driverStandings.driverId = drivers.driverId WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND driverStandings.position = 1\t----- bird -----\tformula_1",
    "929": "SELECT `races`.`name` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT races.name FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.position ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(results.fastestLapSpeed) AS Fastest_Lap_Speed FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT results.position FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2008 AND races.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 1989 AND races.name = 'Australian Grand Prix' AND results.grid = 4\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT results.driverId) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.position IS NOT NULL\t----- bird -----\tformula_1",
    "936": "SELECT MIN(T1.time) AS Fastest_Lap FROM lapTimes AS T1 WHERE T1.driverId = 1 AND T1.raceId = 200\t----- bird -----\tformula_1",
    "937": "SELECT `results`.`time` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `results`.`position` = 2 AND `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "938": "SELECT drivers.forename, drivers.surname, drivers.url FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.position = 1\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.nationality = 'Uruguayan' AND races.year = 2008 AND races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT results.driverId) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.positionText REGEXP '^[0-9]+$'\t----- bird -----\tformula_1",
    "941": "SELECT SUM(results.points) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "942": "SELECT AVG(CAST(results.fastestLapTime AS REAL)) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "943": "SELECT CAST(COUNT(CASE WHEN T1.laps = T2.max_laps THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN (SELECT MAX(laps) AS max_laps FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)) AS T2 ON T1.raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)\t----- bird -----\tformula_1",
    "944": "SELECT ((T1.milliseconds - T2.milliseconds) / T2.milliseconds) * 100 AS percentage_difference FROM (SELECT milliseconds FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND results.position = 1) AS T1, (SELECT milliseconds FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND results.position = (SELECT MAX(position) FROM results WHERE statusId IN (SELECT statusId FROM status WHERE status = 'Finished'))) AS T2\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(circuitId) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "946": "SELECT `lat`, `lng` FROM `circuits` WHERE `country` = 'USA'\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31'\t----- bird -----\tformula_1",
    "948": "SELECT MAX(constructorResults.points) FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT constructors.name FROM constructors INNER JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId ORDER BY constructorResults.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "950": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = 0 AND T2.raceId = 291\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(T1.constructorId) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Japanese' AND T2.points = 0 GROUP BY T1.constructorId HAVING COUNT(DISTINCT T2.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT constructors.name FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructorStandings.position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructors.constructorId) FROM constructors INNER JOIN qualifying ON constructors.constructorId = qualifying.constructorId INNER JOIN lapTimes ON qualifying.driverId = lapTimes.driverId WHERE constructors.nationality = 'French' AND lapTimes.lap > 50\t----- bird -----\tformula_1",
    "954": "SELECT CAST(SUM(CASE WHEN T3.position IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.raceId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'Japanese' AND T3.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "955": "SELECT races.year, AVG(strftime('%s', results.time)) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.position = 1 AND races.year < 1975 GROUP BY races.year\t----- bird -----\tformula_1",
    "956": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId WHERE drivers.dob > '1975-12-31' AND driverStandings.position = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN status ON results.statusId = status.statusId WHERE drivers.nationality = 'Italian' AND status.status != 'Finished'\t----- bird -----\tformula_1",
    "958": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId ORDER BY lapTimes.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "959": "SELECT results.fastestLap FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND results.position = 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(results.fastestLapSpeed) FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "961": "SELECT races.name, races.year FROM results INNER JOIN races ON results.raceId = races.raceId ORDER BY results.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "962": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.dob < '1985-01-01' AND T3.lap > 50 THEN T1.driverId END) AS REAL) * 100 / COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T2.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'French' AND lapTimes.time < '02:00.00'\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18\t----- bird -----\tformula_1",
    "967": "SELECT drivers.code, COUNT(drivers.nationality) AS Netherlandic_drivers FROM drivers WHERE drivers.nationality = 'Netherlands' ORDER BY drivers.dob DESC LIMIT 3\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND strftime('%Y', dob) = '1980'\t----- bird -----\tformula_1",
    "970": "SELECT drivers.forename, drivers.surname, MIN(lapTimes.time) AS earliest_lap_time FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY drivers.driverId ORDER BY earliest_lap_time ASC LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "972": "SELECT drivers.driverId, drivers.code FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE STRFTIME('%Y', drivers.dob) = '1971' GROUP BY lapTimes.raceId ORDER BY MIN(lapTimes.time)\t----- bird -----\tformula_1",
    "973": "SELECT drivers.forename, drivers.surname, drivers.dob, MAX(lapTimes.time) AS latest_lap_time FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'Spanish' AND drivers.dob < '1982-01-01' GROUP BY drivers.driverId ORDER BY latest_lap_time DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT races.year FROM results INNER JOIN races ON results.raceId = races.raceId ORDER BY results.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "975": "SELECT races.year FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId ORDER BY lapTimes.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT drivers.driverId FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE lapTimes.lap = 1 ORDER BY lapTimes.time ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(results.resultId) FROM results INNER JOIN status ON results.statusId = status.statusId INNER JOIN races ON results.raceId = races.raceId WHERE races.raceId BETWEEN 50 AND 100 AND status.status = 'Disqualified'\t----- bird -----\tformula_1",
    "978": "SELECT location, lat, lng, COUNT(*) as times_held FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "979": "SELECT `races`.`raceId` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `results`.`position` IS NOT NULL GROUP BY `races`.`raceId` ORDER BY COUNT(`results`.`position`) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT drivers.driverRef, drivers.nationality, drivers.dob FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE qualifying.q2 IS NOT NULL AND qualifying.raceId = 23\t----- bird -----\tformula_1",
    "981": "SELECT races.year, races.name, races.date, races.time FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId INNER JOIN races ON qualifying.raceId = races.raceId WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) ORDER BY races.date ASC LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(*) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'American' AND T3.status = 'Puncture'\t----- bird -----\tformula_1",
    "983": "SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId WHERE constructors.nationality = 'Italian' ORDER BY constructorResults.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "984": "SELECT constructors.url FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId GROUP BY constructors.url ORDER BY SUM(constructorStandings.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "985": "SELECT drivers.driverRef, drivers.forename, drivers.surname FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId WHERE races.name = 'French Grand Prix' AND lapTimes.lap = 3 ORDER BY lapTimes.time DESC LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT races.name, MIN(lapTimes.milliseconds) FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId WHERE lapTimes.lap = 1 GROUP BY races.raceId ORDER BY MIN(lapTimes.milliseconds) LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(results.fastestLapTime) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2006 AND races.name = 'United States Grand Prix' AND results.position BETWEEN 1 AND 10\t----- bird -----\tformula_1",
    "988": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name, AVG(pitStops.duration) AS average_pit_stop_duration FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverId ORDER BY average_pit_stop_duration ASC LIMIT 3\t----- bird -----\tformula_1",
    "989": "SELECT `drivers`.`forename`, `drivers`.`surname`, `results`.`time` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`name` = 'Canadian Grand Prix' AND `races`.`year` = 2008 AND `results`.`position` = 1\t----- bird -----\tformula_1",
    "990": "SELECT constructors.constructorRef, constructors.url FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE races.name = 'Singapore Grand Prix' AND races.year = 2009 AND results.position = 1;\t----- bird -----\tformula_1",
    "991": "SELECT drivers.forename, drivers.surname, drivers.dob FROM drivers WHERE drivers.nationality = 'Austrian' AND drivers.dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1",
    "992": "SELECT drivers.forename, drivers.surname, drivers.url, drivers.dob FROM drivers WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY drivers.dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT SUM(T1.points) AS score, T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY score DESC LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT AVG(results.points) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(YearlyRaces) AS AnnualAverageRaces FROM ( SELECT year, COUNT(raceId) AS YearlyRaces FROM races WHERE year BETWEEN 2000 AND 2009 GROUP BY year )\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT wins FROM driverStandings WHERE position = 91 ORDER BY points DESC LIMIT 1\t----- bird -----\tformula_1",
    "999": "SELECT races.name FROM results INNER JOIN races ON results.raceId = races.raceId ORDER BY results.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "1000": "SELECT circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId ORDER BY races.date DESC LIMIT 1\t----- bird -----\tformula_1",
    "1001": "SELECT CONCAT(drivers.forename, ' ', drivers.surname) AS full_name FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId INNER JOIN races ON qualifying.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE qualifying.position = 1 AND races.round = 3 AND circuits.name = 'Marina Bay Street Circuit' AND races.year = 2008;\t----- bird -----\tformula_1",
    "1002": "SELECT CONCAT(drivers.forename, ' ', drivers.surname) AS full_name, drivers.nationality, races.name AS first_race FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.dob = (SELECT MIN(dob) FROM drivers) ORDER BY races.date LIMIT 1\t----- bird -----\tformula_1",
    "1003": "SELECT drivers.forename, drivers.surname, COUNT(results.statusId) AS accidents FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId INNER JOIN status ON results.statusId = status.statusId WHERE races.name = 'Canadian Grand Prix' AND status.status = 'Accident' GROUP BY drivers.driverId ORDER BY accidents DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1004": "SELECT CONCAT(drivers.forename, ' ', drivers.surname) AS full_name, SUM(driverStandings.wins) AS total_wins FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId WHERE drivers.dob = (SELECT MIN(dob) FROM drivers) GROUP BY drivers.driverId\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(milliseconds) FROM pitStops\t----- bird -----\tformula_1",
    "1006": "SELECT time FROM lapTimes ORDER BY milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(pitStops.duration) FROM pitStops INNER JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1008": "SELECT pitStops.lap FROM pitStops INNER JOIN drivers ON pitStops.driverId = drivers.driverId INNER JOIN races ON pitStops.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Australian Grand Prix' AND races.year = 2011\t----- bird -----\tformula_1",
    "1009": "SELECT drivers.driverRef, pitStops.duration FROM pitStops INNER JOIN races ON pitStops.raceId = races.raceId INNER JOIN drivers ON pitStops.driverId = drivers.driverId WHERE races.name = 'Australian Grand Prix' AND races.year = 2011\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(lapTimes.time) AS lap_record FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1011": "SELECT CONCAT(drivers.forename, ' ', drivers.surname) AS FullName, MIN(lapTimes.time) AS ShortestLapTime FROM lapTimes JOIN results ON lapTimes.driverId = results.driverId AND lapTimes.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE results.position <= 20 ORDER BY lapTimes.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "1012": "SELECT circuits.name, results.position FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND results.fastestLap IS NOT NULL ORDER BY results.fastestLap ASC\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(results.fastestLapTime) AS 'Lap Record' FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN results ON races.raceId = results.raceId WHERE circuits.name = 'Austrian Grand Prix Circuit' AND results.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "1014": "SELECT T1.name, T3.lap, T3.time FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN lapTimes AS T3 ON T2.raceId = T3.raceId WHERE T1.country = 'Italy'\t----- bird -----\tformula_1",
    "1015": "SELECT races.name FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit' ORDER BY lapTimes.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "1016": "SELECT pitStops.duration FROM lapTimes INNER JOIN pitStops ON lapTimes.driverId = pitStops.driverId AND lapTimes.raceId = pitStops.raceId INNER JOIN races ON lapTimes.raceId = races.raceId WHERE races.name = 'Austrian Grand Prix' AND lapTimes.milliseconds = (SELECT MIN(lapTimes.milliseconds) FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId WHERE races.name = 'Austrian Grand Prix')\t----- bird -----\tformula_1",
    "1017": "SELECT c.lat, c.lng FROM circuits AS c INNER JOIN races AS r ON c.circuitId = r.circuitId INNER JOIN lapTimes AS l ON r.raceId = l.raceId WHERE l.time = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(pitStops.milliseconds) FROM pitStops INNER JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(lapTimes.milliseconds) FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT Player_Attributes.player_api_id FROM Player_Attributes ORDER BY Player_Attributes.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1021": "SELECT Player.player_name, Player.height FROM Player ORDER BY Player.height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1022": "SELECT T2.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id ORDER BY T1.potential LIMIT 1\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating BETWEEN 60 AND 65 AND T1.defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2016' GROUP BY L.name ORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T1.team_long_name, COUNT(*) AS Lost_Matches FROM Match AS T2 INNER JOIN Team AS T1 ON T1.team_api_id = T2.home_team_api_id WHERE T2.season = '2016' AND T2.home_team_goal < T2.away_team_goal GROUP BY T1.team_long_name ORDER BY Lost_Matches ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1027": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.penalties DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT `Team`.`team_long_name`, COUNT(`Match`.`id`) AS `wins` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` INNER JOIN `Team` ON `Match`.`away_team_api_id` = `Team`.`team_api_id` WHERE `League`.`name` = 'Scotland Premier League' AND `Match`.`season` = '2010/2011' AND `Match`.`away_team_goal` > `Match`.`home_team_goal` GROUP BY `Match`.`away_team_api_id` ORDER BY `wins` DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT T1.team_long_name, T2.buildUpPlaySpeed FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id ORDER BY T2.buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2016' AND Match.home_team_goal = Match.away_team_goal GROUP BY League.name ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT Player.player_name, STRFTIME('%Y', 'now') - STRFTIME('%Y', Player.birthday) AS age FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.sprint_speed >= 97 AND Player_Attributes.date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT L.name, COUNT(M.id) AS Matches_Played FROM Match M JOIN League L ON M.league_id = L.id GROUP BY L.name ORDER BY Matches_Played DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE strftime('%Y', birthday) BETWEEN '1990' AND '1995'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT Player_Attributes.player_api_id, MAX(Player_Attributes.overall_rating) FROM Player_Attributes WHERE Player_Attributes.date LIKE '2010%' AND Player_Attributes.overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE date LIKE '2010%') GROUP BY Player_Attributes.player_api_id ORDER BY MAX(Player_Attributes.overall_rating) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1035": "SELECT T.team_fifa_api_id FROM Team_Attributes AS T WHERE T.buildUpPlaySpeed > 50 AND T.buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012') AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(COUNT(CASE WHEN T1.preferred_foot = 'left' AND T2.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 23:59:59' THEN T2.id ELSE NULL END) AS REAL) * 100 / COUNT(T2.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "1038": "SELECT League.id, League.name, SUM(Match.home_team_goal + Match.away_team_goal) AS total_goals FROM Match INNER JOIN League ON Match.league_id = League.id GROUP BY League.id ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(Player_Attributes.long_shots) FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name, AVG(Player_Attributes.heading_accuracy) AS avg_heading_accuracy FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height > 180 GROUP BY Player.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND strftime('%Y', T2.date) = '2014' AND T2.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2014') ORDER BY T2.chanceCreationPassing DESC\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name FROM League JOIN Match ON League.id = Match.league_id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT Player.player_name FROM Player WHERE strftime('%Y', Player.birthday) = '1970' AND strftime('%m', Player.birthday) = '10'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT Player_Attributes.heading_accuracy FROM Player_Attributes INNER JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Francois Affolter' AND Player_Attributes.date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT Player_Attributes.overall_rating FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Gabriel Tamas' AND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.season = '2015/2016' AND L.name = 'Scotland Premier League'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1051": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = ( SELECT MAX(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(DISTINCT Player.player_api_id) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.weight < 130 AND Player_Attributes.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT Player_Attributes.defensive_work_rate FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT Player.birthday FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1056": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(M.home_team_goal) FROM Match M JOIN Country C ON M.country_id = C.id WHERE M.season = '2010/2011' AND C.name = 'Poland'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT CASE WHEN AVG(T1.finishing) > AVG(T2.finishing) THEN T3.player_name ELSE T4.player_name END AS player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T3 ON T1.player_api_id = T3.player_api_id INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id INNER JOIN Player AS T4 ON T2.player_api_id = T4.player_api_id WHERE T3.height = (SELECT MAX(height) FROM Player) AND T4.height = (SELECT MIN(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(player_api_id) FROM Player WHERE birthday > '1990-12-31 23:59:59'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170\t----- bird -----\teuropean_football_2",
    "1062": "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.overall_rating > 80 AND Player_Attributes.date BETWEEN '2008-01-01' AND '2010-12-31'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 170 AND T1.date BETWEEN '2010-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player ORDER BY height ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1070": "SELECT `Country`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `League`.`name` = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Germany 1. Bundesliga' AND Match.date BETWEEN '2008-08-01' AND '2008-10-31'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T.team_short_name FROM Team AS T INNER JOIN Match AS M ON T.team_api_id = M.home_team_api_id WHERE M.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = 61 ORDER BY Player_Attributes.balance DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo')) - (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Appindangoye')) AS difference\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' ORDER BY birthday LIMIT 1\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(Player_Attributes.player_api_id) FROM Player_Attributes WHERE Player_Attributes.preferred_foot = 'left' AND Player_Attributes.attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT `Country`.`name` FROM `Country` INNER JOIN `League` ON `Country`.`id` = `League`.`country_id` WHERE `League`.`name` = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT `League`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT Player.player_api_id) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.birthday < '1986-01-01' AND Player_Attributes.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT Player.player_name, MAX(Player_Attributes.crossing) AS Max_Crossing FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') GROUP BY Player.player_name ORDER BY Max_Crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT `Player_Attributes`.`heading_accuracy` FROM `Player_Attributes` INNER JOIN `Player` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.dribbling > 70 AND Player_Attributes.volleys > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match JOIN Country ON Match.country_id = Country.id WHERE Match.season = '2008/2009' AND Country.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT Player_Attributes.long_passing FROM Player_Attributes INNER JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Belgium Jupiler League' AND strftime('%Y', Match.date) = '2009' AND strftime('%m', Match.date) = '04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT `League`.`name` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2008/2009' GROUP BY `League`.`name` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(Player_Attributes.overall_rating) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.birthday < '1986-01-01'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (CAST((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk') ORDER BY date DESC LIMIT 1) AS REAL) - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel') ORDER BY date DESC LIMIT 1)) / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel') ORDER BY date DESC LIMIT 1) * 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(TA.buildUpPlaySpeed) FROM Team_Attributes AS TA INNER JOIN Team AS T ON TA.team_api_id = T.team_api_id WHERE T.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T1.chanceCreationPassing), T1.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Ajax' GROUP BY T1.chanceCreationPassingClass ORDER BY MAX(T1.chanceCreationPassing) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1099": "SELECT `Player_Attributes`.`preferred_foot` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(`Player_Attributes`.`overall_rating`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(M.away_team_goal) FROM Match M JOIN Team T ON M.away_team_api_id = T.team_api_id JOIN Country C ON M.country_id = C.id WHERE T.team_long_name = 'Parma' AND C.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1102": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date = '2016-06-23 00:00:00' ORDER BY Player.birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T2.overall_rating FROM Player_Attributes AS T2 INNER JOIN Player AS T1 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Parravicini' AND T2.date LIKE '2010-08-30%'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore' AND T2.date = '2015-05-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Berigaud' AND T1.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MIN(T1.date) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' AND T1.crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = T2.player_api_id)\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T1.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Willem II' AND T1.date = '2011-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T2.buildUpPlayDribblingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'LEI' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T1.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'PEC Zwolle' AND T1.date = '2013-09-20'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT `Team_Attributes`.`chanceCreationCrossingClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'Hull City' AND `Team_Attributes`.`date` LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Marko Arnautovic' AND T1.date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (CAST((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') AS REAL) - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12')) / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12') * 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = ( SELECT MAX(height) FROM Player )\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE birthday <= DATE('now', '-35 years')\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(M.home_team_goal) FROM Match M INNER JOIN Player P ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11) WHERE P.player_name = 'Aaron Lennon'\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(T1.away_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T2.player_api_id IN (T1.away_player_1, T1.away_player_2, T1.away_player_3, T1.away_player_4, T1.away_player_5, T1.away_player_6, T1.away_player_7, T1.away_player_8, T1.away_player_9, T1.away_player_10, T1.away_player_11) WHERE T2.player_name IN ('Daan Smith', 'Filipe Ferreira')\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(M.home_team_goal) FROM Match M JOIN Player P ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11) WHERE (julianday(M.date) - julianday(P.birthday)) / 365 <= 30\t----- bird -----\teuropean_football_2",
    "1122": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.strength DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1123": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.potential DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1124": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing = 1 ORDER BY Player.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT Unfortunately, based on the provided schema, it is not possible to determine the players who came from Belgium as there is no direct relationship between the `Player` and `Country` tables.\t----- bird -----\teuropean_football_2",
    "1127": "SELECT P.player_name, C.name AS country_name FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id JOIN Match AS M ON P.player_api_id = M.home_player_1 OR P.player_api_id = M.home_player_2 OR P.player_api_id = M.home_player_3 OR P.player_api_id = M.home_player_4 OR P.player_api_id = M.home_player_5 OR P.player_api_id = M.home_player_6 OR P.player_api_id = M.home_player_7 OR P.player_api_id = M.home_player_8 OR P.player_api_id = M.home_player_9 OR P.player_api_id = M.home_player_10 OR P.player_api_id = M.home_player_11 OR P.player_api_id = M.away_player_1 OR P.player_api_id = M.away_player_2 OR P.player_api_id = M.away_player_3 OR P.player_api_id = M\t----- bird -----\teuropean_football_2",
    "1128": "SELECT C.name, AVG(P.weight) AS avg_weight FROM Country AS C JOIN League AS L ON C.id = L.country_id JOIN Match AS M ON L.id = M.league_id JOIN Team AS T ON M.home_team_api_id = T.team_api_id OR M.away_team_api_id = T.team_api_id JOIN Player AS P ON M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id OR M.away_player_\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(Player.height) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Match ON Player_Attributes.player_api_id = Match.home_player_1 JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT Player.player_name FROM Player WHERE Player.height > 180 ORDER BY Player.player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE birthday > '1990-12-31 23:59:59' AND player_name LIKE 'Aaron%'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT ABS((SELECT jumping FROM Player_Attributes WHERE player_api_id = 6) - (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23)) AS Difference FROM Player_Attributes LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT Player.id FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.preferred_foot = 'right' ORDER BY Player_Attributes.potential ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND P.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1137": "SELECT CAST(COUNT(DISTINCT CASE WHEN strength > 80 AND stamina > 80 THEN player_api_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT player_api_id) AS percentage FROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "1138": "SELECT `Country`.`name` FROM `Country` INNER JOIN `League` ON `Country`.`id` = `League`.`country_id` WHERE `League`.`name` = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT M.home_team_goal, M.away_team_goal FROM Match M JOIN League L ON M.league_id = L.id WHERE M.date = '2008-09-24' AND L.name = 'Belgian Jupiler League'\t----- bird -----\teuropean_football_2",
    "1140": "SELECT `Player_Attributes`.`sprint_speed`, `Player_Attributes`.`agility`, `Player_Attributes`.`acceleration` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T1.team_long_name, T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Italy Serie A' AND `Match`.`season` = '2015/2016'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Netherlands Eredivisie'\t----- bird -----\teuropean_football_2",
    "1144": "SELECT Player_Attributes.finishing, Player_Attributes.curve FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player.weight DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name, COUNT(Match.id) AS num_games FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY Match.league_id ORDER BY num_games DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1146": "SELECT Team.team_long_name FROM Match INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id ORDER BY Match.away_team_goal DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1147": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1148": "SELECT CAST(COUNT(CASE WHEN T1.height < 180 AND T2.strength > 70 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "1149": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'M' AND T1.Admission = '+' THEN 1 ELSE 0 END) AS REAL) AS MaleInpatients, CAST(SUM(CASE WHEN T1.SEX = 'M' AND T1.Admission = '-' THEN 1 ELSE 0 END) AS REAL) AS MaleOutpatients, ABS(SUM(CASE WHEN T1.SEX = 'M' AND T1.Admission = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.SEX = 'M' AND T1.Admission = '-' THEN 1 ELSE 0 END)) * 100 / GREATEST(SUM(CASE WHEN T1.SEX = 'M' AND T1.Admission = '+' THEN 1 ELSE 0 END), SUM(CASE WHEN T1.SEX = 'M' AND T1.Admission = '-' THEN 1 ELSE 0 END)) AS DeviationPercentage FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) AS percentage FROM Patient WHERE Birthday > '1930-12-31'\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) AS percentage FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31'\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS ratio FROM Patient WHERE Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Examination.Diagnosis, Laboratory.Date FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', Patient.Birthday) AS age FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT P.ID, P.SEX, P.Diagnosis FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT DISTINCT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday LIKE '1937%' AND Laboratory.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT CAST(SUM(CASE WHEN T2.TP NOT BETWEEN 6.0 AND 8.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(Examination.`aCL IgG`) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Admission = '+' AND (julianday(Examination.`Examination Date`) - julianday(Patient.Birthday)) / 365 >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F' AND YEAR(Patient.`First Date`) = 1997 AND Patient.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(strftime('%Y', `First Date`) - strftime('%Y', Birthday)) AS age FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT CASE WHEN T2.SEX = 'F' THEN T2.ID END) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND strftime('%Y', T1.`Examination Date`) = '1997'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', Patient.Birthday)) - MIN(STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', Patient.Birthday)) AS age_gap FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.TG < 200\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT T2.Symptoms, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT CAST(COUNT(DISTINCT Laboratory.ID) AS REAL) / 12 FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'M' AND strftime('%Y', Laboratory.Date) = '1998'\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(Laboratory.Date) AS LabWorkDate, julianday(Patient.`First Date`) - julianday(Patient.Birthday) AS AgeAtArrival FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis LIKE '%SJS%' ORDER BY Patient.Birthday LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'M' AND T2.UA > 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.SEX = 'F' AND T2.UA > 6.5 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) FROM Patient WHERE NOT EXISTS (SELECT 1 FROM Examination WHERE Examination.ID = Patient.ID AND `Examination Date` <= DATE(Patient.`First Date`, '+1 year'))\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE (julianday(T2.`Examination Date`) - julianday(T1.Birthday)) / 365 < 18 AND T2.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.`T-BIL` >= 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Patient.Diagnosis ORDER BY COUNT(Patient.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - STRFTIME('%Y', Patient.Birthday)) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.Date LIKE '1991-10%'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT strftime('%Y', T1.Date) - strftime('%Y', T2.Birthday) AS age, T3.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T1.HGB = (SELECT MAX(HGB) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN T1.`T-CHO` < 250 THEN 'Yes' ELSE 'No' END AS 'Normal Level' FROM Laboratory AS T1 WHERE T1.ID = 2927464 AND T1.Date = '1995-09-04'\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT T1.SEX FROM Patient AS T1 WHERE T1.Diagnosis = 'AORTITIS' ORDER BY T1.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T2.`aCL IgG`, T2.`aCL IgM`, T2.`aCL IgA` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.Description = '1994-02-19' AND T2.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT CASE WHEN T1.SEX = 'F' THEN 'Female' ELSE 'Male' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT strftime('%Y', T2.Date) - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA = 8.4 AND T2.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(*) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE `First Date` = '1991-06-13' AND Diagnosis = 'SJS') AND STRFTIME('%Y', Date) = '1995'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT P1.Diagnosis FROM Patient AS P1 INNER JOIN Examination AS E1 ON P1.ID = E1.ID WHERE E1.Diagnosis = 'SLE' AND E1.`Examination Date` = '1997-01-27' ORDER BY P1.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Examination.Symptoms FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Birthday = '1959-03-01' AND Examination.`Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (CAST((SELECT T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-11%') - (SELECT T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-12%') AS REAL) / (SELECT T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-11%')) * 100 AS DecreaseRate FROM Patient WHERE Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT Patient.ID FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Diagnosis = 'Behcet\\'s' AND Examination.`Examination Date` BETWEEN '1970-01-01' AND '1997-12-31'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND `Laboratory`.`GPT` > 30 AND `Laboratory`.`ALB` < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) = '1964' AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination WHERE Examination.Thrombosis = 2 AND Examination.`ANA Pattern` = 'S' AND Examination.`aCL IgM` > 1.2 * (SELECT AVG(`aCL IgM`) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT CAST(SUM(CASE WHEN (T2.UA <= 8.0 AND T1.SEX = 'M') OR (T2.UA <= 6.5 AND T1.SEX = 'F') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT CAST(SUM(CASE WHEN Diagnosis LIKE '%BEHCET%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) AS percentage FROM Patient WHERE SEX = 'M' AND strftime('%Y', `First Date`) = '1981'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.`First Date`, Patient.Admission, Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND strftime('%Y-%m', Laboratory.Date) = '1991-10' AND Laboratory.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`ANA Pattern` != 'P' AND Patient.SEX = 'F' AND Patient.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(Laboratory.ALB) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Patient.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Examination.Symptoms, COUNT(*) AS Frequency FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Diagnosis LIKE '%SLE%' GROUP BY Examination.Symptoms ORDER BY Frequency DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT `First Date`, Diagnosis FROM Patient WHERE ID = 48473 AND SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT P.ID) FROM Patient P INNER JOIN Examination E ON P.ID = E.ID WHERE P.SEX = 'F' AND E.Diagnosis LIKE '%APS%'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory WHERE (Laboratory.TP <= 6.0 OR Laboratory.TP >= 8.5) AND (strftime('%Y', Laboratory.Date) = '1997')\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN T1.Diagnosis LIKE '%SLE%' OR T2.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.ID) AS proportion FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Symptoms LIKE '%thrombocytopenia%'\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 WHERE strftime('%Y', T1.Birthday) = '1980' AND T1.Diagnosis LIKE '%RA%'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND Patient.Diagnosis LIKE '%BEHCET%' AND Patient.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT julianday(MIN(T2.`Examination Date`)) - julianday(T1.`First Date`) AS days FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN Patient.SEX = 'Male' AND Laboratory.UA <= 8.0 THEN 'Yes' WHEN Patient.SEX = 'Female' AND Laboratory.UA <= 6.5 THEN 'Yes' ELSE 'No' END AS 'Is Uric Acid Normal' FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT `Date` FROM Laboratory WHERE ID = '48473' AND GOT > 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND strftime('%Y', T2.Date) = '1994'\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT > 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT >= 60 ORDER BY Patient.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT Patient.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', Patient.Birthday) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.ID, Patient.Admission FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID, CASE WHEN Laboratory.ALP < 300 THEN 'Yes' ELSE 'No' END AS ALP_Normal_Range FROM Patient LEFT JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday = '1982-04-01'\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT Patient.ID, Laboratory.Date, CASE WHEN Laboratory.TP < 6.0 THEN 6.0 - Laboratory.TP WHEN Laboratory.TP > 8.5 THEN Laboratory.TP - 8.5 END AS TP_Deviation FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND (Laboratory.TP < 6.0 OR Laboratory.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT Patient.ID, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND (Laboratory.ALB < 3.5 OR Laboratory.ALB > 5.5) ORDER BY Patient.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.ID, CASE WHEN Laboratory.ALB BETWEEN 3.5 AND 5.5 THEN 'Normal' ELSE 'Abnormal' END AS Albumin_Level FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Patient.Birthday) = '1982'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND T2.UA > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(Laboratory.UA) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE (Patient.SEX = 'M' AND Laboratory.UA <= 8.0) OR (Patient.SEX = 'F' AND Laboratory.UA <= 6.5) GROUP BY Patient.ID HAVING Laboratory.Date = MAX(Laboratory.Date)\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN < 30 AND T2.UN >= 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE P.Diagnosis LIKE '%RA%' AND L.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN COUNT(DISTINCT CASE WHEN T1.SEX = 'M' THEN T1.ID END) > COUNT(DISTINCT CASE WHEN T1.SEX = 'F' THEN T1.ID END) THEN 'True' ELSE 'False' END AS Result FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T1.`T-BIL` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT P.SEX, COUNT(DISTINCT P.ID) AS Patient_Count FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.`T-BIL` >= 2.0 GROUP BY P.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ORDER BY T1.Birthday ASC, T2.`T-CHO` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG((julianday('now') - julianday(Patient.Birthday)) / 365) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.`T-CHO` > 200\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT P.ID, P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (julianday('now') - julianday(Patient.Birthday)) / 365 > 50 AND Laboratory.TG >= 200\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND Patient.SEX = 'M' AND Laboratory.CPK > 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT Patient.ID, Patient.SEX, (julianday('now') - julianday(Patient.Birthday))/365 AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Laboratory.GLU FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU < 180 AND strftime('%Y', Patient.`First Date`) = '1991'\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.WBC < 3.5 OR Laboratory.WBC > 9.0 GROUP BY Patient.SEX, Patient.ID ORDER BY Patient.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.ID, Patient.Diagnosis, strftime('%Y', Laboratory.Date) - strftime('%Y', Patient.Birthday) AS Age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (DATE('now') - T1.Birthday) / 365 >= 50 AND (T2.RBC < 3.5 OR T2.RBC > 6.0)\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT P.ID, P.SEX FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '-' AND L.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%SLE%' AND T2.HGB BETWEEN 10 AND 17 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT Patient.ID, strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.HCT > 52 GROUP BY Laboratory.ID HAVING COUNT(*) >= 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS LowerThanNormal, SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS HigherThanNormal FROM Laboratory WHERE PLT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE strftime('%Y', Laboratory.Date) = '1984' AND (strftime('%Y', Laboratory.Date) - strftime('%Y', Patient.Birthday)) < 50 AND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND T2.PT >= 14 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (julianday('now') - julianday(T1.Birthday)) / 365 > 55\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` > '1992-12-31' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.`Examination Date` > '1997-01-01' AND Laboratory.APTT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.APTT >= 45 AND Examination.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday > '1980-01-01' AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`U-PRO` > 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`U-PRO` BETWEEN 0 AND 30 AND Patient.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG > 2000\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGG > 900 AND T1.IGG < 2000 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.IGA = ( SELECT MAX(IGA) FROM Laboratory WHERE IGA BETWEEN 80 AND 500 ) LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500 AND Patient.`First Date` > '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Patient.Diagnosis, COUNT(Patient.Diagnosis) AS Count FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGM < 40 OR Laboratory.IGM > 400 GROUP BY Patient.Diagnosis ORDER BY Count DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient LEFT JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.CRP >= 1.0 OR Laboratory.CRP NOT IN ('-', '+-', NULL)) AND Patient.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.CRE >= 1.5 AND (strftime('%Y', Laboratory.Date) - strftime('%Y', Patient.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.RF < 20 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1985-01-01' AND T2.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE CAST(Laboratory.RF AS REAL) < 20 AND (julianday('now') - julianday(Patient.Birthday)) / 365 > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.RF < 20 AND Examination.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.C3 > 35 AND T3.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE (T1.HCT <= 29 OR T1.HCT >= 52) ORDER BY T2.`aCL IgG` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis > 0 AND Laboratory.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP = '0' AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RNP IN ('+-', '1') ORDER BY Patient.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SM = '0' AND T2.Thrombosis = '0'\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM IS NOT NULL AND T2.SM != '-' ORDER BY T1.Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` > '1997-01-01' AND T2.SC170 = 'negative'\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.SC170 = 'negative' AND T1.SEX = 'F' AND (T3.Symptoms IS NULL OR T3.Symptoms = '')\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SSA = 'negative' AND Patient.`First Date` < '2000-01-01'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('-', '+-') ORDER BY T1.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SSB IN ('-', '+-') AND T2.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.SSB = '-' AND Examination.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT CASE WHEN T1.SEX = 'M' THEN T1.ID END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.CENTROMEA = '-' OR T2.CENTROMEA IS NULL) AND (T2.SSB = '-' OR T2.SSB IS NULL)\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT T2.Diagnosis, T3.Diagnosis FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Patient AS T3 ON T1.ID = T3.ID WHERE T1.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.DNA < 8 AND T2.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG > 900 AND T2.IGG < 2000 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT CAST(SUM(CASE WHEN T1.GOT >= 60 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT < 60 ORDER BY L.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT `First Date` FROM Patient WHERE ID = ( SELECT ID FROM Laboratory WHERE LDH = ( SELECT MAX(LDH) FROM Laboratory WHERE LDH < 500 ) )\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Date) FROM Laboratory WHERE LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis LIKE '%SJS%' AND Laboratory.TP BETWEEN 6.0 AND 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT `Examination`.`Examination Date` FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALB` BETWEEN 3.5 AND 5.5 ORDER BY `Laboratory`.`ALB` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT T1.`aCL IgG`, T1.`aCL IgM`, T1.`aCL IgA` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T2.SEX = 'F' AND T3.UA = ( SELECT MAX(UA) FROM Laboratory WHERE UA BETWEEN 3.5 AND 7.2 )\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(T1.ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CRE < 1.5 ORDER BY T3.`aCL IgG` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` > 2.0 AND T2.`ANA Pattern` = 'p'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT E.ANA FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE L.`T-BIL` = ( SELECT MAX(`T-BIL`) FROM Laboratory WHERE `T-BIL` < 2.0 ) LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.`T-CHO` > 250 AND (Examination.KCT = '-' OR Examination.RVVT = '-' OR Examination.LAC = '-')\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.`T-CHO` < 250 AND Examination.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.TG < 200 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG = ( SELECT MAX(TG) FROM Laboratory WHERE TG < 200 )\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Thrombosis = 0 AND T3.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.CPK < 250 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.GLU < 180 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC > 3.5 AND T2.WBC < 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis LIKE '%SLE%' AND Laboratory.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0) AND Patient.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Examination.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT Patient.ID, Laboratory.PLT FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.PLT BETWEEN 100 AND 400 AND Patient.Diagnosis LIKE '%MCTD%'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(Laboratory.PT) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis = 2 AND Laboratory.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design Department'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT M.phone FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women\\'s Soccer' AND T3.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_name ORDER BY COUNT(T2.link_to_member) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Sacha' AND T3.last_name = 'Harrison' AND SUBSTR(T1.event_date, 1, 4) = '2019'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM ( SELECT event_id FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event WHERE event.type = 'Meeting' GROUP BY event_id HAVING COUNT(link_to_member) > 10 )\t----- bird -----\tstudent_club",
    "1323": "SELECT event.event_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event WHERE event.type != 'Fundraiser' GROUP BY attendance.link_to_event HAVING COUNT(attendance.link_to_member) > 20\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(T1.attendance_count) FROM (SELECT COUNT(A.link_to_member) AS attendance_count FROM event E INNER JOIN attendance A ON E.event_id = A.link_to_event WHERE E.event_name LIKE '%Meeting%' AND E.event_date LIKE '2020%' GROUP BY A.link_to_event) AS T1\t----- bird -----\tstudent_club",
    "1325": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id ORDER BY T1.cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) AS full_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(expense.cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Food' AND event.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) AS full_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT T1.spent FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name IN ('Pierce', 'Guidi')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(T2.amount) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'October Speaker'\t----- bird -----\tstudent_club",
    "1338": "SELECT expense.expense_id, expense.expense_description, expense.approved FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'October Meeting' AND expense.expense_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(T3.cost) FROM member AS T1 INNER JOIN expense AS T3 ON T1.member_id = T3.link_to_member INNER JOIN budget AS T2 ON T3.link_to_budget = T2.budget_id INNER JOIN event AS T4 ON T2.link_to_event = T4.event_id WHERE T1.first_name = 'Elijah' AND T1.last_name = 'Allen' AND STRFTIME('%m', T4.event_date) IN ('09', '10')\t----- bird -----\tstudent_club",
    "1340": "SELECT (SUM(CASE WHEN STRFTIME('%Y', T1.expense_date) = '2019' THEN T1.cost ELSE 0 END)) - (SUM(CASE WHEN STRFTIME('%Y', T1.expense_date) = '2020' THEN T1.cost ELSE 0 END)) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Student_Club'\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = ( SELECT MAX(amount) FROM budget WHERE category = 'Food' )\t----- bird -----\tstudent_club",
    "1344": "SELECT `notes` FROM `event` WHERE `type` = 'Registration' AND `event_date` LIKE '2019-09-14%'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "1347": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O\\'Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT T3.status FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1353": "SELECT `zip_code`.`type` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Christof' AND `member`.`last_name` = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT income.date_received FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.source = 'Dues' ORDER BY T1.date_received ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM budget AS b1 INNER JOIN event AS e1 ON b1.link_to_event = e1.event_id INNER JOIN budget AS b2 ON b1.category = b2.category INNER JOIN event AS e2 ON b2.link_to_event = e2.event_id WHERE b1.category = 'Advertisement' AND e1.event_name = 'Yearly Kickoff' AND e2.event_name = 'October Meeting' AND b1.amount > b2.amount\t----- bird -----\tstudent_club",
    "1360": "SELECT CAST(SUM(CASE WHEN T2.category = 'Parking' THEN T2.amount ELSE 0 END) AS REAL) * 100 / SUM(T2.amount) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(T1.cost) FROM expense AS T1 WHERE T1.expense_description LIKE '%Pizza%'\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T2.expense_description, T2.cost, T2.expense_date FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T1.remaining = ( SELECT MIN(remaining) FROM budget )\t----- bird -----\tstudent_club",
    "1366": "SELECT T3.first_name, T3.last_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major GROUP BY T1.college ORDER BY COUNT(T2.member_id) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.amount = ( SELECT MAX(amount) FROM budget )\t----- bird -----\tstudent_club",
    "1370": "SELECT expense.expense_id, expense.expense_description, expense.expense_date, expense.cost FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Casey' AND T1.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(DISTINCT member_id) FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240'\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT event.event_name, (budget.spent / budget.amount) AS spend_to_budget_ratio FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'Closed' ORDER BY spend_to_budget_ratio DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(position) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND event_date LIKE '2020%'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) AS student_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT M.first_name, M.last_name FROM member AS M INNER JOIN major AS MJ ON M.link_to_major = MJ.major_id INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE MJ.major_name = 'Interior Design' AND E.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT member.first_name, member.last_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Georgetown' AND zip_code.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(income_id) FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Grant' AND member.last_name = 'Gilmour'\t----- bird -----\tstudent_club",
    "1385": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Member' AND T2.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(expense.cost) FROM expense INNER JOIN event ON expense.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1387": "SELECT T3.first_name, T3.last_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T2.source FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1389": "SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` ORDER BY `expense`.`cost` ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1390": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T3.cost ELSE 0 END) AS REAL) * 100 / SUM(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget\t----- bird -----\tstudent_club",
    "1391": "SELECT CAST((SELECT COUNT(member_id) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Finance')) AS REAL) / (SELECT COUNT(member_id) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Physics')) FROM member\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE STRFTIME('%Y-%m', date_received) = '2019-09' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT CONCAT(first_name, ' ', last_name) AS full_name, email FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT a.link_to_member) FROM attendance a JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Community Theater' AND STRFTIME('%Y', e.event_date) = '2019'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(attendance.link_to_event) AS number_of_events_attended, major.major_name AS major FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Luisa' AND member.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(T2.spent) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Food' AND T1.status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Advertisement' ORDER BY budget.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1399": "SELECT CASE WHEN EXISTS ( SELECT 1 FROM \"attendance\" WHERE link_to_member = ( SELECT member_id FROM \"member\" WHERE first_name = 'Maya' AND last_name = 'Mclean' ) AND link_to_event = ( SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer' ) ) THEN 'Yes' ELSE 'No' END AS \"Did Maya Mclean attend the 'Women's Soccer' event?\"\t----- bird -----\tstudent_club",
    "1400": "SELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event_id) AS \"percentage\" FROM event WHERE event_date LIKE '2019%'\t----- bird -----\tstudent_club",
    "1401": "SELECT E.cost FROM expense AS E INNER JOIN budget AS B ON E.link_to_budget = B.budget_id INNER JOIN event AS EV ON B.link_to_event = EV.event_id WHERE E.expense_description LIKE '%Posters%' AND EV.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'Closed' ORDER BY budget.remaining ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT expense.expense_description, SUM(expense.cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'October Meeting' AND expense.approved = 'true' GROUP BY expense.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT budget.category, SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'April Speaker' GROUP BY budget.category ORDER BY SUM(budget.amount) ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, amount FROM budget WHERE category = 'Advertising' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(T1.spent) FROM budget AS T1 WHERE T1.category = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1410": "SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE member.member_id = 'rec4BLdZHS2Blfp4v'\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT \"expense\".\"expense_description\" FROM \"expense\" INNER JOIN \"member\" ON \"expense\".\"link_to_member\" = \"member\".\"member_id\" WHERE \"member\".\"t_shirt_size\" = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT member.zip FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT event.type FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT `type` FROM event WHERE `event_date` = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT CAST(COUNT(CASE WHEN major_name = 'Business' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(member_id) FROM member INNER JOIN major ON member.link_to_major = major.major_id\t----- bird -----\tstudent_club",
    "1422": "SELECT event.type FROM event WHERE event.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(member_id) FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT Z.city, Z.state FROM member AS M INNER JOIN major AS MJ ON M.link_to_major = MJ.major_id INNER JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE MJ.department = 'Electrical and Computer Engineering Department'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T1.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT M.last_name, M.position FROM member AS M INNER JOIN expense AS E ON M.member_id = E.link_to_member WHERE E.expense_description = 'Pizza' AND E.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T2.last_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 AND T2.source = 'Dues' THEN T2.amount ELSE 0 END) AS REAL) * 100 / SUM(T2.amount) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.link_to_event FROM attendance AS T1 INNER JOIN income AS T2 ON T1.link_to_member = T2.link_to_member WHERE T2.amount > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T1.member_id, T1.first_name, T1.last_name, T3.link_to_event FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member WHERE T2.approved = 'true' AND T2.expense_date BETWEEN '2019-10-01' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name LIKE '%business%' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT member.email FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.cost > 20 AND expense.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name LIKE '%Education%' AND T2.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT CAST(SUM(CASE WHEN spent > amount THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event_id) FROM budget\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT CONCAT(T.first_name, ' ', T.last_name) AS full_name FROM member AS T WHERE T.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT CAST(COUNT(CASE WHEN type = 'PO Box' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(zip_code) FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent < T2.amount\t----- bird -----\tstudent_club",
    "1448": "SELECT event.event_name, event.event_date FROM expense INNER JOIN event ON expense.link_to_event = event.event_id WHERE expense.expense_description LIKE '%pizza%' AND expense.cost > 50 AND expense.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT member.first_name, member.last_name, major.major_name FROM member INNER JOIN expense ON member.member_id = expense.link_to_member INNER JOIN major ON member.link_to_major = major.major_id WHERE expense.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT zip_code.city, zip_code.county FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id INNER JOIN zip_code ON member.zip = zip_code.zip_code INNER JOIN income ON member.member_id = income.link_to_member GROUP BY event.event_id HAVING COUNT(income.link_to_member) > 40\t----- bird -----\tstudent_club",
    "1451": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) AS full_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(DISTINCT T2.link_to_event) > 1 ORDER BY SUM(T2.cost) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'Parking' AND expense.cost < (SELECT AVG(expense.cost) FROM expense WHERE expense.expense_description = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT CAST(SUM(CASE WHEN T1.event_name LIKE '%Meeting%' THEN T2.cost ELSE 0 END) AS REAL) * 100 / SUM(T2.cost) FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_budget\t----- bird -----\tstudent_club",
    "1455": "SELECT budget.budget_id, budget.amount FROM budget INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description LIKE '%water%' AND expense.expense_description LIKE '%chips%' AND expense.expense_description LIKE '%cookies%' ORDER BY budget.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1456": "SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_spent FROM member INNER JOIN expense ON member.member_id = expense.link_to_member GROUP BY expense.link_to_member ORDER BY total_spent DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T1.phone AS contact_number FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > ( SELECT AVG(cost) FROM expense )\t----- bird -----\tstudent_club",
    "1458": "SELECT ABS( (CAST(SUM(CASE WHEN state = 'New Jersey' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(member_id)) - (CAST(SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(member_id)) ) AS percentage_difference FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE state IN ('New Jersey', 'Vermont')\t----- bird -----\tstudent_club",
    "1459": "SELECT major.major_name, major.department FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT M.first_name || ' ' || M.last_name AS full_name, E.cost FROM member AS M INNER JOIN expense AS E ON M.member_id = E.link_to_member WHERE E.expense_description IN ('water', 'veggie tray', 'supplies')\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT member.first_name, member.last_name, income.amount FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT M.first_name || ' ' || M.last_name AS full_name, MA.college FROM member AS M INNER JOIN major AS MA ON M.link_to_major = MA.major_id WHERE M.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT event.event_name, SUM(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Speaker Gifts' GROUP BY event.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1469": "SELECT `member`.`first_name`, `member`.`last_name`, `member`.`position` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Lincolnton' AND `zip_code`.`state` = 'North Carolina' AND `zip_code`.`zip_code` = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT CAST(SUM(IIF(Currency = 'EUR', 1, 0)) AS REAL) / SUM(IIF(Currency = 'CZK', 1, 0)) AS ratio FROM customers\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T1.`Date`) = '2012' AND T2.Segment = 'LAM' ORDER BY T1.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date LIKE '2013%'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK' AND yearmonth.Date LIKE '2011%' ORDER BY yearmonth.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Consumption < 30000 AND T2.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT ABS((SELECT SUM(yearmonth.Consumption) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' AND yearmonth.Date BETWEEN '201201' AND '201212') - (SELECT SUM(yearmonth.Consumption) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' AND yearmonth.Date BETWEEN '201201' AND '201212')) AS difference_in_consumption\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT STRFTIME('%Y', T1.Date) AS Year, SUM(T1.Consumption) AS TotalGasUse FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY Year ORDER BY TotalGasUse DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT customers.Segment, SUM(yearmonth.Consumption) AS TotalConsumption FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID GROUP BY customers.Segment ORDER BY TotalConsumption LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(yearmonth.Date, 1, 4) AS Year, SUM(yearmonth.Consumption) AS Total_Consumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' GROUP BY Year ORDER BY Total_Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT T.Date FROM ( SELECT yearmonth.Date, SUM(yearmonth.Consumption) AS TotalConsumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND yearmonth.Date LIKE '2013%' GROUP BY yearmonth.Date ) AS T ORDER BY T.TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT T1.Segment, AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date LIKE '2013%' GROUP BY T1.Segment HAVING MIN(T2.Consumption) ORDER BY AVG(T2.Consumption)\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT T1.Segment, ((SUM(CASE WHEN strftime('%Y', T2.Date) = '2013' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T2.Date) = '2012' THEN T2.Consumption ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', T2.Date) = '2012' THEN T2.Consumption ELSE 0 END)) * 100 AS PercentageIncrease FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T1.Segment IN ('SME', 'LAM', 'KAM') AND (strftime('%Y', T2.Date) = '2012' OR strftime('%Y', T2.Date) = '2013') GROUP BY T1.Segment ORDER BY PercentageIncrease DESC, T1.Segment ASC\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT ( SELECT COUNT(GasStationID) FROM gasstations WHERE Segment = 'Discount' AND Country = 'CZE' ) - ( SELECT COUNT(GasStationID) FROM gasstations WHERE Segment = 'Discount' AND Country = 'SVK' ) AS DIFFERENCE\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = '201304') - (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = '201304')\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS Difference\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND T2.Date = '201310' ORDER BY T2.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, MAX(T2.Consumption) AS MaxConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' GROUP BY T1.CustomerID ORDER BY MaxConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(yearmonth.Consumption) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'KAM' AND yearmonth.Date = '201305'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT CAST(COUNT(CASE WHEN T2.Consumption > 46.73 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) AS NumberOfValueForMoneyStations FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country ORDER BY NumberOfValueForMoneyStations DESC\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT CAST(SUM(IIF(Segment = 'KAM' AND Currency = 'EUR', 1, 0)) AS REAL) * 100 / COUNT(CustomerID) FROM customers WHERE Segment = 'KAM'\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT CAST(COUNT(CASE WHEN Consumption > 528.3 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CustomerID) FROM yearmonth WHERE Date = '201202'\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT CAST(SUM(IIF(Segment = 'Premium', 1, 0)) AS REAL) * 100 / COUNT(GasStationID) FROM gasstations WHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date LIKE '2013-09%' GROUP BY CustomerID ORDER BY SUM(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT customers.Segment FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201309' GROUP BY customers.Segment ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date = '201206' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(T2.Consumption) AS 'Biggest Monthly Consumption' FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID WHERE transactions_1k.Date LIKE '2013-09%'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date LIKE '2013-06%'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT T2.ChainID FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T1.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date BETWEEN '2012-01-01' AND '2012-01-31'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Price > 1000\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(transactions_1k.TransactionID) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(T1.Amount * T1.Price) AS average_total_price FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(T1.Amount * T1.Price) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT T1.CustomerID FROM \"transactions_1k\" AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25' GROUP BY T1.CustomerID ORDER BY SUM(T1.Amount * T1.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' ORDER BY T2.Time ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT Segment FROM customers WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00')\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(transactions_1k.TransactionID) FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' AND transactions_1k.Date = '2012-08-26' AND transactions_1k.Time BETWEEN '06:00:00' AND '12:00:00'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers ORDER BY CustomerID ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM \"transactions_1k\" WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT T2.Date, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Price = 124.05 AND T1.Date = '2012-08-24' AND STRFTIME('%Y%m', T2.Date) = '201201'\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.Time >= '08:00:00' AND transactions_1k.Time < '09:00:00' AND transactions_1k.Date = '2012-08-26' AND gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT customers.Currency FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date BETWEEN '2013-06-01' AND '2013-06-30' GROUP BY transactions_1k.CustomerID HAVING SUM(transactions_1k.Price) = 214582.17\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = 667467\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT gasstations.Country FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.Price = 548.4 AND transactions_1k.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.Currency = 'EUR' THEN T1.CustomerID ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (CAST(SUM(CASE WHEN yearmonth.Date LIKE '2012%' THEN yearmonth.Consumption ELSE 0 END) AS REAL) - CAST(SUM(CASE WHEN yearmonth.Date LIKE '2013%' THEN yearmonth.Consumption ELSE 0 END) AS REAL)) * 100 / CAST(SUM(CASE WHEN yearmonth.Date LIKE '2012%' THEN yearmonth.Consumption ELSE 0 END) AS REAL) FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE transactions_1k.Price = 634.8 AND transactions_1k.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT T2.GasStationID FROM \"transactions_1k\" AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID GROUP BY T2.GasStationID ORDER BY SUM(T1.Amount * T1.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT CAST(SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM gasstations WHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(T1.Amount) FROM transactions_1k AS T1 WHERE T1.CustomerID = 38508 SELECT T2.Consumption FROM yearmonth AS T2 WHERE T2.CustomerID = 38508 AND T2.Date = '201201'\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY products.ProductID ORDER BY SUM(transactions_1k.Amount) DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, AVG(T2.Price), T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID, T1.Currency ORDER BY SUM(T2.Amount * T2.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ProductID = 2 ORDER BY T1.Price DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T2.CustomerID, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Price > 29.00 AND T1.ProductID = 5 AND T2.Date = '201208'\t----- bird -----\tdebit_card_specializing"
}