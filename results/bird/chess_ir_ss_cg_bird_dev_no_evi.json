{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm WHERE `County Name` = 'Alameda'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT T1.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.EdOpsName = 'Continuation School' ORDER BY T1.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT Zip FROM schools WHERE Charter = 1 AND District = 'Fresno County Office of Education'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT T1.MailStreet FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE FundingType = 'Directly funded' AND Charter = 1 AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(T1.cds) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr > 500 AND T1.Magnet = 1\t----- bird -----\tcalifornia_schools",
    "7": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr > 0 ORDER BY T2.NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "8": "SELECT SUM(s.NumTstTakr) FROM satscores AS s INNER JOIN frpm AS f ON s.cds = f.CDSCode WHERE f.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath > 560 AND T1.FundingType = 'Directly funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT `FRPM Count (Ages 5-17)` FROM `frpm` WHERE `CDSCode` = (SELECT `cds` FROM `satscores` ORDER BY `AvgScrRead` DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM frpm WHERE \"Enrollment (K-12)\" > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 / T1.NumTstTakr > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY (T2.NumGE1500 * 1.0 / T2.NumTstTakr) DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT T2.NCESSchool FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.\"Enrollment (Ages 5-17)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T2.dname FROM satscores AS T2 INNER JOIN schools AS T1 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Active' ORDER BY T2.AvgScrRead DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Alameda' AND T1.StatusType = 'Merged' AND T2.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT T2.CharterNum, T1.AvgScrWrite FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite > 499 ORDER BY T1.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno' AND T1.FundingType = 'Directly funded' AND T2.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT Phone FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY AvgScrMath DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(`School Name`) FROM `frpm` WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Free Meal Count (K-12)` > 500 AND T2.`FRPM Count (K-12)` < 700 AND T1.County = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "22": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE LOWER(T1.cname) = LOWER('Contra Costa') ORDER BY T1.NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "23": "SELECT T2.School, T2.MailStreet FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE ABS(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT T2.School FROM schools AS T2 INNER JOIN frpm AS T1 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T3.cds = T2.CDSCode WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T3.NumGE1500 IS NOT NULL AND T3.NumGE1500 > 0\t----- bird -----\tcalifornia_schools",
    "25": "SELECT T1.School, T1.FundingType FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath > 400 AND T1.School LIKE '%Riverside%'\t----- bird -----\tcalifornia_schools",
    "26": "SELECT T1.School, T1.MailStreet FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Monterey' AND T1.SOCType LIKE '%High Schools%' AND T2.`FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "27": "SELECT T2.School, AVG(T1.AvgScrWrite), T2.CDSCode FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode LEFT JOIN frpm AS T3 ON T2.CDSCode = T3.CDSCode WHERE T2.OpenDate > '1991-12-31' OR T2.ClosedDate < '2000-01-01' GROUP BY T2.School\t----- bird -----\tcalifornia_schools",
    "28": "SELECT T2.`School Name`, T1.`DOCType` FROM `schools` AS T1 INNER JOIN `frpm` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE (T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)`) > (SELECT AVG(T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)`) FROM `frpm` AS T2 WHERE T2.`Charter Funding Type` = 'Locally funded')\t----- bird -----\tcalifornia_schools",
    "29": "SELECT T1.\"OpenDate\" FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE (T2.\"School Type\" LIKE '%K-12 Schools%' OR T2.\"School Type\" LIKE '%High Schools%' OR T2.\"School Type\" LIKE '%Elementary Schools%') AND T2.\"Enrollment (K-12)\" = (SELECT MAX(\"Enrollment (K-12)\") FROM frpm WHERE \"School Type\" LIKE '%K-12 Schools%' OR \"School Type\" LIKE '%High Schools%' OR \"School Type\" LIKE '%Elementary Schools%')\t----- bird -----\tcalifornia_schools",
    "30": "SELECT T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.enroll12 ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `School Name`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS `Eligible Free Rate` FROM `frpm` ORDER BY `Enrollment (K-12)` DESC LIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "32": "SELECT (T1.\"FRPM Count (K-12)\" / T1.\"Enrollment (K-12)\") AS eligible_rate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SOC = '66' ORDER BY T1.\"FRPM Count (K-12)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T2.Website, T2.School FROM schools AS T2 INNER JOIN frpm AS T1 ON T1.CDSCode = T2.CDSCode WHERE T1.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT T1.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Kacey' AND T2.AdmLName1 = 'Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T2.AdmEmail1 FROM schools AS T2 INNER JOIN frpm AS T1 ON T1.CDSCode = T2.CDSCode WHERE T2.Charter = 1 ORDER BY T1.\"Enrollment (K-12)\" ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT T1.AdmFName1, T1.AdmLName1 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT S.Street, S.City, S.Zip, S.State FROM schools AS S INNER JOIN satscores AS SS ON S.CDSCode = SS.cds ORDER BY (SS.NumGE1500 * 1.0 / SS.NumTstTakr) ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T2.Website FROM schools AS T2 INNER JOIN satscores AS T1 ON T1.cds = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T1.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.City = 'Fresno' AND T2.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores WHERE dname = 'Fresno Unified') AND T2.dname = 'Fresno Unified'\t----- bird -----\tcalifornia_schools",
    "41": "WITH RankedSchools AS (SELECT T1.School, T1.County, T2.AvgScrRead, ROW_NUMBER() OVER (PARTITION BY T1.County ORDER BY T2.AvgScrRead DESC) AS Rank FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Virtual IN ('F', 'V', 'C', 'P') AND T2.AvgScrRead IS NOT NULL) SELECT School FROM RankedSchools WHERE Rank <= 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T1.EdOpsName FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "43": "SELECT T1.AvgScrMath, T2.County FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cds = (SELECT cds FROM satscores WHERE AvgScrMath IS NOT NULL ORDER BY AvgScrMath ASC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "44": "SELECT T1.AvgScrWrite, T2.MailCity FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T1.School, AVG(T2.AvgScrWrite) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Ricci' AND T1.AdmLName1 = 'Ulrich' GROUP BY T1.School\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`School Type` = 'State Special Schools' ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "47": "SELECT AVG(monthly_count) FROM (SELECT COUNT(*) AS monthly_count FROM schools WHERE County = 'Alameda' AND DOCType = 'Elementary School District' AND strftime('%Y', OpenDate) = '1980' GROUP BY strftime('%Y-%m', OpenDate))\t----- bird -----\tcalifornia_schools",
    "48": "SELECT (SUM(CASE WHEN DOCType = 'Unified School District' THEN 1 ELSE 0 END) * 1.0) / (SUM(CASE WHEN DOCType = 'Elementary School District' THEN 1 ELSE 0 END)) AS ratio FROM schools WHERE County = 'Orange' AND StatusType = 'Merged'\t----- bird -----\tcalifornia_schools",
    "49": "SELECT School, ClosedDate FROM schools WHERE County = (SELECT County FROM schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "50": "SELECT MailStreet, School FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY AvgScrMath DESC LIMIT 1 OFFSET 6)\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T2.MailStreet, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores WHERE AvgScrRead IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 IS NOT NULL AND T2.NumGE1500 > 0 AND T1.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(T2.NumTstTakr) FROM satscores AS T2 INNER JOIN schools AS T1 ON T2.cds = T1.CDSCode WHERE T1.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT (COUNT(CASE WHEN County = 'Colusa' THEN 1 END) * 1.0) / COUNT(CASE WHEN County = 'Humboldt' THEN 1 END) FROM schools WHERE MailState = 'CA'\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(CDSCode) FROM schools WHERE MailState = 'CA' AND MailCity = 'San Joaquin' AND StatusType = 'Active'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT T2.Phone, T2.Ext FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite = (SELECT AvgScrWrite FROM (SELECT DISTINCT AvgScrWrite FROM satscores ORDER BY AvgScrWrite DESC LIMIT 333) AS subquery ORDER BY AvgScrWrite LIMIT 1 OFFSET 332)\t----- bird -----\tcalifornia_schools",
    "58": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez')\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 1 AND T1.City = 'Hickman' AND T2.\"District Type\" = 'Elementary School District'\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 0 AND T1.County = 'Los Angeles' AND T2.`Percent (%) Eligible Free (K-12)` < 0.0018\t----- bird -----\tcalifornia_schools",
    "63": "SELECT School, City, AdmFName1, AdmLName1, AdmFName2, AdmLName2, AdmFName3, AdmLName3 FROM schools WHERE Charter = 1 AND CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(CDSCode) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(CASE WHEN FundingType = 'Locally funded' THEN 1 END) * 100.0) / COUNT(CDSCode) AS percentage FROM schools WHERE County = 'Santa Clara'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(CDSCode) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND FundingType = 'Directly funded' AND County = 'Stanislaus'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(CDSCode) FROM schools WHERE DOCType = 'Community College District' AND STRFTIME('%Y', ClosedDate) = '1989' AND City = 'San Francisco'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(*) FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOC = '11' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = '31';\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(CDSCode) FROM schools WHERE County = 'Alpine' AND SOCType = 'District Community Day Schools' AND StatusType IN ('Active', 'Closed')\t----- bird -----\tcalifornia_schools",
    "71": "SELECT T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.City = 'Fresno' AND T2.Magnet = 0\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM `frpm` WHERE `School Type` = 'State Special Schools' AND `School Name` = 'Fremont High' AND `Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT T1.\"FRPM Count (Ages 5-17)\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.EdOpsName = 'Youth Authority School' AND T2.MailStreet = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT MIN(`Low Grade`) FROM `frpm` WHERE `CDSCode` = '0613360' AND `Educational Option Type` = 'District Special Education Consortia School'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T2.EILName, T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"NSLP Provision Status\" = 'Breakfast Provision 2' AND T1.\"County Code\" = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T2.City FROM schools AS T2 INNER JOIN frpm AS T1 ON T1.CDSCode = T2.CDSCode WHERE T2.SOCType LIKE '%High Schools%' AND T1.\"NSLP Provision Status\" = 'Lunch Provision 2' AND T1.\"Low Grade\" = '9' AND T1.\"High Grade\" = '12' AND T2.County = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT T1.CDSCode, T1.GSserved, T2.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.GSserved IN ('K-9', 'K-12') AND T1.County = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved, COUNT(*) FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) FROM schools WHERE Virtual = 'F' AND County IN ('San Diego', 'Santa Barbara') GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T1.School, T1.Latitude, T2.`School Type` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Latitude = (SELECT MAX(Latitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT T1.City, T2.\"School Name\", T2.Low Grade FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.State = 'CA' AND T1.Latitude = (SELECT MIN(Latitude) FROM schools WHERE State = 'CA')\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools WHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Magnet = 1 AND T1.GSserved = 'K-8' AND T2.\"NSLP Provision Status\" = 'Multiple Provision Types'\t----- bird -----\tcalifornia_schools",
    "84": "SELECT first_name, District  FROM (     SELECT AdmFName1 AS first_name, District FROM schools      UNION ALL      SELECT AdmFName2, District FROM schools      UNION ALL      SELECT AdmFName3, District FROM schools ) AS combined_names  GROUP BY first_name, District  ORDER BY COUNT(*) DESC  LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT T2.`Percent (%) Eligible Free (K-12)`, T2.`District Code` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.AdmLName1, T1.District, T1.County, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"Charter School Number\" = '40'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT DISTINCT AdmEmail1, AdmEmail2, AdmEmail3 FROM schools WHERE County = 'San Bernardino' AND City = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND CDSCode IN (SELECT CDSCode FROM frpm WHERE \"School Type\" IN ('Intermediate/Middle Schools (Public)', 'Unified Schools'))\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T1.AdmEmail1, T2.sname FROM satscores AS T2 INNER JOIN schools AS T1 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores WHERE NumGE1500 IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "89": "WITH MaxTrans AS (SELECT account_id, MAX(trans_id) AS max_trans_id FROM trans GROUP BY account_id) SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN MaxTrans AS MT ON T1.account_id = MT.account_id INNER JOIN disp AS T4 ON T1.account_id = T4.account_id INNER JOIN card AS T5 ON T4.disp_id = T5.disp_id WHERE T5.issued > MT.max_trans_id AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.district_id IN (SELECT district_id FROM district WHERE A3 = 'Prague')\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_1995, AVG(A13) AS avg_1996 FROM district WHERE A12 IS NOT NULL AND A13 IS NOT NULL\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(*) FROM district WHERE A11 > 6000 AND A11 < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT T1.account_id, (SELECT MAX(A11) FROM district) - (SELECT MIN(A11) FROM district) AS salary_gap FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T2.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\t----- bird -----\tfinancial",
    "95": "SELECT T3.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T1.birth_date = (SELECT MAX(birth_date) FROM client) AND T2.district_id IN (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district))\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT client_id FROM disp WHERE type = 'DISPONENT' AND account_id IN (SELECT account_id FROM trans)\t----- bird -----\tfinancial",
    "98": "SELECT T1.account_id FROM loan AS T1 WHERE T1.date LIKE '1997%' AND T1.amount = (SELECT MIN(amount) FROM loan WHERE date LIKE '1997%')\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 12 AND STRFTIME('%Y', T1.date) = '1993' AND T2.amount = (SELECT MAX(T2.amount) FROM loan AS T2 INNER JOIN account AS T1 ON T1.account_id = T2.account_id WHERE T2.duration > 12 AND STRFTIME('%Y', T1.date) = '1993')\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*) FROM client AS C INNER JOIN account AS A ON C.client_id = A.account_id INNER JOIN district AS D ON A.district_id = D.district_id WHERE C.gender = 'F' AND C.birth_date < '1950-01-01' AND D.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM trans WHERE date = (SELECT MIN(date) FROM trans WHERE date LIKE '1995%')\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.amount > 3000\t----- bird -----\tfinancial",
    "103": "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT T1.date FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 840 AND T2.date = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T3.amount) FROM trans AS T3 WHERE T3.account_id = (SELECT D.account_id FROM card AS C INNER JOIN disp AS D ON C.disp_id = D.disp_id WHERE C.issued = '1996-10-21')\t----- bird -----\tfinancial",
    "107": "SELECT T1.gender FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id = (SELECT district_id FROM district ORDER BY A11 DESC LIMIT 1) ORDER BY T1.birth_date ASC LIMIT 1\t----- bird -----\tfinancial",
    "108": "SELECT amount FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE amount = (SELECT MAX(amount) FROM loan)) AND date > (SELECT date FROM account WHERE account_id = (SELECT account_id FROM loan WHERE amount = (SELECT MAX(amount) FROM loan))) ORDER BY date ASC LIMIT 1\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.gender = 'F' AND T3.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "110": "SELECT T1.disp_id FROM disp AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 5100 AND T2.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice'\t----- bird -----\tfinancial",
    "112": "SELECT T1.district_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.birth_date = '1976-01-29' AND T3.gender = 'F'\t----- bird -----\tfinancial",
    "113": "SELECT C.birth_date FROM client AS C INNER JOIN account AS A ON C.client_id = A.account_id INNER JOIN loan AS L ON A.account_id = L.account_id WHERE L.amount = 98832 AND L.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague' ORDER BY T3.disp_id ASC LIMIT 1\t----- bird -----\tfinancial",
    "115": "SELECT (COUNT(CASE WHEN T1.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS male_percentage FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A3 = 'south Bohemia' AND T3.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "116": "SELECT (balance_end - balance_start) / balance_start * 100 AS increase_rate  FROM (     SELECT          (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05') AND date = '1998-12-27') AS balance_end,         (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05') AND date = '1993-03-22') AS balance_start ) AS balances\t----- bird -----\tfinancial",
    "117": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT (COUNT(CASE WHEN status = 'C' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM loan WHERE amount < 100000\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN card AS T4 ON T3.disp_id = T4.disp_id INNER JOIN trans AS T5 ON T1.account_id = T5.account_id WHERE STRFTIME('%Y', T1.date) = '1993' AND T4.issued > T5.trans_id\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date BETWEEN '1995-01-01' AND '2000-12-31' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "121": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.loan_id = '4990'\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T3.A2 AS district, T3.A3 AS region FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT T1.loan_id, T3.A2 AS district, T3.A11 AS average_salary FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT T3.A3, (T3.A13 - T3.A12) AS unemployment_increment FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "126": "SELECT (COUNT(CASE WHEN T2.A2 = 'Decin' THEN 1 END) * 100.0 / COUNT(*)) AS percentage  FROM account AS T1  INNER JOIN district AS T2 ON T1.district_id = T2.district_id  WHERE STRFTIME('%Y', T1.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT T1.district_id, COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' GROUP BY T1.district_id ORDER BY COUNT(T1.client_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "129": "SELECT district.A2, SUM(trans.amount) AS total_withdrawals FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.operation != 'VYBER KARTOU' AND trans.date BETWEEN '1996-01-01' AND '1996-01-31' GROUP BY district.A2 ORDER BY total_withdrawals DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(*) FROM account AS T1 LEFT JOIN disp AS T2 ON T1.account_id = T2.account_id LEFT JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.district_id = (SELECT district_id FROM district WHERE A3 = 'south Bohemia') AND T3.card_id IS NULL\t----- bird -----\tfinancial",
    "131": "SELECT T3.district_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id GROUP BY T3.district_id ORDER BY COUNT(T1.loan_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT T1.A2, T1.A13 FROM district AS T1 WHERE T1.A13 = (SELECT MAX(A13) FROM district)\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A16 = (SELECT MAX(A16) FROM district)\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT T2.account_id) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND T1.balance < 0 AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.amount >= 250000 AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'A' AND T2.district_id = 1\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(T1.client_id) FROM client AS T1 WHERE district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1)\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT T2.A2 FROM trans AS T1 INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T2 ON T3.district_id = T2.district_id WHERE T1.amount > 10000 AND STRFTIME('%Y', T1.date) = '1997'\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN \"order\" AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT T2.account_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) FROM trans WHERE STRFTIME('%Y', date) = '2021' AND account_id IN (SELECT disp.account_id FROM disp INNER JOIN card ON disp.disp_id = card.disp_id)\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT T1.account_id FROM disp AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.operation = 'VYBER KARTOU' AND STRFTIME('%Y', T2.date) = '1998' AND T2.amount < (SELECT AVG(amount) FROM trans WHERE STRFTIME('%Y', date) = '1998')\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN loan AS T4 ON T1.client_id = T4.account_id WHERE T1.gender = 'F'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' AND T1.district_id IN (SELECT district_id FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "148": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT T1.type FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.account_id NOT IN (SELECT account_id FROM loan) AND T3.A11 > 8000 AND T3.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'north Bohemia' AND T3.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.operation = 'VYBER'\t----- bird -----\tfinancial",
    "152": "SELECT AVG(T1.A15) FROM district AS T1 WHERE T1.A15 > 4000 AND T1.district_id IN (SELECT T2.district_id FROM account AS T2 WHERE STRFTIME('%Y', T2.date) >= '1997')\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card WHERE type = 'classic';\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT (SUM(CASE WHEN issued < '1998-01-01' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM card WHERE type = 'gold'\t----- bird -----\tfinancial",
    "156": "SELECT client_id FROM disp WHERE account_id = (SELECT account_id FROM loan ORDER BY amount DESC LIMIT 1)\t----- bird -----\tfinancial",
    "157": "SELECT T2.A15 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.account_id = 532\t----- bird -----\tfinancial",
    "158": "SELECT T1.district_id FROM account AS T1 INNER JOIN `order` AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333\t----- bird -----\tfinancial",
    "159": "SELECT * FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'VYDAJ' AND T1.operation = 'VYBER' AND T2.client_id = 3356\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT T3.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT T2.A3 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT T2.district_id, COUNT(T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'A' GROUP BY T2.district_id ORDER BY COUNT(T1.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT account_id FROM \"order\" WHERE order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT T1.trans_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT T1.client_id FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T2.type = 'junior' AND T2.issued > '1996-12-31'\t----- bird -----\tfinancial",
    "168": "SELECT (COUNT(CASE WHEN T3.gender = 'F' THEN 1 END) * 100.0 / COUNT(T3.client_id)) AS percentage FROM account AS T1 INNER JOIN client AS T3 ON T1.district_id = T3.district_id WHERE T1.district_id IN (SELECT T2.district_id FROM district AS T2 WHERE T2.A11 > 10000)\t----- bird -----\tfinancial",
    "169": "SELECT (SUM(CASE WHEN strftime('%Y', L.date) = '1997' THEN L.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount ELSE 0 END)) * 100.0 / SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount ELSE 0 END) AS growth_rate FROM loan AS L INNER JOIN disp AS D ON L.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id WHERE C.gender = 'M' AND strftime('%Y', L.date) IN ('1996', '1997')\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(trans_id) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31'\t----- bird -----\tfinancial",
    "171": "SELECT ABS((SELECT A16 FROM district WHERE A3 = 'east Bohemia') - (SELECT A16 FROM district WHERE A3 = 'north Bohemia'))\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(disp_id) FROM disp WHERE account_id BETWEEN 1 AND 10 AND type IN ('OWNER', 'DISPONENT')\t----- bird -----\tfinancial",
    "173": "SELECT      (SELECT COUNT(*) FROM `order` WHERE `account_id` = 3) AS frequency_of_requests,     (SELECT `amount` FROM `order` WHERE `account_id` = 3 AND `amount` = 3539) AS aim_of_debiting\t----- bird -----\tfinancial",
    "174": "SELECT STRFTIME('%Y', T1.birth_date) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.account_id = 130\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT account_id) FROM disp WHERE type = 'OWNER'\t----- bird -----\tfinancial",
    "176": "SELECT T1.amount, T1.status FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 992\t----- bird -----\tfinancial",
    "177": "SELECT T1.balance, T3.gender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.trans_id = 851 AND T2.client_id = 4\t----- bird -----\tfinancial",
    "178": "SELECT T2.type FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T1.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 617) AND date BETWEEN '1998-01-01' AND '1998-12-31'\t----- bird -----\tfinancial",
    "180": "SELECT T1.client_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND T3.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.client_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN \"order\" AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T3.k_symbol = 'SIPO' AND T3.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date > '1996-12-31' AND T2.A2 = 'Beroun'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CR ON D.disp_id = CR.disp_id WHERE C.gender = 'F' AND CR.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT COUNT(CASE WHEN gender = 'F' THEN 1 END) * 1.0 / COUNT(*) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN district AS DT ON A.district_id = DT.district_id WHERE DT.A3 = 'Prague'\t----- bird -----\tfinancial",
    "186": "SELECT (COUNT(T2.client_id) * 100.0 / COUNT(T1.client_id)) AS percentage FROM client AS T1 LEFT JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'M'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'OWNER' AND T2.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND T2.date < '1997-01-01' AND T1.amount = (SELECT MIN(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND T2.date < '1997-01-01')\t----- bird -----\tfinancial",
    "189": "SELECT T1.account_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T2.gender = 'F' AND T2.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND T2.district_id = (SELECT district_id FROM district ORDER BY A11 ASC LIMIT 1)\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.birth_date) = '1920' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(DISTINCT T1.account_id) FROM loan AS T1 INNER JOIN \"order\" AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 24 AND T2.k_symbol = 'UVER'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T2.A2 FROM client AS T1 INNER JOIN disp AS T3 ON T1.client_id = T3.client_id INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T3.type = 'OWNER'\t----- bird -----\tfinancial",
    "194": "SELECT T1.client_id, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.birth_date)) AS age FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN loan AS T4 ON T2.account_id = T4.account_id WHERE T3.type = 'gold'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(o_count) FROM (SELECT COUNT(*) AS o_count FROM atom WHERE element = 'o' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-') GROUP BY molecule_id)\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(single_bond_count) FROM (SELECT COUNT(bond_id) AS single_bond_count FROM bond WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') AND bond_type = '-' GROUP BY molecule_id) AS counts\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'na' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "201": "SELECT (COUNT(CASE WHEN T1.atom_id LIKE 'C%' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '='\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(bond_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element NOT LIKE '%br%'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM (SELECT * FROM molecule ORDER BY molecule_id LIMIT 100) AS T WHERE T.label = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'c'\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = 'double'\t----- bird -----\ttoxicology",
    "208": "SELECT T2.label, COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id OR T1.atom_id2 = T3.atom_id WHERE T3.element = 'cl'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT T1.element, COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20') OR (T1.atom_id = 'TR004_20' AND T1.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT T1.label FROM molecule AS T1 WHERE T1.molecule_id NOT IN (SELECT T2.molecule_id FROM atom AS T2 WHERE T2.element = 'sn')\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element IN ('i', 's') AND T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT T2.atom_id FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN atom AS T2 ON T3.atom_id2 = T2.atom_id WHERE T1.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT (SUM(CASE WHEN T1.label = '+' AND T1.molecule_id NOT IN (SELECT T2.molecule_id FROM atom AS T2 WHERE T2.element = 'f') THEN 1 ELSE 0 END) * 100.0 / COUNT(CASE WHEN T1.label = '+' THEN 1 END)) AS percentage FROM molecule AS T1\t----- bird -----\ttoxicology",
    "219": "SELECT (COUNT(CASE WHEN T2.label = '+' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR001' AND T1.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT (COUNT(CASE WHEN label = '+' THEN 1 END) - COUNT(CASE WHEN label = '-' THEN 1 END)) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '=' ORDER BY molecule_id ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT ROUND((COUNT(CASE WHEN bond_type = '=' THEN 1 END) * 100.0 / COUNT(*)), 5) AS percentage FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND((COUNT(CASE WHEN label = '+' THEN 1 END) * 100.0 / COUNT(*)), 3) AS percentage FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND((SELECT COUNT(*) FROM atom WHERE element = 'h' AND molecule_id = 'TR206') * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR206'), 4) AS hydrogen_percentage\t----- bird -----\ttoxicology",
    "229": "SELECT bond_type FROM bond WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T1.bond_type, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '-' ORDER BY T1.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id ASC LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(bond_id) FROM bond WHERE molecule_id = 'TR009' AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(bond_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = '19' OR atom_id2 = '19';\t----- bird -----\ttoxicology",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id IN ('TR000_21', 'TR000_22', 'TR000_23', 'TR000_24', 'TR000_25') AND T2.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT T1.bond_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T2.element = 'p' AND T3.element = 'n'\t----- bird -----\ttoxicology",
    "244": "SELECT T2.label FROM molecule AS T2 WHERE molecule_id = (SELECT T1.molecule_id FROM bond AS T1 WHERE T1.bond_type = '=' GROUP BY T1.molecule_id ORDER BY COUNT(T1.bond_id) DESC LIMIT 1)\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count) FROM (SELECT COUNT(*) AS bond_count FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'i' GROUP BY T1.atom_id)\t----- bird -----\ttoxicology",
    "246": "SELECT T1.bond_type, T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR000_45' OR T2.atom_id2 = 'TR000_45'\t----- bird -----\ttoxicology",
    "247": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id NOT IN (SELECT T2.atom_id FROM connected AS T2)\t----- bird -----\ttoxicology",
    "248": "SELECT T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#' AND T1.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "249": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id IN (SELECT T2.atom_id FROM connected AS T2 WHERE 'TR144_8_19' IN (T2.atom_id, T2.atom_id2))\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(CASE WHEN T2.bond_type = '=' THEN 1 END) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'pb'\t----- bird -----\ttoxicology",
    "253": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "WITH MostCommon AS (SELECT T1.atom_id, T2.atom_id2, T1.element || '-' || T2.element AS element_combination FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id), CommonCount AS (SELECT element_combination, COUNT(*) AS count FROM MostCommon GROUP BY element_combination ORDER BY count DESC LIMIT 1) SELECT (SELECT COUNT(*) FROM MostCommon WHERE element_combination = (SELECT element_combination FROM CommonCount)) * 100.0 / (SELECT COUNT(*) FROM connected) AS percentage\t----- bird -----\ttoxicology",
    "255": "SELECT (COUNT(T1.bond_id) * 100.0 / (SELECT COUNT(T1.bond_id) FROM bond AS T1 WHERE T1.bond_type = '-')) AS proportion FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T2.element) FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.atom_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT T1.atom_id) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '#' AND T3.element IN ('p', 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (COUNT(A.atom_id) * 100.0 / NULLIF(COUNT(C.atom_id2), 0)) AS chlorine_percentage  FROM connected AS C  INNER JOIN atom AS A ON C.atom_id2 = A.atom_id  WHERE A.element = 'cl' AND C.bond_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-')\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(molecule_id) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+'\t----- bird -----\ttoxicology",
    "267": "SELECT bond_type FROM bond WHERE molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T2.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT T1.label, COUNT(*) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'ca' GROUP BY T1.label\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(DISTINCT T2.element) = 2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_1_8' AND T2.element IN ('cl', 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.label = '-' AND T2.bond_type = '#' AND T3.element = 'c' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT (COUNT(CASE WHEN T1.element = 'cl' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT element FROM atom WHERE molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type = '='\t----- bird -----\ttoxicology",
    "276": "SELECT T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT DISTINCT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(*) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT COUNT(T1.element) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.atom_id IN (SELECT T3.atom_id FROM (SELECT T1.atom_id, ROW_NUMBER() OVER (PARTITION BY T1.molecule_id ORDER BY T1.atom_id) AS row_num FROM atom AS T1) AS T3 WHERE T3.row_num = 4)\t----- bird -----\ttoxicology",
    "282": "SELECT T1.label, (COUNT(CASE WHEN T2.element = 'h' THEN 1 END) * 1.0 / COUNT(*)) AS hydrogen_ratio FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'ca'\t----- bird -----\ttoxicology",
    "284": "SELECT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'c'\t----- bird -----\ttoxicology",
    "285": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id IN (SELECT T2.atom_id FROM connected AS T2 WHERE T2.bond_id = 'TR001_10_11')\t----- bird -----\ttoxicology",
    "286": "SELECT (SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percent_triple_bond FROM bond\t----- bird -----\ttoxicology",
    "287": "SELECT (SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percent_double_bond FROM bond WHERE molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id FROM atom WHERE molecule_id BETWEEN 'TR010' AND 'TR050' AND element = 'c'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T2.atom_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR000_1' AND T1.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / COUNT(DISTINCT T2.molecule_id)) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id FROM atom WHERE molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR001_2_4')\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(T1.bond_id), T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' AND T1.bond_type = '=' GROUP BY T2.label\t----- bird -----\ttoxicology",
    "304": "SELECT T1.molecule_id, T1.label, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(*) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T2.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT T1.atom_id, COUNT(DISTINCT T2.bond_type) FROM atom AS T1 LEFT JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346' GROUP BY T1.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT      COUNT(*) AS total_double_bonds,     SUM(CASE WHEN M.label = '+' THEN 1 ELSE 0 END) AS carcinogenic_double_bonds FROM bond AS B LEFT JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE B.bond_type = '='\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 WHERE T1.element != 's' AND T1.molecule_id NOT IN (SELECT T2.molecule_id FROM bond AS T2 WHERE T2.bond_type = '=')\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(bond_id) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "315": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'cl' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT T1.molecule_id FROM molecule AS T1 WHERE T1.label = '-' AND T1.molecule_id IN (SELECT T2.molecule_id FROM atom AS T2 WHERE T2.element = 'c')\t----- bird -----\ttoxicology",
    "317": "SELECT (COUNT(DISTINCT `molecule`.`molecule_id`) * 100.0 / (SELECT COUNT(*) FROM `molecule` WHERE `label` = '+')) AS percentage FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'cl'\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT T2.element) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_3_4'\t----- bird -----\ttoxicology",
    "320": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE (T2.atom_id = 'TR000_1' AND T2.atom_id2 = 'TR000_2') OR (T2.atom_id = 'TR000_2' AND T2.atom_id2 = 'TR000_1')\t----- bird -----\ttoxicology",
    "321": "SELECT molecule_id FROM bond WHERE bond_id = (SELECT bond_id FROM connected WHERE atom_id = 'TR000_2' AND atom_id2 = 'TR000_4')\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT (COUNT(DISTINCT T1.atom_id) * 100.0 / (SELECT COUNT(DISTINCT atom_id) FROM atom)) AS percentage FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'n'\t----- bird -----\ttoxicology",
    "326": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 's' AND T2.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '=' AND T1.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT T1.molecule_id, COUNT(T2.atom_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(T2.atom_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR004' AND 'TR010' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT T3.molecule_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '=' AND T3.atom_id LIKE '%O%'\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'C' AND T2.bond_type = '=' AND T2.molecule_id = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT name FROM cards WHERE hasFoil = 1;\t----- bird -----\tcard_games",
    "341": "SELECT id FROM cards WHERE borderColor = 'borderless' AND hasFoil = 0\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost > convertedManaCost\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT T1.uuid FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*') AND T2.status = 'Legal' AND T2.format = 'commander'\t----- bird -----\tcard_games",
    "347": "SELECT T1.artist, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniel'\t----- bird -----\tcard_games",
    "348": "SELECT T2.text FROM rulings AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT T2.name, T2.artist, T2.isPromo FROM cards AS T2 INNER JOIN rulings AS T1 ON T1.uuid = T2.uuid GROUP BY T2.uuid ORDER BY COUNT(T1.uuid) DESC LIMIT 1\t----- bird -----\tcard_games",
    "350": "SELECT T1.language FROM foreign_data AS T1 WHERE T1.uuid IN (SELECT T2.uuid FROM cards AS T2 WHERE T2.name = 'Annul' AND T2.id = 29)\t----- bird -----\tcard_games",
    "351": "SELECT T1.uuid FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isAlternative = 1 AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT (COUNT(T1.uuid) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage FROM foreign_data AS T1 WHERE T1.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "353": "SELECT T2.name, T2.totalSetSize FROM sets AS T2 INNER JOIN set_translations AS T1 ON T1.setCode = T2.code WHERE T1.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT types) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '\u221e';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "360": "SELECT language FROM set_translations WHERE setCode = (SELECT setCode FROM cards WHERE name = 'Angel of Mercy')\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Restricted' AND T2.isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'restricted' AND T1.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM legalities AS T2 WHERE T2.uuid = (SELECT T1.uuid FROM cards AS T1 WHERE T1.name = 'Cloudchaser Eagle')\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "366": "SELECT text FROM cards WHERE name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE subtypes = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT (SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage  FROM cards AS T1  INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid  WHERE T1.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT uuid FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%Flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "378": "SELECT DISTINCT T1.id FROM cards AS T1 JOIN cards AS T2 ON T1.cardKingdomFoilId = T2.cardKingdomFoilId WHERE T1.hasFoil = 1 AND T2.hasFoil = 0\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.uuid FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'banned' AND T1.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T2.language FROM legalities AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(T1.id), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' GROUP BY T2.status\t----- bird -----\tcard_games",
    "387": "SELECT id, colors FROM cards WHERE setCode = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT T1.uuid, T1.setCode, T1.convertedManaCost, T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT colors, uuid FROM cards WHERE id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT T1.uuid FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.borderColor = 'black'\t----- bird -----\tcard_games",
    "392": "SELECT T2.name FROM cards AS T2 INNER JOIN rulings AS T1 ON T2.uuid = T1.uuid WHERE T2.rarity = 'uncommon' ORDER BY T1.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(id) FROM cards WHERE artist = 'John Avon' AND (power IS NULL OR power IN ('*', '\u221e'))\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power >= 3\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = '-1'\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(id) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(CAST(REPLACE(REPLACE(REPLACE(manaCost, '{', ''), '}', ''), ',', '') AS INTEGER)) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability = 'arena'\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT T1.setCode FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(T2.id) FROM cards AS T2 WHERE T2.frameEffects = 'legendary')) AS percentage FROM cards AS T1 WHERE T1.frameEffects = 'legendary' AND T1.isOnlineOnly = 1\t----- bird -----\tcard_games",
    "402": "SELECT (COUNT(CASE WHEN isTextless = 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards WHERE isStorySpotlight = 1\t----- bird -----\tcard_games",
    "403": "SELECT T1.name, (COUNT(T2.uuid) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage FROM foreign_data AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T2.language = 'Spanish' GROUP BY T1.name\t----- bird -----\tcard_games",
    "404": "SELECT T2.language FROM set_translations AS T2 INNER JOIN sets AS T1 ON T2.setCode = T1.code WHERE T1.totalSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Commander' AND T2.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "406": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type LIKE '%Creature%' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT T1.types FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German'\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'premodern' AND T3.text = 'This is a triggered mana ability.' AND T1.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper'\t----- bird -----\tcard_games",
    "411": "SELECT T2.artist FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.text = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT DISTINCT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.type = 'Creature' AND T2.layout = 'normal' AND T2.borderColor = 'black' AND T2.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T2.date = '2007-01-02'\t----- bird -----\tcard_games",
    "414": "SELECT T3.language FROM set_translations AS T3 INNER JOIN sets AS T2 ON T3.setCode = T2.code INNER JOIN cards AS T1 ON T1.number = '180' WHERE T2.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(CASE WHEN T2.hasContentWarning = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.format = 'commander' AND T1.status = 'Legal'\t----- bird -----\tcard_games",
    "416": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(T2.id) FROM cards AS T2 WHERE T2.power IS NULL)) AS percentage FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL AND T2.language = 'French'\t----- bird -----\tcard_games",
    "417": "SELECT (SUM(CASE WHEN T2.type = 'expansion' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.id)) AS percentage FROM set_translations AS T1 LEFT JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese'\t----- bird -----\tcard_games",
    "418": "SELECT printings FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE (power IS NULL OR power = '*' OR power = '\u221e') AND promoTypes LIKE '%arenaleague%' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT (COUNT(*) * 1.0 / (SELECT COUNT(*) FROM cards)) AS proportion FROM cards WHERE isTextless = 1 AND layout = 'normal'\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE (side IS NULL OR side = '') AND (subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%')\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Archenemy' AND T2.code = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T2.language, T3.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.id = T3.id WHERE T1.number = '206'\t----- bird -----\tcard_games",
    "430": "SELECT T1.id, T1.code FROM sets AS T1 WHERE T1.block = 'Shadowmoor' AND T1.code IN (SELECT T2.setCode FROM set_translations AS T2 WHERE T2.language = 'Italian') ORDER BY T1.name ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode INNER JOIN cards AS T3 ON T2.id = T3.id INNER JOIN foreign_data AS T4 ON T3.uuid = T4.uuid WHERE T1.isForeignOnly = 0 AND T3.hasFoil = 1 AND T4.language = 'Japanese'\t----- bird -----\tcard_games",
    "432": "SELECT T1.code FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese' AND (T2.mtgoCode IS NULL OR T2.mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "WITH BlackCards AS (SELECT id FROM cards WHERE borderColor = 'black') SELECT COUNT(*) AS Count, id FROM BlackCards;\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT * FROM cards WHERE borderColor = 'black' AND isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT T2.language FROM set_translations AS T2 INNER JOIN sets AS T1 ON T1.code = T2.setCode WHERE T1.id = 174\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT T1.name, T1.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT T1.language, T1.flavorText, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(CASE WHEN convertedManaCost = 10 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards WHERE name = 'Abyssal Horror'\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'commander';\t----- bird -----\tcard_games",
    "448": "SELECT T1.name, T1.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T1.language, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(id) FROM cards WHERE artist = 'Aaron Miller' AND power = '\u221e';\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(id) FROM cards WHERE availability = 'paper' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT manaCost FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND (power IS NULL OR power = '*')\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT types FROM cards WHERE name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability IN ('arena', 'mtgo') GROUP BY artist HAVING COUNT(DISTINCT availability) = 2\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper')\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T2.language FROM set_translations AS T2 WHERE T2.setCode = (SELECT T1.setCode FROM cards AS T1 WHERE T1.name = 'Ancestor''s Chosen') AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE setCode IN (SELECT TRIM(value) FROM (SELECT SUBSTR(printings, instr(printings, ',') + 1) AS value FROM cards WHERE name = 'Angel of Mercy' UNION SELECT printings FROM cards WHERE name = 'Angel of Mercy'))\t----- bird -----\tcard_games",
    "464": "SELECT T3.name FROM cards AS T3 INNER JOIN foreign_data AS T2 ON T3.uuid = T2.uuid INNER JOIN sets AS T1 ON T2.uuid = T1.code WHERE T1.code = (SELECT setCode FROM set_translations WHERE translation = 'Hauptset Zehnte Edition')\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS(SELECT 1 FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Korean')\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards WHERE setCode IN (SELECT setCode FROM set_translations WHERE translation = 'Hauptset Zehnte Edition') AND artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize FROM sets WHERE code = (SELECT setCode FROM set_translations WHERE translation = 'Hauptset Zehnte Edition')\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition') AND language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "469": "SELECT EXISTS(SELECT 1 FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.mtgoCode WHERE T1.name = 'Angel of Mercy' AND T2.isOnlineOnly = 1)\t----- bird -----\tcard_games",
    "470": "SELECT s.releaseDate FROM sets s INNER JOIN set_translations st ON s.code = st.setCode INNER JOIN cards c ON st.id = c.id WHERE c.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT type FROM sets WHERE LOWER(name) = LOWER('Hauptset Zehnte Edition')\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT CASE WHEN T2.isForeignOnly = 1 THEN 'Yes' ELSE 'No' END AS Availability FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 100\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.id WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT name FROM cards WHERE LOWER(setCode) = 'coldsnap' AND convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE LOWER(setCode) = 'coldsnap')\t----- bird -----\tcard_games",
    "477": "SELECT artist FROM cards WHERE LOWER(setCode) = 'coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "478": "SELECT name FROM cards WHERE number = '4' AND EXISTS (SELECT 1 FROM sets WHERE mcmName = 'Coldsnap')\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND setCode = 'Coldsnap' AND (power IS NULL OR power = '*')\t----- bird -----\tcard_games",
    "480": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Italian' AND T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT T2.language FROM foreign_data AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "482": "SELECT T1.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT T3.text FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode INNER JOIN foreign_data AS T3 ON T2.uuid = T3.uuid WHERE T1.name = 'Coldsnap' AND T3.language = 'Italian'\t----- bird -----\tcard_games",
    "484": "SELECT T2.name FROM foreign_data AS T2 INNER JOIN cards AS T1 ON T2.uuid = T1.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T3.code = 'Coldsnap' AND T1.convertedManaCost = (SELECT MAX(T4.convertedManaCost) FROM cards AS T4 INNER JOIN sets AS T5 ON T4.setCode = T5.code WHERE T5.code = 'Coldsnap')\t----- bird -----\tcard_games",
    "485": "SELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT (SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM cards WHERE setCode = (SELECT id FROM sets WHERE name = 'Coldsnap')\t----- bird -----\tcard_games",
    "487": "SELECT (COUNT(CASE WHEN T1.power = '\u221e' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.id WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = 'From the Vault: Lore'\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT T1.text, T2.hasContentWarning FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT T2.totalSetSize FROM sets AS T2 WHERE T2.code = (SELECT T1.setCode FROM set_translations AS T1 WHERE T1.translation = 'Rinascita di Alara')\t----- bird -----\tcard_games",
    "497": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huiti\u00e8me \u00e9dition'\t----- bird -----\tcard_games",
    "498": "SELECT T2.translation FROM set_translations AS T2 INNER JOIN cards AS T1 ON T2.setCode IN (SELECT TRIM(SUBSTR(T1.printings, 2, LENGTH(T1.printings) - 2)) FROM cards AS T1 WHERE T1.name = 'Tendo Ice Bridge') WHERE T2.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(T2.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Tenth Edition'\t----- bird -----\tcard_games",
    "500": "SELECT T2.translation FROM set_translations AS T2 JOIN sets AS T3 ON T2.setCode = T3.code JOIN cards AS T1 ON T3.code = T1.setCode WHERE T1.name = 'Fellwar Stone' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Journey into Nyx Hero's Path' ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "502": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT T1.type FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3\t----- bird -----\tcard_games",
    "505": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Mirrodin' AND T2.language = 'Simplified Chinese'\t----- bird -----\tcard_games",
    "506": "SELECT (COUNT(CASE WHEN T2.isNonFoilOnly = 1 THEN 1 END) * 100.0 / COUNT(T1.setCode)) AS percentage FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT (COUNT(CASE WHEN T1.isOnlineOnly = 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT availability FROM cards WHERE isTextless = 1 AND artist = 'Aleksi Briclot'\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE totalSetSize = (SELECT MAX(totalSetSize) FROM sets)\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE (side IS NULL OR side = '') AND convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE side IS NULL OR side = '')\t----- bird -----\tcard_games",
    "511": "SELECT T1.frameEffects, COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id WHERE T2.isFoilOnly = 1 GROUP BY T1.frameEffects ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(id) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a'\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "514": "SELECT T1.uuid, T1.manaCost FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'duel' ORDER BY LENGTH(T1.manaCost) DESC LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT T1.originalReleaseDate, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' ORDER BY T1.originalReleaseDate ASC LIMIT 1\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Ba\u00c7\u00b5a' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T1.types = 'Enchantment' AND T1.name = 'Abundance' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "518": "SELECT T1.format, T2.name FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.format IN (SELECT format FROM legalities WHERE status = 'banned' GROUP BY format HAVING COUNT(*) = (SELECT MAX(banned_count) FROM (SELECT COUNT(*) AS banned_count FROM legalities WHERE status = 'banned' GROUP BY format) AS counts))\t----- bird -----\tcard_games",
    "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "WITH LeastIllustrator AS (SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(*) ASC LIMIT 1) SELECT T1.artist, T2.format FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist IN (SELECT artist FROM LeastIllustrator)\t----- bird -----\tcard_games",
    "521": "SELECT T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.frameVersion = '1997' AND T2.artist = 'D. Alexander Gregory' AND T1.format = 'legacy' AND T2.hasContentWarning = 1\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1\t----- bird -----\tcard_games",
    "523": "SELECT AVG(set_count) FROM (SELECT COUNT(T1.id) AS set_count, STRFTIME('%Y', T1.releaseDate) AS year FROM sets AS T1 WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY year) AS annual_sets\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT uuid FROM legalities WHERE status IN ('Restricted', 'Banned') AND format = 'oldschool'\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT T2.text FROM rulings AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.artist = 'Kev Walker' ORDER BY T2.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.name = T3.name WHERE T3.name = 'Hour of Devastation'\t----- bird -----\tcard_games",
    "529": "SELECT T1.name FROM sets AS T1 WHERE EXISTS (SELECT 1 FROM set_translations AS T2 WHERE T2.setCode = T1.code AND LOWER(T2.language) = 'korean') AND NOT EXISTS (SELECT 1 FROM set_translations AS T2 WHERE T2.setCode = T1.code AND LOWER(T2.language) = 'japanese')\t----- bird -----\tcard_games",
    "530": "SELECT T1.frameVersion, T1.uuid, T2.status FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams'\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon')\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(Id) FROM users WHERE Views > 10 AND CreationDate > '2014-01-01'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT OwnerDisplayName FROM posts WHERE Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT T2.Title FROM posts AS T2 INNER JOIN users AS T1 ON T2.OwnerUserId = T1.Id WHERE T1.DisplayName = 'csgillespie' ORDER BY T2.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(T1.CommentCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT AnswerCount FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') ORDER BY AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "544": "SELECT LastEditorDisplayName FROM posts WHERE Id = (SELECT Id FROM posts WHERE Title = 'Examples for teaching: Correlation does not mean causation')\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T2.DisplayName FROM users AS T2 INNER JOIN posts AS T1 ON T1.OwnerUserId = T2.Id WHERE T1.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score > 19\t----- bird -----\tcodebase_community",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = (SELECT T2.TagName FROM tags AS T2 GROUP BY T2.TagName ORDER BY COUNT(*) DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(T1.Id) FROM badges AS T1 WHERE T1.UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "552": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE STRFTIME('%Y', T1.Date) = '2011' AND T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "554": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.Id ORDER BY COUNT(T2.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_count) FROM (SELECT COUNT(b.Id) AS badge_count FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.Views > 200 GROUP BY b.UserId)\t----- bird -----\tcodebase_community",
    "557": "SELECT (SUM(CASE WHEN T2.Age > 65 THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.Id)) AS percentage  FROM posts AS T1  INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id  WHERE T1.Score > 5\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "WITH VoteCounts AS (SELECT CreationDate, COUNT(*) AS vote_count FROM votes GROUP BY CreationDate) SELECT CreationDate FROM VoteCounts WHERE vote_count = (SELECT MAX(vote_count) FROM VoteCounts)\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT T1.Title FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score = (SELECT MAX(Score) FROM comments)\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910\t----- bird -----\tcodebase_community",
    "563": "SELECT T1.FavoriteCount FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.CreationDate = '2014-04-23 20:29:39' AND T2.UserId = 3025\t----- bird -----\tcodebase_community",
    "564": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ParentId = 107829 LIMIT 1\t----- bird -----\tcodebase_community",
    "565": "SELECT T1.ClosedDate FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 23853 AND T2.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "566": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 65041\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(T2.Id) FROM posts AS T2 WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "568": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN tags AS T2 ON T1.PostId = T2.Id WHERE T2.TagName = 'data-visualization'\t----- bird -----\tcodebase_community",
    "570": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) * 1.0 / (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS post_vote_ratio\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT Id FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.Id FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT T1.Text FROM comments AS T1 WHERE T1.UserId = (SELECT T2.Id FROM users AS T2 WHERE T2.DisplayName = 'A Lion')\t----- bird -----\tcodebase_community",
    "578": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT T2.Text FROM comments AS T2 INNER JOIN posts AS T1 ON T2.PostId = T1.Id WHERE T1.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT T1.Id FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
    "582": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score), T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT T2.Text FROM comments AS T2 INNER JOIN posts AS T1 ON T1.Id = T2.PostId WHERE T1.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(T1.BountyAmount) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT T1.UserId FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.BountyAmount = 50 AND T2.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT T1.Title, T3.Comment, AVG(T1.ViewCount) AS AverageViewCount FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId INNER JOIN postHistory AS T3 ON T1.Id = T3.PostId WHERE T2.TagName = 'humor' GROUP BY T1.Id, T3.Comment\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(Id) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users ORDER BY Views ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND STRFTIME('%Y', Date) = '2011'\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) FROM (SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(Id) > 5)\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN (SELECT UserId FROM badges WHERE Name IN ('Teacher', 'Supporter') GROUP BY UserId HAVING COUNT(DISTINCT Name) = 2) AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'New York'\t----- bird -----\tcodebase_community",
    "594": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT T1.Id FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId WHERE T1.Views >= 1000 GROUP BY T2.UserId, T2.PostId HAVING COUNT(*) = 1\t----- bird -----\tcodebase_community",
    "596": "SELECT T2.Name FROM comments AS T1 INNER JOIN badges AS T2 ON T1.UserId = T2.UserId GROUP BY T1.UserId ORDER BY COUNT(T1.Id) DESC\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'India' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT ((COUNT(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 END) - COUNT(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 END)) * 100.0) / NULLIF(COUNT(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 END), 0)) AS percentage_difference FROM badges\t----- bird -----\tcodebase_community",
    "599": "SELECT PostHistoryTypeId FROM postHistory WHERE PostId = 3720 UNION ALL SELECT COUNT(DISTINCT UserId) FROM comments WHERE PostId = 3720\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.RelatedPostId, T2.ViewCount FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT T1.Id, T1.OwnerUserId FROM posts AS T1 WHERE T1.Score > 60\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(U.UpVotes), AVG(U.Age) FROM users AS U WHERE U.Id IN (SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING COUNT(Id) > 10)\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(*) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE DATE(Date) = '2010-07-19'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate BETWEEN '2010-07-19 19:25:47' AND '2010-07-19 19:25:48'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT T1.Reputation FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (COUNT(T1.UserId) * 100.0 / COUNT(T2.Id)) AS percentage FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "615": "SELECT (SUM(CASE WHEN T2.Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT T1.UserId)) AS percentage  FROM badges AS T1  INNER JOIN users AS T2 ON T1.UserId = T2.Id  WHERE T1.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "616": "SELECT T2.Score FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CreationDate = '2010-07-19 19:19:56'\t----- bird -----\tcodebase_community",
    "617": "SELECT T1.Text FROM comments AS T1 WHERE T1.PostId = (SELECT Id FROM posts WHERE CreationDate = '2010-07-19 19:37:33')\t----- bird -----\tcodebase_community",
    "618": "SELECT T1.Age FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Age BETWEEN 19 AND 65 AND T2.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "620": "SELECT T1.Views FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.Reputation = (SELECT MIN(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "622": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Age > 65 AND T2.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "624": "SELECT NULL\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(Id) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(Id) FROM votes WHERE STRFTIME('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT Id FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "629": "SELECT (SELECT COUNT(*) FROM votes WHERE STRFTIME('%Y', CreationDate) = '2010') * 1.0 / (SELECT COUNT(*) FROM votes WHERE STRFTIME('%Y', CreationDate) = '2011') AS ratio\t----- bird -----\tcodebase_community",
    "630": "SELECT T1.Tags FROM posts AS T1 WHERE T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'John Salvatier')\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(T1.Id) FROM posts AS T1 WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo')\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Harlan')\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT T1.Id, T1.ViewCount, T1.FavoriteCount FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE LOWER(T1.OwnerDisplayName) = LOWER('Matt Parker') GROUP BY T1.Id HAVING COUNT(T2.Id) > 4\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(T3.Id) FROM comments AS T3 INNER JOIN posts AS T2 ON T3.PostId = T2.Id INNER JOIN users AS T1 ON T2.OwnerUserId = T1.Id WHERE T1.DisplayName = 'Neil McGuigan' AND T3.Score < 60\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT T2.Tags FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Mark Meckes' AND T2.CommentCount = 0\t----- bird -----\tcodebase_community",
    "638": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT (SUM(CASE WHEN T1.Tags LIKE '%<r>%' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.Id)) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "640": "SELECT      COALESCE(SUM(CASE WHEN T2.DisplayName = 'Mornington' THEN T1.ViewCount ELSE 0 END), 0) -      COALESCE(SUM(CASE WHEN T2.DisplayName = 'Amos' THEN T1.ViewCount ELSE 0 END), 0) AS ViewCountDifference FROM posts AS T1  INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND STRFTIME('%Y', Date) = '2014'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE 1=0; -- Placeholder query since no date information is available\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Id = (SELECT Id FROM posts WHERE Title = 'Detecting a given face in a database of facial images')\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 0\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T3.DisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T2.Score > 0\t----- bird -----\tcodebase_community",
    "647": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T2.UserId = T1.Id WHERE T1.Location = 'North Pole' AND STRFTIME('%Y', T2.Date) = '2011'\t----- bird -----\tcodebase_community",
    "648": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT T1.LastEditDate, COUNT(T2.PostId) FROM posts AS T1 LEFT JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY T1.Id\t----- bird -----\tcodebase_community",
    "650": "SELECT T1.LastAccessDate, T1.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'How to tell if something happened in a data set which monitors a value over time')\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.Id AS post_id, T2.Name AS badge_name FROM posts AS T1 INNER JOIN badges AS T2 ON T1.OwnerUserId = T2.UserId WHERE T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Samuel') AND STRFTIME('%Y', T1.CreaionDate) = '2013'\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts WHERE ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT T3.DisplayName, T3.Location FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T1.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?')\t----- bird -----\tcodebase_community",
    "656": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.ParentId = T2.Id WHERE T1.Score = (SELECT MAX(Score) FROM posts WHERE ParentId IS NOT NULL)\t----- bird -----\tcodebase_community",
    "657": "SELECT T2.DisplayName, T2.WebsiteUrl FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 8 AND T1.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Id = (SELECT UserId FROM (SELECT UserId, COUNT(*) AS InteractionCount FROM (SELECT OwnerUserId AS UserId FROM posts UNION ALL SELECT UserId FROM comments UNION ALL SELECT UserId FROM votes) AS Interactions GROUP BY UserId ORDER BY InteractionCount DESC LIMIT 1))\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT T1.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE STRFTIME('%Y', T2.CreationDate) = '2011' AND T2.BountyAmount = 50\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users WHERE Age IS NOT NULL)\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts;\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(monthly_links) FROM (SELECT COUNT(*) AS monthly_links FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate LIKE '2010%' AND T2.AnswerCount <= 2 GROUP BY STRFTIME('%Y-%m', T1.CreationDate))\t----- bird -----\tcodebase_community",
    "666": "SELECT T1.Id FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 1465 ORDER BY T1.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "667": "SELECT T1.Title FROM posts AS T1 WHERE T1.Id = (SELECT T2.PostId FROM postLinks AS T2 ORDER BY T2.CreationDate ASC LIMIT 1)\t----- bird -----\tcodebase_community",
    "668": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.Id ORDER BY COUNT(T2.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(T1.CreationDate) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(CreationDate) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users WHERE Age IS NOT NULL))\t----- bird -----\tcodebase_community",
    "671": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Id ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(post_count) FROM (SELECT COUNT(v.PostId) AS post_count FROM votes AS v INNER JOIN users AS u ON v.UserId = u.Id WHERE u.Age = (SELECT MAX(Age) FROM users) GROUP BY v.UserId)\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(T1.Id) FROM posts AS T1 WHERE T1.OwnerUserId = (SELECT T2.Id FROM users AS T2 WHERE T2.DisplayName = 'Jay Stevens') AND STRFTIME('%Y', T1.CreaionDate) = '2010'\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "679": "SELECT T1.Id, T1.Title FROM posts AS T1 WHERE T1.Score = (SELECT MAX(Score) FROM posts);\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount > 20000\t----- bird -----\tcodebase_community",
    "682": "SELECT T1.Id, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE strftime('%Y', T1.CreaionDate) = '2010' ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(T1.Id) * 100.0 / (SELECT COUNT(*) FROM posts)) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Reputation > 1000\t----- bird -----\tcodebase_community",
    "684": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM users)) AS percentage FROM users WHERE Age BETWEEN 13 AND 18\t----- bird -----\tcodebase_community",
    "685": "SELECT ViewCount, LastEditorDisplayName FROM posts WHERE Id = (SELECT Id FROM posts WHERE LOWER(Title) = LOWER('Computer Game Datasets'))\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(C.Id) FROM comments AS C WHERE C.PostId = (SELECT P.Id FROM posts AS P ORDER BY P.Score DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT T2.DisplayName, T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183\t----- bird -----\tcodebase_community",
    "690": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Emmett' ORDER BY T2.Date DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000\t----- bird -----\tcodebase_community",
    "692": "SELECT JULIANDAY(T1.Date) - JULIANDAY(T2.CreationDate) AS TimeTaken FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(P.Id) AS post_count, COUNT(C.Id) AS comment_count FROM users AS U LEFT JOIN posts AS P ON U.Id = P.OwnerUserId LEFT JOIN comments AS C ON U.Id = C.UserId WHERE U.Id = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "694": "SELECT T1.Text, T3.DisplayName FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T1.UserId = T3.Id WHERE T2.Title = 'Analysing wind data with R' ORDER BY T1.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol'\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(Id) FROM posts WHERE Tags LIKE '%careers%'\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT CommentCount + AnswerCount FROM posts WHERE Title = 'Clustering 1D data'\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(Id) FROM votes WHERE BountyAmount > 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1))) AS percentage FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1) AND Score > 50\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Body LIKE '%linear regression%'\t----- bird -----\tcodebase_community",
    "707": "SELECT T2.Text FROM comments AS T2 INNER JOIN posts AS T1 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT T1.CreationDate, T1.Age FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.WebsiteUrl IS NOT NULL\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.CommentCount = 1\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.Id, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT T1.Id FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(CASE WHEN T2.UpVotes = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "717": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(T1.power_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm > 200 AND T3.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "720": "SELECT T2.full_name FROM superhero AS T2 INNER JOIN hero_power AS T1 ON T1.hero_id = T2.id GROUP BY T2.full_name HAVING COUNT(T1.hero_id) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.id = (SELECT id FROM superhero WHERE superhero_name = 'Apocalypse')\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND T3.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND T1.hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond')\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.publisher_id = (SELECT T2.id FROM publisher AS T2 WHERE T2.publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "726": "SELECT T1.id, T1.height_cm FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT T2.colour, COUNT(T1.id) AS count FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics' GROUP BY T2.colour ORDER BY count DESC\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "730": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_power AS T3 ON T2.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id INNER JOIN publisher AS T1 ON T2.publisher_id = T1.id WHERE T1.publisher_name = 'Marvel Comics' AND T4.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT T3.publisher_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id INNER JOIN attribute AS T4 ON T2.attribute_id = T4.id WHERE T4.attribute_name = 'Speed' AND T2.attribute_value IS NOT NULL AND T2.attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute AS T5 INNER JOIN attribute AS T6 ON T5.attribute_id = T6.id WHERE T6.attribute_name = 'Speed')\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = 1 AND T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = (SELECT id FROM superhero WHERE superhero_name = 'Blue Beetle II')\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond')\t----- bird -----\tsuperhero",
    "736": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_attribute AS T1 ON T2.id = T1.hero_id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T1.hero_id ASC LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT T1.id FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T2.hero_id < 50\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.superhero_name ORDER BY COUNT(T2.power_id) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage, COUNT(CASE WHEN T3.publisher_name = 'Marvel Comics' THEN 1 END) AS marvel_count FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "744": "SELECT ABS(SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS difference FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name IN ('DC Comics', 'Marvel Comics')\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.gender_id = 1 LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT superhero_name FROM superhero WHERE eye_colour_id IS NULL AND height_cm BETWEEN 170 AND 190\t----- bird -----\tsuperhero",
    "754": "SELECT power_id FROM hero_power WHERE hero_id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT hair_colour_id FROM superhero WHERE height_cm = 185 AND race_id = (SELECT id FROM race WHERE race = 'Human')\t----- bird -----\tsuperhero",
    "759": "SELECT eye_colour_id FROM superhero WHERE weight_kg = (SELECT MAX(weight_kg) FROM superhero WHERE weight_kg IS NOT NULL)\t----- bird -----\tsuperhero",
    "760": "SELECT (SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "761": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.weight_kg > (0.79 * (SELECT AVG(weight_kg) FROM superhero WHERE weight_kg IS NOT NULL)) AND T1.gender_id = (SELECT id FROM gender WHERE gender = 'Male')\t----- bird -----\tsuperhero",
    "762": "SELECT T1.power_id FROM hero_power AS T1 GROUP BY T1.power_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(id) FROM superhero WHERE skin_colour_id IN (SELECT id FROM colour WHERE colour = 'No Colour')\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T1.id FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics') AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = (SELECT id FROM superhero WHERE superhero_name = 'Abraham Sapien')\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.hair_colour_id = T1.skin_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = 1)) AS percentage FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.gender_id = 1 AND T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T3.superhero_name FROM superhero AS T3 INNER JOIN hero_power AS T1 ON T3.id = T1.hero_id INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(DISTINCT T1.power_id) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T2.power_id FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT T1.height_cm FROM superhero AS T1 WHERE T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Amber')\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT T1.eye_colour_id FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T2.colour = 'Gold'\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "WITH StrengthAttribute AS (SELECT id FROM attribute WHERE attribute_name = 'Strength'), MaxStrengthValue AS (SELECT MAX(attribute_value) AS max_value FROM hero_attribute WHERE attribute_id = (SELECT id FROM StrengthAttribute)) SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_id = (SELECT id FROM StrengthAttribute) AND attribute_value = (SELECT max_value FROM MaxStrengthValue)\t----- bird -----\tsuperhero",
    "787": "SELECT T2.race, T3.alignment FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T1.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(T2.id) FROM superhero AS T2 WHERE T2.gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "790": "SELECT ABS((SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler'))\t----- bird -----\tsuperhero",
    "791": "SELECT id, AVG(height_cm) FROM superhero GROUP BY id\t----- bird -----\tsuperhero",
    "792": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T3.race = 'God / Eternal' AND T2.gender = 'Male'\t----- bird -----\tsuperhero",
    "794": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed')\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "796": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT T1.id FROM superhero AS T1 WHERE T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND T1.hair_colour_id = (SELECT id FROM colour WHERE colour = 'Brown')\t----- bird -----\tsuperhero",
    "798": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(id) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(id) FROM superhero)) AS percentage FROM superhero AS T1 WHERE T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')\t----- bird -----\tsuperhero",
    "801": "SELECT (SUM(CASE WHEN T2.gender = 'Male' THEN 1 ELSE 0 END) * 1.0) / (SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END)) AS ratio FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id\t----- bird -----\tsuperhero",
    "802": "SELECT id FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero WHERE height_cm IS NOT NULL)\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE LOWER(power_name) = LOWER('cryokinesis')\t----- bird -----\tsuperhero",
    "804": "SELECT full_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT eye_colour_id FROM superhero WHERE full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.attribute_id = (SELECT MAX(attribute_id) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "811": "SELECT T2.alignment, T4.power_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T1.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT full_name FROM superhero WHERE eye_colour_id = 1 LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T3.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "814": "SELECT T1.skin_colour_id FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.gender = 'Female' AND T3.alignment = 'Good'\t----- bird -----\tsuperhero",
    "816": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_attribute AS T1 ON T1.hero_id = T2.id WHERE T1.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT T3.race FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.hair_colour_id = (SELECT id FROM colour WHERE LOWER(colour) = 'blue') AND LOWER(T2.gender) = 'male'\t----- bird -----\tsuperhero",
    "818": "SELECT (COUNT(CASE WHEN T2.gender = 'Female' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "819": "SELECT (SUM(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') THEN 1 ELSE 0 END) - SUM(CASE WHEN eye_colour_id IS NULL THEN 1 ELSE 0 END)) AS difference FROM superhero\t----- bird -----\tsuperhero",
    "820": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T2.id = 1 AND T3.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.alignment_id = 1 AND T1.skin_colour_id = (SELECT T2.id FROM colour AS T2 WHERE T2.colour = 'Green')\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_power AS T1 ON T2.id = T1.hero_id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T2.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT T3.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T4 ON T2.power_id = T4.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T4.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT T1.id FROM superhero AS T1 WHERE T1.publisher_id IS NOT NULL ORDER BY T1.weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.race_id > 1 AND T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(T2.hero_id) FROM hero_attribute AS T2 INNER JOIN attribute AS T1 ON T2.attribute_id = T1.id WHERE T1.attribute_name = 'Speed'\t----- bird -----\tsuperhero",
    "829": "SELECT ABS(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC' THEN 1 ELSE 0 END)) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "830": "SELECT T2.attribute_name FROM attribute AS T2 INNER JOIN hero_attribute AS T1 ON T2.id = T1.attribute_id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = 'Black Panther' ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero WHERE height_cm IS NOT NULL)\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT (COUNT(CASE WHEN T2.gender = 'Female' THEN 1 END) * 100.0 / COUNT(*)) AS percentage  FROM superhero AS T1  INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id  INNER JOIN gender AS T2 ON T1.gender_id = T2.id  WHERE T3.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics')) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Good') AND T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Brown')\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "843": "SELECT T1.hero_id FROM hero_power AS T1 WHERE T1.power_id = (SELECT T2.id FROM superpower AS T2 WHERE T2.power_name = 'Intelligence')\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT T1.hero_id FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.height_cm > (0.8 * (SELECT AVG(height_cm) FROM superhero WHERE height_cm IS NOT NULL))\t----- bird -----\tsuperhero",
    "846": "SELECT T2.driverRef FROM drivers AS T2 INNER JOIN qualifying AS T1 ON T1.driverId = T2.driverId WHERE T1.raceId = 20\t----- bird -----\tformula_1",
    "847": "SELECT T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 19 AND T2.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T1.position FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN ('Malaysia', 'Bahrain', 'Spain', 'Japan', 'China', 'Germany', 'France', 'Italy', 'United Kingdom', 'Netherlands', 'Belgium', 'Austria', 'Switzerland', 'Portugal', 'Monaco', 'Czech Republic', 'Hungary', 'Turkey', 'Russia', 'Finland', 'Sweden', 'Norway', 'Denmark', 'Ireland', 'Luxembourg', 'Slovakia', 'Slovenia', 'Estonia', 'Latvia', 'Lithuania', 'Poland', 'Ukraine', 'Romania', 'Bulgaria', 'Serbia', 'Croatia', 'Bosnia and Herzegovina', 'Montenegro', 'Georgia', 'Armenia', 'Azerbaijan', 'Kazakhstan', 'Uzbekistan', 'Kyrgyzstan', 'Tajikistan', 'Turkmenistan', 'Afghanistan', 'Iraq', 'Iran', 'Syria', 'Lebanon', 'Jordan', 'Saudi Arabia', 'United Arab Emirates', 'Oman', 'Qatar', 'Kuwait', 'Bahrain', 'Yemen', 'Egypt', 'Libya', 'Tunisia', 'Algeria', 'Morocco', 'Sudan', 'South Sudan', 'Somalia', 'Djibouti', 'Eritrea', 'Mali', 'Niger', 'Chad', 'Central African Republic', 'Cameroon', 'Nigeria', 'Ghana', 'Ivory Coast', 'Senegal', 'Togo', 'Benin', 'Burkina Faso', 'Gambia', 'Sierra Leone', 'Liberia', 'Guinea', 'Equatorial Guinea', 'Congo', 'Democratic Republic of the Congo', 'Angola', 'Zambia');\t----- bird -----\tformula_1",
    "853": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE circuitId IN (SELECT circuitId FROM races)\t----- bird -----\tformula_1",
    "855": "SELECT T1.* FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Abu Dhabi Grand Prix')\t----- bird -----\tformula_1",
    "858": "SELECT T2.nationality FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 1 AND T1.raceId = 24\t----- bird -----\tformula_1",
    "859": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruno' AND T2.surname = 'Senna' AND T1.raceId = 354\t----- bird -----\tformula_1",
    "860": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 = '1:40.000' AND T2.raceId = 355\t----- bird -----\tformula_1",
    "861": "SELECT T1.number FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q3 = '1:54.000' AND T2.raceId = 903\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.name = 'Bahrain Grand Prix' AND T2.year = 2007 AND T3.status = 'Not Finished'\t----- bird -----\tformula_1",
    "863": "SELECT T2.url FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.date = '2015-11-29' AND T3.status = 'Finished'\t----- bird -----\tformula_1",
    "865": "SELECT T2.driverId, T2.dob FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.statusId = (SELECT statusId FROM status WHERE status = 'Finished') AND T1.raceId = 592 ORDER BY T2.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time = '1:27' AND T1.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 933 AND T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933)\t----- bird -----\tformula_1",
    "868": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT T1.url FROM constructors AS T1 INNER JOIN (SELECT constructorId FROM constructorStandings WHERE raceId = 9 ORDER BY points DESC LIMIT 1) AS T2 ON T1.constructorId = T2.constructorId\t----- bird -----\tformula_1",
    "870": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lucas' AND T2.surname = 'di Grassi' AND T1.raceId = 345\t----- bird -----\tformula_1",
    "871": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '00:01:15' AND T1.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT T2.code FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 45 AND T1.q3 = '1:33.000'\t----- bird -----\tformula_1",
    "873": "SELECT T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.surname = 'McLaren' AND T1.forename = 'Bruce' AND T2.raceId = 743\t----- bird -----\tformula_1",
    "874": "SELECT T3.surname FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'San Marino Grand Prix' AND T2.year = 2006 AND T1.positionOrder = 2\t----- bird -----\tformula_1",
    "875": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.date = '2015-11-29' AND T3.status = 'Did Not Finish'\t----- bird -----\tformula_1",
    "877": "SELECT T1.driverId FROM results AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.raceId = 872 AND T2.status = 'Finished' ORDER BY T3.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 348 AND T1.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE raceId = 348)\t----- bird -----\tformula_1",
    "879": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "880": "SELECT      ((SELECT fastestLapSpeed FROM results WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) -      (SELECT fastestLapSpeed FROM results WHERE raceId = 854 ORDER BY fastestLapSpeed ASC LIMIT 1)) /      (SELECT fastestLapSpeed FROM results WHERE raceId = 854 ORDER BY fastestLapSpeed ASC LIMIT 1) * 100 AS percent_faster\t----- bird -----\tformula_1",
    "881": "SELECT driverId, (COUNT(CASE WHEN statusId = 1 THEN 1 END) * 1.0 / COUNT(*)) AS completion_rate FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '1983-07-16') GROUP BY driverId\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE circuitId = 1\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(raceId) AS race_count, name FROM races WHERE year = 2005 GROUP BY name ORDER BY name DESC\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE date = (SELECT MIN(date) FROM races)\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 AND round = (SELECT MAX(round) FROM races WHERE year = 1999)\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND name NOT IN (SELECT name FROM races WHERE year = 2000);\t----- bird -----\tformula_1",
    "888": "SELECT T2.country, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' ORDER BY T1.year ASC LIMIT 1\t----- bird -----\tformula_1",
    "889": "SELECT MAX(T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'British Grand Prix' AND T2.name = 'Brands Hatch'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT T2.year) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "891": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Singapore Grand Prix' AND T3.year = 2010 ORDER BY T2.positionOrder\t----- bird -----\tformula_1",
    "892": "SELECT T2.forename, T2.surname, SUM(T1.points) AS total_points FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId GROUP BY T2.driverId ORDER BY total_points DESC LIMIT 1\t----- bird -----\tformula_1",
    "893": "SELECT T2.forename, T2.surname, T1.points FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2017 AND T3.name = 'Chinese Grand Prix' ORDER BY T1.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT T1.milliseconds, T2.driverRef, T3.raceId FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes)\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T3.milliseconds) FROM lapTimes AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis' AND T2.name = 'Malaysian Grand Prix' AND T2.year = 2009\t----- bird -----\tformula_1",
    "896": "SELECT (COUNT(*) - COUNT(CASE WHEN R.positionOrder = 1 THEN 1 END)) * 100.0 / COUNT(*) AS percentage FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN races AS R2 ON R.raceId = R2.raceId WHERE D.surname = 'Hamilton' AND R2.year >= 2010\t----- bird -----\tformula_1",
    "897": "SELECT T2.forename, T2.nationality, MAX(T1.points) FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.wins = (SELECT MAX(wins) FROM driverStandings)\t----- bird -----\tformula_1",
    "898": "SELECT T1.forename, (CURRENT_DATE - T1.dob) AS age FROM drivers AS T1 WHERE T1.nationality = 'Japanese' ORDER BY age DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT T2.name FROM circuits AS T2 INNER JOIN races AS T1 ON T1.circuitId = T2.circuitId WHERE T1.year BETWEEN 1990 AND 2000 GROUP BY T2.name HAVING COUNT(T1.raceId) = 4\t----- bird -----\tformula_1",
    "900": "SELECT T2.name, T2.location, T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'USA' AND T1.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT T1.name, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.date LIKE '2005-09%'\t----- bird -----\tformula_1",
    "902": "SELECT T2.name FROM races AS T2 INNER JOIN lapTimes AS T1 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T1.position < 20\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.forename = 'Michael' AND T1.position = 1 AND T4.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "904": "SELECT T2.name, T2.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.driverRef = 'michael_schumacher' AND T1.fastestLap = (SELECT MAX(fastestLap) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE driverRef = 'michael_schumacher'))\t----- bird -----\tformula_1",
    "905": "SELECT AVG(T2.points) FROM results AS T2 INNER JOIN drivers AS T1 ON T2.driverId = T1.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Eddie' AND T1.surname = 'Irvine' AND T3.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT T2.name, T1.points FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton' AND forename = 'Lewis') AND T1.raceId = (SELECT raceId FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton' AND forename = 'Lewis') ORDER BY raceId ASC LIMIT 1)\t----- bird -----\tformula_1",
    "907": "SELECT T1.date, T2.country FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2017 ORDER BY T1.date\t----- bird -----\tformula_1",
    "908": "SELECT T1.name, T1.year, T2.location FROM results AS T0 INNER JOIN races AS T1 ON T0.raceId = T1.raceId INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T0.laps = (SELECT MAX(laps) FROM results)\t----- bird -----\tformula_1",
    "909": "SELECT (COUNT(CASE WHEN T1.circuitId IN (SELECT T2.circuitId FROM circuits AS T2 WHERE T2.country = 'Germany') THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM races AS T1 WHERE T1.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "910": "SELECT lat FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT name, lat FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits WHERE alt IS NOT NULL)\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL OR code = '';\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\t----- bird -----\tformula_1",
    "919": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT * FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year BETWEEN 2010 AND 2019 AND T2.location = 'Abu Dhabi'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT T1.url FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN seasons AS T3 ON T2.year = T3.year WHERE T2.name = 'Spanish Grand Prix' AND T3.year = 2009\t----- bird -----\tformula_1",
    "926": "SELECT MIN(T1.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "928": "SELECT T3.driverRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.positionOrder = 1 AND T2.name = 'Canadian Grand Prix' AND T2.year = 2007\t----- bird -----\tformula_1",
    "929": "SELECT T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT T3.name FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.surname = 'Hamilton' AND T1.rank = (SELECT MIN(rank) FROM results AS T4 INNER JOIN drivers AS T5 ON T4.driverId = T5.driverId WHERE T5.surname = 'Hamilton')\t----- bird -----\tformula_1",
    "931": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND STRFTIME('%Y', T2.raceId) = '2009'\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT T3.positionOrder FROM results AS T3 INNER JOIN drivers AS T2 ON T3.driverId = T2.driverId INNER JOIN races AS T1 ON T3.raceId = T1.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT T2.forename, T1.name FROM results AS T3 INNER JOIN drivers AS T2 ON T3.driverId = T2.driverId INNER JOIN races AS T1 ON T3.raceId = T1.raceId WHERE T3.grid = 4 AND T1.year = 1989 AND T1.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(T2.driverId) FROM results AS T2 INNER JOIN races AS T1 ON T2.raceId = T1.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008\t----- bird -----\tformula_1",
    "936": "SELECT MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.surname = 'Hamilton' AND T3.forename = 'Lewis' AND T2.name = 'Australian Grand Prix' AND T2.year = 2008\t----- bird -----\tformula_1",
    "937": "SELECT T2.time FROM results AS T2 INNER JOIN races AS T1 ON T1.raceId = T2.raceId WHERE T1.name = 'AustChineseralian Grand Prix' AND T1.year = 2008 AND T2.position = 2\t----- bird -----\tformula_1",
    "938": "SELECT T3.url, T1.driverId FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.statusId = (SELECT statusId FROM status WHERE status = 'Finished') AND T2.name = 'Chinese Grand Prix' AND T2.year = 2008\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton' AND forename = 'Lewis')\t----- bird -----\tformula_1",
    "942": "SELECT AVG(CAST(SUBSTR(fastestLapTime, 1, INSTR(fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(fastestLapTime, INSTR(fastestLapTime, ':') + 1) AS REAL)) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "943": "SELECT COUNT(DISTINCT T1.driverId) * 1.0 / (SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix') AS completion_rate FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.laps = (SELECT MAX(laps) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix'))\t----- bird -----\tformula_1",
    "944": "SELECT (MIN(T1.milliseconds) - MAX(T1.milliseconds)) / MAX(T1.milliseconds) * 100 AS percentage_difference  FROM results AS T1  INNER JOIN races AS T2 ON T1.raceId = T2.raceId  WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(circuitId) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE LOWER(location) LIKE '%united%' OR LOWER(location) LIKE '%states%' OR LOWER(location) LIKE '%usa%' OR LOWER(location) LIKE '%america%'\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(T1.points) FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = (SELECT MAX(points) FROM constructorStandings)\t----- bird -----\tformula_1",
    "950": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = 0 AND T2.raceId = 291\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(*) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Japanese' AND T2.points = 0 GROUP BY T1.constructorId HAVING COUNT(T2.points) = 2\t----- bird -----\tformula_1",
    "952": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN lapTimes AS T2 ON T1.constructorId = T2.driverId WHERE T1.nationality = 'French' AND T2.lap > 50\t----- bird -----\tformula_1",
    "954": "SELECT (SUM(CASE WHEN R1.time IS NOT NULL THEN 1 ELSE 0 END) * 100.0 / COUNT(R1.resultId)) AS completion_percentage  FROM results AS R1  INNER JOIN drivers AS D1 ON R1.driverId = D1.driverId  INNER JOIN races AS R2 ON R1.raceId = R2.raceId  WHERE D1.nationality = 'Japanese' AND R2.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "955": "SELECT T1.year, AVG(CAST(SUBSTR(T2.time, 1, INSTR(T2.time, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.time, INSTR(T2.time, ':') + 1) AS REAL)) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year < 1975 GROUP BY T1.year\t----- bird -----\tformula_1",
    "956": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.dob > '1975-01-01' AND T2.rank = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'Italian' AND T3.status != 'Finished'\t----- bird -----\tformula_1",
    "958": "SELECT T2.forename, T2.surname FROM drivers AS T2 INNER JOIN lapTimes AS T1 ON T1.driverId = T2.driverId WHERE T1.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes)\t----- bird -----\tformula_1",
    "959": "SELECT R.fastestLap  FROM results AS R  INNER JOIN driverStandings AS DS ON R.driverId = DS.driverId  INNER JOIN races AS RA ON DS.raceId = RA.raceId  WHERE RA.year = 2009  ORDER BY DS.driverStandingsId  LIMIT 1\t----- bird -----\tformula_1",
    "960": "SELECT AVG(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "961": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.milliseconds = (SELECT MIN(milliseconds) FROM results)\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(DISTINCT T1.driverId) * 100.0 / COUNT(DISTINCT T2.driverId)) AS percentage  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.dob < '1985-01-01' AND T2.laps > 50 AND T3.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT T1.driverId) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'French' AND T1.milliseconds < 120000\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "WITH YoungestDrivers AS (SELECT driverId, code, nationality FROM drivers ORDER BY dob DESC LIMIT 3) SELECT code, (SELECT COUNT(*) FROM YoungestDrivers WHERE nationality = 'Netherlandic') AS NetherlandicCount FROM YoungestDrivers;\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) = '1980'\t----- bird -----\tformula_1",
    "970": "SELECT T1.driverId, T1.nationality, MIN(T2.milliseconds) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY T1.driverId ORDER BY MIN(T2.milliseconds) ASC LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT T1.driverRef FROM drivers AS T1 WHERE T1.dob = (SELECT MIN(T2.dob) FROM drivers AS T2 WHERE T2.nationality = 'German')\t----- bird -----\tformula_1",
    "972": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.dob BETWEEN '1971-01-01' AND '1971-12-31'\t----- bird -----\tformula_1",
    "973": "SELECT T2.driverId, T2.nationality, MAX(T1.time) AS latest_lap_time FROM drivers AS T2 INNER JOIN lapTimes AS T1 ON T2.driverId = T1.driverId WHERE T2.nationality = 'Spanish' AND T2.dob < '1982-01-01' GROUP BY T2.driverId ORDER BY latest_lap_time DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "975": "SELECT T2.year, AVG(STRFTIME('%s', '1970-01-01 ' || T1.time) - STRFTIME('%s', '1970-01-01 00:00:00')) AS avg_lap_time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId GROUP BY T2.year ORDER BY avg_lap_time ASC LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY milliseconds ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T1.raceId BETWEEN 50 AND 100 AND T2.status = 'Disqualified'\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(circuitId), location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "979": "SELECT T1.round FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T3.status = 'Finished' GROUP BY T1.round ORDER BY COUNT(T2.resultId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 23 AND T2.qualifyId = (SELECT MIN(qualifyId) FROM qualifying WHERE driverId = T2.driverId AND raceId = 23)\t----- bird -----\tformula_1",
    "981": "SELECT R.year, R.name, R.date, R.time FROM races AS R JOIN qualifying AS Q ON R.raceId = Q.raceId WHERE Q.driverId = (SELECT driverId FROM drivers ORDER BY dob ASC LIMIT 1) ORDER BY R.date ASC LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'American' AND T3.status = 'Puncture'\t----- bird -----\tformula_1",
    "983": "SELECT T2.url FROM constructors AS T2 INNER JOIN (SELECT constructorId, SUM(points) AS total_points FROM constructorStandings GROUP BY constructorId ORDER BY total_points DESC LIMIT 1) AS T1 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'Italian'\t----- bird -----\tformula_1",
    "984": "SELECT url FROM constructors WHERE constructorId = (SELECT constructorId FROM constructorStandings GROUP BY constructorId ORDER BY SUM(wins) DESC LIMIT 1)\t----- bird -----\tformula_1",
    "985": "SELECT T1.driverId FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'French Grand Prix' AND T1.lap = 3 ORDER BY T1.milliseconds DESC LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT T2.name, MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.lap = 1 GROUP BY T2.name ORDER BY MIN(T1.milliseconds) ASC LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(T1.fastestLapTime) FROM results AS T1 WHERE T1.raceId = (SELECT raceId FROM races WHERE name = 'United States Grand Prix') ORDER BY T1.milliseconds ASC LIMIT 10\t----- bird -----\tformula_1",
    "988": "SELECT T2.driverId, AVG(T1.duration) AS avg_duration FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND T2.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T2.driverId ORDER BY avg_duration ASC LIMIT 3\t----- bird -----\tformula_1",
    "989": "SELECT T1.surname, T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2008 AND T2.positionOrder = 1\t----- bird -----\tformula_1",
    "990": "SELECT T1.constructorRef, T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Singapore Grand Prix' AND T2.constructorStandingsId = (SELECT MIN(constructorStandingsId) FROM constructorStandings WHERE raceId = (SELECT raceId FROM races WHERE name = 'Singapore Grand Prix' AND year = 2009))\t----- bird -----\tformula_1",
    "991": "SELECT T1.surname, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'Austrian' AND T1.dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1",
    "992": "SELECT url, dob, nationality FROM drivers WHERE nationality = 'German' AND dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT T2.name, T2.nationality, SUM(T1.points) AS total_points FROM results AS T1 INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.constructorId ORDER BY total_points DESC LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT AVG(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton' AND forename = 'Lewis') AND raceId = (SELECT raceId FROM races WHERE name = 'Turkish Grand Prix')\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) FROM (SELECT COUNT(raceId) AS race_count FROM races WHERE year BETWEEN 2001 AND 2010 GROUP BY year)\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT wins FROM driverStandings WHERE driverId = (SELECT driverId FROM (SELECT driverId, ROW_NUMBER() OVER (ORDER BY points DESC) AS rank FROM driverStandings) AS ranked WHERE rank = 91)\t----- bird -----\tformula_1",
    "999": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT T4.forename || ' ' || T4.surname AS full_name FROM drivers AS T4 INNER JOIN qualifying AS T1 ON T4.driverId = T1.driverId INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.position = 1 AND T3.name = 'Marina Bay Street Circuit' AND T2.year = 2008 AND T1.qualifyId = 3\t----- bird -----\tformula_1",
    "1002": "SELECT T1.forename, T1.surname, T1.nationality, T2.name FROM drivers AS T1 INNER JOIN results AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.dob = (SELECT MAX(dob) FROM drivers) AND T3.raceId = (SELECT MIN(raceId) FROM results WHERE driverId = T1.driverId)\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(T1.resultId) FROM results AS T1 WHERE T1.driverId = (SELECT T2.driverId FROM results AS T2 INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T2.statusId = (SELECT T4.statusId FROM status AS T4 WHERE T4.status = 'Accident') GROUP BY T2.driverId ORDER BY COUNT(T2.resultId) DESC LIMIT 1)\t----- bird -----\tformula_1",
    "1004": "SELECT T1.surname, COUNT(T2.wins) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob = (SELECT MIN(dob) FROM drivers) GROUP BY T1.driverId\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) FROM lapTimes\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) FROM pitStops WHERE driverId = 1\t----- bird -----\tformula_1",
    "1008": "SELECT T3.lap  FROM pitStops AS T3  INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId  INNER JOIN races AS T2 ON T3.raceId = T2.raceId  WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis' AND T2.name = 'Australian Grand Prix' AND T2.raceId IN (SELECT raceId FROM pitStops WHERE lap IS NOT NULL)\t----- bird -----\tformula_1",
    "1009": "SELECT T1.driverId, T1.duration FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2011\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(milliseconds) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1011": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes) ORDER BY T2.milliseconds ASC LIMIT 20\t----- bird -----\tformula_1",
    "1012": "SELECT RA.circuitId FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE R.driverId = (SELECT driverId FROM drivers WHERE driverRef = 'hamilton') AND R.fastestLap = (SELECT MIN(fastestLap) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE driverRef = 'hamilton'))\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Austrian Grand Prix'\t----- bird -----\tformula_1",
    "1014": "SELECT T1.raceId, T1.driverId, T1.lap, T1.time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1015": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Austrian Grand Prix Circuit' AND T1.raceId = (SELECT raceId FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE circuitId = T2.circuitId) ORDER BY lap ASC LIMIT 1)\t----- bird -----\tformula_1",
    "1016": "SELECT T1.milliseconds FROM pitStops AS T1 WHERE T1.driverId = (SELECT T2.driverId FROM lapTimes AS T2 INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Austrian Grand Prix' ORDER BY T2.milliseconds ASC LIMIT 1) AND T1.raceId = (SELECT T2.raceId FROM races AS T2 WHERE T2.name = 'Austrian Grand Prix')\t----- bird -----\tformula_1",
    "1017": "SELECT T3.lat, T3.lng FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.time = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(T2.milliseconds) FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, height FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2016/2016' GROUP BY T1.name ORDER BY COUNT(T2.goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT home_team_api_id, COUNT(*) AS loss_count FROM Match WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY loss_count ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1027": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.penalties DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT away_team_api_id, COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League') AND (season = '2010/2011' OR season = '2009/2010') AND away_team_goal > home_team_goal GROUP BY away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT T2.name FROM League AS T2 INNER JOIN (SELECT league_id, COUNT(*) AS draw_count FROM Match WHERE season = '2016' AND home_team_goal = away_team_goal GROUP BY league_id) AS T1 ON T1.league_id = T2.id ORDER BY T1.draw_count DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.birthday) AS age FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.sprint_speed >= 97 AND T1.date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT T2.name, COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday BETWEEN '1990-01-01' AND '1995-12-31'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE STRFTIME('%Y', date) = '2010') AND STRFTIME('%Y', date) = '2010'\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE STRFTIME('%Y', date) = '2012') AND STRFTIME('%Y', T1.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (COUNT(CASE WHEN T2.preferred_foot = 'left' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.birthday BETWEEN '1987-01-01' AND '1992-12-31'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT league_id, SUM(home_team_goal + away_team_goal) AS total_goals FROM Match GROUP BY league_id ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_api_id FROM Team_Attributes AS T1 WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal') ORDER BY T1.chanceCreationPassing DESC\t----- bird -----\teuropean_football_2",
    "1042": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2009/2010' GROUP BY T1.league_id HAVING AVG(home_team_goal) > AVG(away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_short_name = 'QPR'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT * FROM Player WHERE STRFTIME('%Y', birthday) = '1970' AND STRFTIME('%m', birthday) = '10'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT T2.finishing, T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francois Affolter' AND T2.date = '2014-09-18'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Gabriel Tamas' AND strftime('%Y', T2.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T2.name = 'Scotland Premier League'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT preferred_foot FROM Player_Attributes WHERE player_fifa_api_id = (SELECT MIN(player_fifa_api_id) FROM Player)\t----- bird -----\teuropean_football_2",
    "1051": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.weight < 130 AND T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1056": "SELECT T2.name FROM League AS T2 INNER JOIN Country AS T1 ON T1.id = T2.country_id WHERE T1.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match WHERE season = '2010/2011' AND country_id = (SELECT id FROM Country WHERE name = 'Poland')\t----- bird -----\teuropean_football_2",
    "1058": "SELECT P.player_name  FROM Player P  JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id  WHERE P.height = (SELECT MAX(height) FROM Player) OR P.height = (SELECT MIN(height) FROM Player)  GROUP BY P.player_api_id  ORDER BY AVG(PA.finishing) DESC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE birthday > '1990-01-01';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > 80 AND T2.date BETWEEN '2008-01-01' AND '2010-12-31'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT id, player_api_id FROM Player_Attributes WHERE preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.height > 170 AND T1.date BETWEEN '2010-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_fifa_api_id FROM Player WHERE height = (SELECT MIN(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1070": "SELECT T1.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Germany 1. Bundesliga' AND T1.date BETWEEN '2008-08-01' AND '2008-10-31'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT T2.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.potential = 61 AND T1.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61)\t----- bird -----\teuropean_football_2",
    "1076": "SELECT ABS(AVG(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.ball_control END) - AVG(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.ball_control END)) AS difference FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name IN ('Abdou Diallo', 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name, birthday FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1079": "SELECT id FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT T1.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id ORDER BY T2.strength DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday < '1986-01-01' AND T2.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT T1.player_name, T2.crossing FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY T2.crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1086": "SELECT T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.dribbling > 70 AND T1.volleys > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.season = '2008/2009' AND T2.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T1.long_passing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday = (SELECT MAX(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Belgium Jupiler League' AND T1.date LIKE '2009-04%'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT T2.name FROM League AS T2 INNER JOIN Match AS T1 ON T1.league_id = T2.id WHERE T1.season = '2008/2009' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.birthday < '1986-01-01'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((ArielRating.overall_rating - PaulinRating.overall_rating) / PaulinRating.overall_rating) * 100 AS percentage_difference FROM (SELECT `T2`.`overall_rating` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`player_name` = 'Ariel Borysiuk') AS ArielRating,      (SELECT `T2`.`overall_rating` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`player_name` = 'Paulin Puel') AS PaulinRating\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T1.chanceCreationPassing) AS highest_score, T1.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Ajax' GROUP BY T1.chanceCreationPassingClass ORDER BY MAX(T1.chanceCreationPassing) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1099": "SELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(T1.away_team_goal) FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id INNER JOIN Country AS T3 ON T1.country_id = T3.id WHERE T2.team_long_name = 'Parma' AND T3.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1102": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = 77 AND T1.date = '2016-06-23' ORDER BY T2.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date = '2016-02-04'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T1.potential FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Parravicini'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_api_id = (SELECT player_api_id FROM Player WHERE player_fifa_api_id = 12345) AND T1.date = '2015-05-01'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Berigaud' AND T2.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MIN(date) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'))\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id INNER JOIN Match AS T3 ON T1.team_api_id IN (T3.home_team_api_id, T3.away_team_api_id) WHERE T1.team_long_name = 'Willem II'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T2.buildUpPlayDribblingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_short_name = 'LEI' AND T2.date = '2015-09-10'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE LOWER(T2.team_long_name) = 'fc lorient' AND T1.date = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T1.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'PEC Zwolle' AND T1.date = '2013-09-20'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T1.defenceAggressionClass FROM Team_Attributes AS T1 WHERE team_fifa_api_id = (SELECT T2.team_fifa_api_id FROM Team AS T2 WHERE T2.team_long_name = 'Hannover 96') AND date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Marko Arnautovic' AND T2.date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ((Landon_Rating.overall_rating - Bowery_Rating.overall_rating) / Bowery_Rating.overall_rating) * 100 AS percentage_difference FROM (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') AS Landon_Rating, (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12') AS Bowery_Rating\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE STRFTIME('%Y', birthday) <= STRFTIME('%Y', 'now', '-35 years')\t----- bird -----\teuropean_football_2",
    "1119": "SELECT COUNT(T1.home_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.home_player_1 = T2.player_api_id OR T1.home_player_2 = T2.player_api_id OR T1.home_player_3 = T2.player_api_id OR T1.home_player_4 = T2.player_api_id OR T1.home_player_5 = T2.player_api_id OR T1.home_player_6 = T2.player_api_id OR T1.home_player_7 = T2.player_api_id OR T1.home_player_8 = T2.player_api_id OR T1.home_player_9 = T2.player_api_id OR T1.home_player_10 = T2.player_api_id OR T1.home_player_11 = T2.player_api_id WHERE T2.player_name = 'Aaron Lennon'\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(away_team_goal) FROM Match WHERE home_player_1 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR home_player_2 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR home_player_3 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR home_player_4 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR home_player_5 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR home_player_6 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR home_player_7 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR home_player_8 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR home_player_9 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR home_player_10 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR home_player_11 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_1 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_2 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_3 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_4 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_5 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_6 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_7 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_8 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_9 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_10 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira')) OR away_player_11 IN (SELECT player_api_id FROM Player WHERE player_name IN ('Daan Smith', 'Filipe Ferreira'));\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(M.home_team_goal) FROM Match AS M INNER JOIN Player AS P ON M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id WHERE STRFTIME('%Y', 'now') - STRFTIME('%Y', P.birthday) <= 30\t----- bird -----\teuropean_football_2",
    "1122": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1123": "SELECT T1.player_name FROM Player AS T1 WHERE T1.player_fifa_api_id IN (SELECT player_fifa_api_id FROM Player_Attributes WHERE potential = (SELECT MAX(potential) FROM Player_Attributes))\t----- bird -----\teuropean_football_2",
    "1124": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.finishing = 1 ORDER BY T1.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT DISTINCT T1.player_api_id FROM Player AS T1 INNER JOIN Match AS T2 ON T1.player_api_id IN (T2.home_player_1, T2.home_player_2, T2.home_player_3, T2.home_player_4, T2.home_player_5, T2.home_player_6, T2.home_player_7, T2.home_player_8, T2.home_player_9, T2.home_player_10, T2.home_player_11) WHERE T2.country_id = (SELECT id FROM Country WHERE name = 'Belgium')\t----- bird -----\teuropean_football_2",
    "1127": "SELECT T1.player_fifa_api_id FROM Player_Attributes AS T1 WHERE T1.vision >= 90\t----- bird -----\teuropean_football_2",
    "1128": "SELECT M.country_id, AVG(P.weight) AS avg_weight FROM Player AS P INNER JOIN Match AS M ON P.player_api_id IN (M.away_player_1, M.away_player_2, M.away_player_3, M.away_player_4, M.away_player_5, M.away_player_6, M.away_player_7, M.away_player_8, M.away_player_9, M.away_player_10, M.away_player_11, M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11) GROUP BY M.country_id ORDER BY avg_weight DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(P.height) FROM Player AS P INNER JOIN Match AS M ON P.player_api_id IN (M.home_player_1, M.away_player_1, M.home_player_2, M.away_player_2, M.home_player_3, M.away_player_3, M.home_player_4, M.away_player_4, M.home_player_5, M.away_player_5, M.home_player_6, M.away_player_6, M.home_player_7, M.away_player_7, M.home_player_8, M.away_player_8, M.home_player_9, M.away_player_9, M.home_player_10, M.away_player_10) WHERE M.country_id = 1\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(id) FROM Player WHERE birthday > '1999-12-31' AND player_name LIKE 'Aaron%'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT ABS((SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23))\t----- bird -----\teuropean_football_2",
    "1135": "SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.potential IN (SELECT DISTINCT potential FROM Player_Attributes ORDER BY potential ASC LIMIT 5) AND T2.preferred_foot = 'right' ORDER BY T2.potential ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (SELECT COUNT(*) FROM Player_Attributes WHERE strength > 80 AND stamina > 80) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes) AS percentage\t----- bird -----\teuropean_football_2",
    "1138": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM League WHERE name = 'Belgian Jupiler League')\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.player_name, T2.sprint_speed, T2.agility, T2.acceleration FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(T1.id) FROM Match AS T1 WHERE T1.season = '2015/2016' AND T1.league_id = (SELECT T2.id FROM League AS T2 WHERE T2.name = 'Italy Serie A')\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Netherlands Eredivisie')\t----- bird -----\teuropean_football_2",
    "1144": "SELECT PA.finishing, PA.curve  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE P.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT T1.name, COUNT(T2.id) AS game_count FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY game_count DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id GROUP BY T1.away_team_api_id ORDER BY COUNT(T1.goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1147": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.strength = (SELECT MAX(strength) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (COUNT(T1.player_fifa_api_id) * 100.0 / (SELECT COUNT(T1.player_fifa_api_id) FROM Player AS T1)) AS percentage FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height < 180 AND T2.overall_rating > 70\t----- bird -----\teuropean_football_2",
    "1149": "SELECT      SUM(CASE WHEN Admission = '+' AND SEX = 'M' THEN 1 ELSE 0 END) AS Male_Inpatients,     SUM(CASE WHEN Admission = '-' AND SEX = 'M' THEN 1 ELSE 0 END) AS Male_Outpatients,     (SUM(CASE WHEN Admission = '+' AND SEX = 'M' THEN 1 ELSE 0 END) - SUM(CASE WHEN Admission = '-' AND SEX = 'M' THEN 1 ELSE 0 END)) * 100.0 / NULLIF((SUM(CASE WHEN Admission = '+' AND SEX = 'M' THEN 1 ELSE 0 END) + SUM(CASE WHEN Admission = '-' AND SEX = 'M' THEN 1 ELSE 0 END)), 0) AS Deviation_Percentage FROM Patient WHERE SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F')) AS percentage FROM Patient WHERE SEX = 'F' AND Birthday > '1930-01-01'\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT (COUNT(CASE WHEN Admission = '+' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Patient WHERE STRFTIME('%Y', Birthday) BETWEEN '1930' AND '1940'\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT (SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-') * 1.0 / (SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') AS ratio\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT T1.Diagnosis, T2.Date FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = '163109'\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT T1.ID, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+' OR T2.KCT = '+' OR T2.LAC = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday BETWEEN '1937-01-01' AND '1937-12-31' AND T2.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT T1.ID, T2.SEX, T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient AS T2 WHERE T2.SEX = 'F')) AS percentage FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND (T1.TP <= 6.0 OR T1.TP >= 8.5)\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(T1.\"aCL IgG\") FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.Birthday) >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND STRFTIME('%Y', `First Date`) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(STRFTIME('%Y', `First Date`) - STRFTIME('%Y', `Birthday`)) FROM `Patient` WHERE `Birthday` IS NOT NULL AND `First Date` IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(T2.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND STRFTIME('%Y', T1.`Examination Date`) = '1997' AND T2.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(age) - MIN(age) FROM (SELECT STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) AS age FROM Laboratory L INNER JOIN Patient P ON L.ID = P.ID WHERE L.TG IS NOT NULL AND L.TG < 150)\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT T2.Symptoms, T2.Diagnosis FROM Examination AS T2 INNER JOIN Patient AS T1 ON T1.ID = T2.ID WHERE T1.Birthday = (SELECT MAX(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Examination))\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(monthly_count) FROM (SELECT COUNT(DISTINCT T1.ID) AS monthly_count FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.Date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY STRFTIME('%Y-%m', T1.Date))\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT T1.\"Date\", (STRFTIME('%Y', T2.\"First Date\") - STRFTIME('%Y', T2.Birthday)) AS Age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' ORDER BY T2.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT COUNT(CASE WHEN T1.SEX = 'M' THEN 1 END) * 1.0 / COUNT(CASE WHEN T1.SEX = 'F' THEN 1 END) AS ratio FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.UA > 8.0 AND T1.SEX = 'M') OR (T2.UA > 6.5 AND T1.SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P WHERE P.`First Date` IS NOT NULL AND P.ID NOT IN (SELECT E.ID FROM Examination AS E WHERE E.`Examination Date` < DATE(P.`First Date`, '+1 year'))\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31' AND T2.Birthday > DATE(T1.`Examination Date`, '-18 years')\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` > 2.0 AND T2.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT T1.Diagnosis, COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.Diagnosis ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(STRFTIME('%Y', '1999-01-01') - STRFTIME('%Y', T1.Birthday)) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1991-10-01' AND '1991-10-31'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT (STRFTIME('%Y', E.\"Examination Date\") - STRFTIME('%Y', P.Birthday)) AS age, P.Diagnosis FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID INNER JOIN Examination AS E ON L.ID = E.ID WHERE L.HGB = (SELECT MAX(HGB) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT T1.ANA FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 3605340 AND T2.Date = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT `T-CHO` FROM `Laboratory` WHERE `ID` = 2927464 AND `Date` = '1995-09-04' AND `T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY ID ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T1.`aCL IgA`, T1.`aCL IgM`, T1.`aCL IgG` FROM `Examination` AS T1 INNER JOIN `Patient` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T1.`ID` IN (SELECT `ID` FROM `Laboratory` WHERE `Date` = '1993-11-12')\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT STRFTIME('%Y', '1991-10-21') - STRFTIME('%Y', P.Birthday) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.Date = '1991-10-21' AND L.UA = 8.4\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 WHERE T1.ID IN (SELECT ID FROM Patient WHERE \"First Date\" = '1991-06-13' AND Diagnosis = 'SJS') AND STRFTIME('%Y', T1.`Date`) = '1995'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT Diagnosis FROM Patient WHERE Diagnosis = 'SLE' AND `First Date` = '1997-01-27'\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.\"Examination Date\" = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (MAX(CASE WHEN T1.Date = '1981-12-01' THEN T1.`T-CHO` END) - MAX(CASE WHEN T1.Date = '1981-11-01' THEN T1.`T-CHO` END)) / MAX(CASE WHEN T1.Date = '1981-11-01' THEN T1.`T-CHO` END) AS decrease_rate FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-02-18' AND T1.Date IN ('1981-11-01', '1981-12-01')\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT ID FROM Examination WHERE Diagnosis = 'Behcet' AND `Examination Date` BETWEEN '1970-01-01' AND '1997-12-31'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T1.GPT > 30 AND T1.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND STRFTIME('%Y', Birthday) = '1964' AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (COUNT(CASE WHEN UA IS NOT NULL AND (UA < 8.0 OR UA < 6.5) THEN 1 END) * 100.0 / COUNT(CASE WHEN `U-PRO` IS NOT NULL AND `U-PRO` > 0 AND `U-PRO` < 30 THEN 1 END)) AS percentage FROM Laboratory WHERE `U-PRO` IS NOT NULL AND `U-PRO` > 0 AND `U-PRO` < 30\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (COUNT(CASE WHEN Diagnosis = 'BEHCET' THEN 1 END) * 100.0 / COUNT(CASE WHEN SEX = 'M' THEN 1 END)) AS percentage FROM Patient WHERE STRFTIME('%Y', \"First Date\") = '1981'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT T2.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Admission = '-' AND T1.Date LIKE '1991-10-%' AND T1.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient AS T1 WHERE T1.ID NOT IN (SELECT T2.ID FROM Examination AS T2 WHERE T2.ANA LIKE 'P%') AND T1.SEX = 'F' AND T1.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T3.SEX FROM Patient AS T3 INNER JOIN Examination AS T1 ON T3.ID = T1.ID INNER JOIN Laboratory AS T2 ON T3.ID = T2.ID WHERE T1.Diagnosis = 'PSS' AND T2.CRP = '2+' AND T2.CRE = 1 AND T2.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.PLT > 400 AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' GROUP BY T1.Symptoms ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Description, Diagnosis FROM Patient WHERE ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE STRFTIME('%Y', Date) = '1997' AND (TP < 6.0 OR TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT COUNT(CASE WHEN P.Diagnosis = 'SLE' THEN 1 END) * 1.0 / COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.Symptoms = 'thrombocytopenia'\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE Diagnosis LIKE '%RA%' AND STRFTIME('%Y', Birthday) = '1980')) AS percentage FROM Patient WHERE SEX = 'F' AND Diagnosis LIKE '%RA%' AND STRFTIME('%Y', Birthday) = '1980'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T1.SEX = 'M' AND T2.Date BETWEEN '1995-01-01' AND '1997-12-31' AND T3.Diagnosis = 'Behcet' AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.WBC < 3.5 AND T2.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT (MIN(E.`Examination Date`) - P.`First Date`) AS Time_Taken  FROM Patient AS P  INNER JOIN Examination AS E ON P.ID = E.ID  WHERE P.ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE             WHEN UA > 8.0 THEN 'Within normal range for males'             WHEN UA > 6.5 THEN 'Within normal range for females'             ELSE 'Not within normal range'         END AS uric_acid_status  FROM Laboratory  WHERE ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = 48473 AND GOT > 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND STRFTIME('%Y', T2.Date) = '1994'\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT > 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT T2.Diagnosis FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.GPT >= 60 ORDER BY T2.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT T1.ID, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.Birthday)) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T2.Admission FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01' AND T2.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT T1.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT T1.ID, ABS(T2.TP - CASE WHEN T2.TP < 6.0 THEN 6.0 ELSE 8.5 END) AS deviation FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT T2.ID, T2.Birthday FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND (T1.ALB < 3.5 OR T1.ALB > 5.5) ORDER BY T2.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT T1.ID, CASE WHEN T2.ALB > 3.5 AND T2.ALB < 5.5 THEN 'Within Normal Range' ELSE 'Out of Normal Range' END AS Albumin_Status FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) = '1982'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient AS T2 WHERE T2.SEX = 'F')) AS percentage FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.UA > 6.5 AND T2.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(T1.UA) FROM Laboratory AS T1 WHERE T1.UA <= 8.0 AND T1.Date = (SELECT MAX(Date) FROM Laboratory WHERE ID = T1.ID)\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN <= 30\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'RA' AND T2.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRE >= 1.5 AND T2.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN SUM(CASE WHEN T2.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END AS Result FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT T2.SEX FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.\"T-BIL\" >= 2.0 GROUP BY T2.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T2.\"T-CHO\" FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"T-CHO\" = (SELECT MAX(\"T-CHO\") FROM Laboratory) ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', Birthday)) FROM Patient WHERE SEX = 'M' AND ID IN (SELECT ID FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T2.ID, T2.Diagnosis FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE T1.TG > 200\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG >= 200 AND STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Admission = '-' AND T1.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK > 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT T1.ID, T2.SEX, STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.Birthday) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GLU >= 180 AND T1.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT T1.ID, T2.GLU FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Description) = '1991' AND T2.GLU < 180\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.WBC < 3.5 OR L.WBC > 9.0 ORDER BY P.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT T2.ID, T2.Diagnosis, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.Birthday)) AS age FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday) >= 50 AND (T2.RBC < 3.5 OR T2.RBC > 6.0)\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT T1.ID, T2.SEX FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Admission = '-' AND T1.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T2.ID, T2.SEX FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T1.HGB BETWEEN 10 AND 17 AND T2.Birthday = (SELECT MAX(T3.Birthday) FROM Patient AS T3 INNER JOIN Laboratory AS T4 ON T3.ID = T4.ID WHERE T3.Diagnosis = 'SLE' AND T4.HGB BETWEEN 10 AND 17)\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT T1.ID, (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT < 29 OR T2.HCT > 52 GROUP BY T1.ID HAVING COUNT(T2.HCT) >= 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE HCT < 29 AND STRFTIME('%Y', Date) = '1991'\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(CASE WHEN PLT < 100 THEN 1 END) AS Lower_Than_Normal, COUNT(CASE WHEN PLT > 400 THEN 1 END) AS Higher_Than_Normal FROM Laboratory WHERE PLT < 100 OR PLT > 400\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT T2.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.PLT BETWEEN 100 AND 400 AND T2.Birthday > '1934-01-01' AND T1.Date LIKE '1984%'\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (COUNT(L.ID) * 100.0 / NULLIF((SELECT COUNT(*) FROM Patient WHERE STRFTIME('%Y', 'now') - STRFTIME('%Y', Birthday) > 55), 0)) AS percentage  FROM Laboratory AS L  INNER JOIN Patient AS P ON L.ID = P.ID  WHERE P.SEX = 'F' AND L.PT >= 14  AND STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) > 55\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` > '1992-12-31' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Laboratory AS L ON E.`Examination Date` = L.`Date` WHERE E.`Examination Date` > '1997-01-01' AND L.PT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.APTT >= 45 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.WBC BETWEEN 3.5 AND 9.0 AND (T1.FG < 150 OR T1.FG > 450) AND T2.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1980-01-01' AND (T2.FG < 150 OR T2.FG > 450)\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"U-PRO\" > '0'\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > '0' AND T2.`U-PRO` < '30' AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(ID) FROM Laboratory WHERE IGG > 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGG BETWEEN 900 AND 2000 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 ORDER BY T2.IGA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 AND T1.`First Date` > '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE IGM < 40 OR IGM > 400) GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRP >= '1.0' AND T2.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRE >= 1.5 AND STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.Birthday) < 70\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.RA = '-' AND (T2.KCT = '+' OR T2.LAC = '+' OR T2.RVVT = '+')\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1985-01-01' AND T2.RA = '-'\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.RF NOT LIKE '%>%' AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.C3 > 35 AND T2.\"ANA Pattern\" = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT < 29 OR T2.HCT > 52 ORDER BY GREATEST(T1.\"aCL IgA\", T1.\"aCL IgM\", T1.\"aCL IgG\") DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 WHERE T1.C4 > 10 AND T1.ID IN (SELECT T2.ID FROM Examination AS T2)\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP = 'negative' AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT T2.Birthday FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.RNP NOT IN ('negative', '0') ORDER BY T2.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SM = '0' AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT T2.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SC170 NOT IN ('0', '1', 'negative', '2', '8') ORDER BY T2.Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` > '1997-01-01' AND T2.SC170 IN ('0', 'negative')\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID LEFT JOIN Examination AS E ON P.ID = E.ID WHERE L.SC170 = 'negative' AND P.SEX = 'F' AND E.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SSA IN ('0', 'negative') AND T2.`First Date` < '2000-01-01'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('0', 'negative') ORDER BY T1.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN ('0', 'negative') AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE (T1.SSB IS NULL OR T1.SSB NOT IN ('0', 'negative', '1', '32', '8')) AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CENTROMEA IN ('negative', '0') AND L.SSB IN ('negative', '0') AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.DNA < 8 AND P.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG BETWEEN 900 AND 2000 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (COUNT(L.ID) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE')) AS percentage FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.GOT > 60 AND P.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT > 60\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT < 60 ORDER BY T1.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT < 60 AND T2.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT T1.Description FROM Patient AS T1 WHERE T1.ID = (SELECT T2.ID FROM Laboratory AS T2 WHERE T2.LDH < 500 ORDER BY T2.LDH DESC LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Date) FROM Laboratory WHERE LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP >= 300 AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T2.Diagnosis FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP BETWEEN 6.0 AND 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT T1.`Examination Date` FROM `Examination` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.ID = T2.ID WHERE T2.ALB = (SELECT MAX(ALB) FROM `Laboratory` WHERE ALB BETWEEN 3.5 AND 5.5)\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.ALB BETWEEN 3.5 AND 5.5 AND L.TP BETWEEN 6.0 AND 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT T3.`aCL IgA`, T3.`aCL IgM`, T3.`aCL IgG` FROM Examination AS T3 INNER JOIN Laboratory AS T2 ON T3.ID = T2.ID INNER JOIN Patient AS T1 ON T3.ID = T1.ID WHERE T1.SEX = 'F' AND T2.UA = (SELECT MAX(UA) FROM Laboratory WHERE UA BETWEEN 3.5 AND 7.2)\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(T1.ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CRE < 1.5 AND (CASE WHEN T3.\"aCL IgG\" >= T3.\"aCL IgA\" AND T3.\"aCL IgG\" >= T3.\"aCL IgM\" THEN T3.\"aCL IgG\" WHEN T3.\"aCL IgA\" >= T3.\"aCL IgG\" AND T3.\"aCL IgA\" >= T3.\"aCL IgM\" THEN T3.\"aCL IgA\" ELSE T3.\"aCL IgM\" END) = (SELECT MAX(CASE WHEN \"aCL IgG\" >= \"aCL IgA\" AND \"aCL IgG\" >= \"aCL IgM\" THEN \"aCL IgG\" WHEN \"aCL IgA\" >= \"aCL IgG\" AND \"aCL IgA\" >= \"aCL IgM\" THEN \"aCL IgA\" ELSE \"aCL IgM\" END) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` > 2.0 AND T2.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT T2.ANA FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory WHERE `T-BIL` < 2.0 AND `T-BIL` IS NOT NULL)\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` >= 250 AND (T2.RVVT = '-' OR T2.KCT = '-' OR T2.LAC = '-')\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` < 250 AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.TG < 200 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG < 200 ORDER BY T1.TG DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 0 AND T2.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CPK < 250 AND (T2.LAC = '+' OR T2.KCT = '+' OR T2.RVVT = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GLU >= 180 ORDER BY T2.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.GLU < 180 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC > 3.5 AND T2.WBC < 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC < 3.5 OR T2.RBC > 6.0) AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.PLT FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Diagnosis = 'MCTD'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(T1.PT) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2 AND T1.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT first_name || ' ' || last_name FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'Art and Design Department')\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT T1.phone FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'Women''s Soccer' AND M.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT link_to_event FROM attendance GROUP BY link_to_event ORDER BY COUNT(link_to_member) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT T3.event_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.last_name = 'Harrison' AND T2.member_id = (SELECT member_id FROM member WHERE last_name = 'Harrison' AND first_name = 'Sacha') AND T3.event_date LIKE '2019%'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(DISTINCT E.event_id) FROM event AS E INNER JOIN attendance AS A ON E.event_id = A.link_to_event WHERE E.type = 'Meeting' GROUP BY A.link_to_event HAVING COUNT(A.link_to_member) > 10\t----- bird -----\tstudent_club",
    "1323": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20 AND T1.event_id NOT IN (SELECT T3.income_id FROM income AS T3 WHERE T3.source = 'Fundraising')\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM (SELECT COUNT(link_to_member) AS attendance_count FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_date LIKE '2020%' GROUP BY T1.link_to_event)\t----- bird -----\tstudent_club",
    "1325": "SELECT MAX(cost) FROM expense;\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Tyler' AND T2.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT T1.amount FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(spent) FROM budget WHERE category = 'Food' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Meeting')\t----- bird -----\tstudent_club",
    "1333": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name || ' ' || T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T3.category = 'Advertisement' AND T4.event_name = 'September Meeting' AND T2.member_id LIKE 'Student_Club_%'\t----- bird -----\tstudent_club",
    "1336": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.last_name IN ('Pierce', 'Guidi')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(T1.amount) FROM budget AS T1 WHERE T1.link_to_event = (SELECT T2.event_id FROM event AS T2 WHERE T2.event_name = 'October Speaker')\t----- bird -----\tstudent_club",
    "1338": "SELECT COUNT(*) = 0 FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T1.expense_date = '2019-10-08' AND T1.approved IS NULL\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(e.cost) FROM expense AS e INNER JOIN member AS m ON e.link_to_member = m.member_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND (e.expense_date LIKE '2019-09%' OR e.expense_date LIKE '2019-10%')\t----- bird -----\tstudent_club",
    "1340": "SELECT      (SUM(CASE WHEN STRFTIME('%Y', E.event_date) = '2020' THEN B.spent ELSE 0 END) -      SUM(CASE WHEN STRFTIME('%Y', E.event_date) = '2019' THEN B.spent ELSE 0 END)) AS difference FROM budget AS B  INNER JOIN event AS E ON B.link_to_event = E.event_id;\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food')\t----- bird -----\tstudent_club",
    "1344": "SELECT T1.notes FROM income AS T1 WHERE T1.source = 'Fundraising' AND T1.date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O''Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(T1.budget_id) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT T2.status FROM event AS T2 INNER JOIN budget AS T1 ON T2.event_id = T1.link_to_event INNER JOIN expense AS T3 ON T1.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Post Cards, Posters' AND T3.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T1.expense_date FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton'\t----- bird -----\tstudent_club",
    "1358": "SELECT T2.last_name, T2.first_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.source = 'Dues' ORDER BY T1.date_received ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM budget AS B1 WHERE B1.amount > (SELECT B2.amount FROM budget AS B2 WHERE B2.link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting') AND B2.category = 'Advertisement') AND B1.link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff') AND B1.category = 'Advertisement'\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(CASE WHEN b.category = 'Parking' THEN b.amount ELSE 0 END) / SUM(b.amount)) * 100 AS Percentage FROM budget AS b WHERE b.link_to_event IN (SELECT e.event_id FROM event AS e WHERE e.event_name = 'November Speaker')\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T2.cost FROM expense AS T2 WHERE link_to_budget = (SELECT budget_id FROM budget ORDER BY remaining ASC LIMIT 1)\t----- bird -----\tstudent_club",
    "1366": "SELECT T1.link_to_member FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major GROUP BY T1.college ORDER BY COUNT(T2.member_id) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_id FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT link_to_event FROM budget ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.expense_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(T2.link_to_event) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T1.phone = '954-555-6240'\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.member_id FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_id, (T2.spent / T2.amount) AS ratio FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY ratio DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(member_id) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020';\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT T2.member_id FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T2.member_id HAVING COUNT(T1.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT DISTINCT T1.member_id FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.major_name = 'Interior Design' AND T4.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT T1.member_id FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(T1.income_id) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Grant'\t----- bird -----\tstudent_club",
    "1385": "SELECT T2.member_id FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1387": "SELECT T4.first_name FROM member AS T4 INNER JOIN expense AS T3 ON T4.member_id = T3.link_to_member INNER JOIN budget AS T2 ON T3.link_to_budget = T2.budget_id INNER JOIN event AS T1 ON T2.link_to_event = T1.event_id WHERE T1.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT T2.first_name || ' ' || T2.last_name AS full_name, T1.source FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount = (SELECT MAX(amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT T2.link_to_event FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.cost = (SELECT MIN(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(T1.cost) / (SELECT SUM(T2.cost) FROM expense AS T2)) * 100 AS percentage FROM expense AS T1 INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T4.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1391": "SELECT (COUNT(CASE WHEN MA.major_name = 'Finance' THEN 1 END) * 1.0 / COUNT(CASE WHEN MA.major_name = 'Physics' THEN 1 END)) AS ratio FROM member AS M INNER JOIN major AS MA ON M.link_to_major = MA.major_id\t----- bird -----\tstudent_club",
    "1392": "SELECT source, SUM(amount) FROM income WHERE date_received LIKE '2019-09%' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT last_name, email FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND T1.event_date LIKE '2019%'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.link_to_event), T2.link_to_major FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1398": "SELECT T2.event_id FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' ORDER BY T1.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1399": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1400": "SELECT (COUNT(CASE WHEN type = 'Community Service' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM event WHERE STRFTIME('%Y', event_date) = '2019'\t----- bird -----\tstudent_club",
    "1401": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Posters' AND T3.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.event_status = 'Closed' AND T2.remaining < 0 ORDER BY ABS(T2.remaining) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT T1.expense_description, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.approved = 'true' AND T3.event_name = 'October Meeting' GROUP BY T1.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'April Speaker' ORDER BY T1.amount ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(amount) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, amount FROM budget WHERE LOWER(category) = 'advertising' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, SUM(T2.cost) AS total_cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v'\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison');\t----- bird -----\tstudent_club",
    "1412": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT T1.zip FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.t_shirt_size = 'Medium' AND T2.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (COUNT(T1.member_id) * 100.0 / (SELECT COUNT(*) FROM member)) AS percentage FROM member AS T1 WHERE T1.link_to_major IN (SELECT T2.major_id FROM major AS T2 WHERE T2.major_name = 'Business')\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(member_id) FROM member WHERE t_shirt_size = 'Extra Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT T1.city, T1.state FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T3.department = 'Electrical and Computer Engineering Department'\t----- bird -----\tstudent_club",
    "1429": "SELECT T3.event_name FROM event AS T3 INNER JOIN attendance AS T2 ON T3.event_id = T2.link_to_event INNER JOIN member AS T1 ON T2.link_to_member = T1.member_id WHERE T3.type = 'Social' AND T1.position = 'Vice President' AND T3.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM member AS T2 INNER JOIN expense AS T1 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT (COUNT(CASE WHEN T1.amount = 50 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT zip_code FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T2.link_to_event FROM attendance AS T2 INNER JOIN expense AS T1 ON T1.link_to_member = T2.link_to_member GROUP BY T2.link_to_member HAVING SUM(T1.cost) > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T1.link_to_member, T2.link_to_event FROM expense AS T1 INNER JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member WHERE T1.approved = 'true'\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT T1.email FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > 20 AND T2.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Education & Human Services' AND T2.major_id LIKE '%education%'\t----- bird -----\tstudent_club",
    "1442": "SELECT (SUM(CASE WHEN spent > amount THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT event.event_id)) AS percentage FROM budget INNER JOIN event ON budget.link_to_event = event.event_id\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_id FROM expense WHERE cost > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name || ' ' || last_name AS full_name FROM member WHERE t_shirt_size = 'extra large'\t----- bird -----\tstudent_club",
    "1446": "SELECT (COUNT(CASE WHEN type = 'PO Box' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT T2.event_name, T2.location FROM event AS T2 INNER JOIN budget AS T1 ON T1.link_to_event = T2.event_id WHERE T1.spent < T1.amount\t----- bird -----\tstudent_club",
    "1448": "SELECT T2.event_name, T2.event_date FROM event AS T2 INNER JOIN budget AS T1 ON T2.event_id = T1.link_to_event INNER JOIN expense AS T3 ON T1.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT T1.first_name, T1.last_name, T3.major_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T2.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT Z.city, Z.county FROM zip_code AS Z INNER JOIN member AS M ON Z.zip_code = M.zip INNER JOIN income AS I ON M.member_id = I.link_to_member INNER JOIN attendance AS A ON I.link_to_member = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id GROUP BY E.event_id, Z.city, Z.county HAVING COUNT(I.income_id) > 40\t----- bird -----\tstudent_club",
    "1451": "SELECT T1.link_to_member, SUM(T1.cost) FROM expense AS T1 GROUP BY T1.link_to_member HAVING COUNT(T1.expense_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position <> 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT T2.event_name FROM event AS T2 INNER JOIN budget AS T1 ON T1.link_to_event = T2.event_id INNER JOIN expense AS T3 ON T1.budget_id = T3.link_to_budget WHERE T3.cost < (SELECT AVG(cost) FROM expense WHERE LOWER(expense_description) = 'parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(CASE WHEN T3.type = 'Meeting' THEN T1.cost ELSE 0 END) / SUM(T1.cost)) * 100 AS percentage FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id\t----- bird -----\tstudent_club",
    "1455": "SELECT T1.budget_id, T1.amount FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE LOWER(T2.expense_description) IN ('water', 'chips', 'cookies') ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1456": "SELECT T1.last_name, SUM(T2.cost) AS total_spending FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id ORDER BY total_spending DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT ((SELECT COUNT(*) FROM member AS M INNER JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE Z.state = 'New Jersey') * 1.0 / (SELECT COUNT(*) FROM member)) - ((SELECT COUNT(*) FROM member AS M INNER JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE Z.state = 'Vermont') * 1.0 / (SELECT COUNT(*) FROM member))\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE LOWER(T1.expense_description) IN ('water', 'veggie tray', 'supplies')\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT T1.last_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT T1.last_name, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT T2.event_name, SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Speaker Gifts' GROUP BY T2.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.last_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') * 1.0 / (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK')\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Date LIKE '2012%' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date LIKE '2013%'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT T2.CustomerID, SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date LIKE '2011%' GROUP BY T2.CustomerID ORDER BY SUM(T1.Consumption) DESC\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Consumption < 30000 AND T2.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT      SUM(CASE WHEN C.Currency = 'CZK' THEN Y.Consumption ELSE 0 END) -      SUM(CASE WHEN C.Currency = 'EUR' THEN Y.Consumption ELSE 0 END) AS ConsumptionDifference FROM      yearmonth AS Y  INNER JOIN      customers AS C ON Y.CustomerID = C.CustomerID  WHERE      Y.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT SUBSTR(T1.Date, 1, 4) AS year, SUM(Consumption) AS total_consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY SUBSTR(T1.Date, 1, 4) ORDER BY SUM(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM (SELECT C.Segment, SUM(Y.Consumption) AS TotalConsumption FROM customers AS C INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID GROUP BY C.Segment) AS SubQuery ORDER BY TotalConsumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT STRFTIME('%Y', T1.Date) AS Year, SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT T1.Date, SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date LIKE '2013%' GROUP BY T1.Date ORDER BY SUM(T1.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1481": "WITH AverageConsumption AS (     SELECT          C.Segment,         AVG(Y.Consumption) AS AvgConsumption     FROM yearmonth AS Y     INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID     WHERE Y.Date LIKE '2013%' AND C.Currency = 'CZK'     GROUP BY C.Segment ) SELECT      (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'SME') -      (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'LAM') AS SME_LAM_Difference,     (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'LAM') -      (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'KAM') AS LAM_KAM_Difference,     (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'KAM') -      (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'SME') AS KAM_SME_Difference\t----- bird -----\tdebit_card_specializing",
    "1482": "WITH ConsumptionIncrease AS ( SELECT C.Segment, (SUM(CASE WHEN Y.Date LIKE '2013%' THEN Y.Consumption ELSE 0 END) - SUM(CASE WHEN Y.Date LIKE '2012%' THEN Y.Consumption ELSE 0 END)) / NULLIF(SUM(CASE WHEN Y.Date LIKE '2012%' THEN Y.Consumption ELSE 0 END), 0) * 100 AS PercentageIncrease FROM customers AS C INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE C.Currency = 'EUR' AND (Y.Date LIKE '2012%' OR Y.Date LIKE '2013%') GROUP BY C.Segment ) SELECT Segment, PercentageIncrease FROM ConsumptionIncrease ORDER BY PercentageIncrease DESC LIMIT 1 UNION ALL SELECT Segment, PercentageIncrease FROM ConsumptionIncrease ORDER BY PercentageIncrease ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount') - (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount')\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (MAX(CASE WHEN CustomerID = 7 THEN Consumption END) - MAX(CASE WHEN CustomerID = 5 THEN Consumption END)) AS ConsumptionDifference  FROM yearmonth  WHERE Date = '201304';\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS difference FROM customers WHERE Segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T2.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T2.Currency = 'EUR' AND T1.Date LIKE '201310%' ORDER BY T1.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T2.CustomerID, MAX(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' GROUP BY T2.CustomerID ORDER BY MAX(T1.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Date LIKE '201305%'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (COUNT(T2.CustomerID) * 100.0 / COUNT(T1.CustomerID)) AS percentage FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'KAM')) AS percentage FROM customers WHERE Segment = 'KAM' AND Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (COUNT(DISTINCT CASE WHEN Consumption > 528.3 THEN CustomerID END) * 100.0 / COUNT(DISTINCT CASE WHEN Date = '201202' THEN CustomerID END)) AS percentage FROM yearmonth WHERE Date = '201202'\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM gasstations WHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM transactions_1k WHERE Date = '201309' GROUP BY CustomerID ORDER BY SUM(Amount * Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT C.Segment, SUM(T.Amount) FROM customers AS C INNER JOIN transactions_1k AS T ON C.CustomerID = T.CustomerID WHERE T.Date BETWEEN '2013-09-01' AND '2013-09-30' GROUP BY C.Segment ORDER BY SUM(T.Amount) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date = '201206' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT Description FROM products;\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date >= '2013-06-01' AND T2.Date <= '2013-06-30'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT T2.ChainID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.GasStationID = T3.CustomerID WHERE T3.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT DISTINCT T2.Description FROM products AS T2 INNER JOIN yearmonth AS T1 ON T2.ProductID = T1.CustomerID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Amount * Price) FROM transactions_1k WHERE STRFTIME('%Y-%m', Date) = '2012-01'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.TransactionID = T3.ProductID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Price > 1000 AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date > '2012-01-01' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(T2.Price) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID, SUM(Price * Amount) AS TotalPayment FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY TotalPayment DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' ORDER BY T2.TransactionID ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT Currency FROM customers WHERE Currency IS NOT NULL;\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T2.Segment FROM customers AS T2 INNER JOIN transactions_1k AS T1 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-23'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.TransactionID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date = '2012-08-26' AND T1.Time < '12:00:00'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT CustomerID FROM transactions_1k ORDER BY Date ASC LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT G.Country FROM transactions_1k AS T INNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID WHERE T.Date = '2012-08-24' AND T.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT T1.Date, T1.Amount FROM transactions_1k AS T1 WHERE T1.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Amount = 124.05 AND Date = '2012-08-24') AND T1.Date BETWEEN '2012-01-01' AND '2012-01-31'\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(TransactionID) FROM transactions_1k WHERE Time BETWEEN '08:00:00' AND '09:00:00' AND Date = '2012-08-26'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT Currency FROM customers WHERE CustomerID = (SELECT CustomerID FROM customers WHERE Currency IS NOT NULL LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT Country FROM gasstations WHERE GasStationID = 667467\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT nationality FROM customers WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-24' AND Price = 548.4)\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (COUNT(DISTINCT T1.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25')) AS percentage FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END) * 100 AS DecreaseRate FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25') AND (Date LIKE '2012%' OR Date LIKE '2013%')\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID, SUM(Price) AS TotalRevenue FROM transactions_1k GROUP BY GasStationID ORDER BY TotalRevenue DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) * 100.0 / COUNT(GasStationID)) AS percentage FROM gasstations WHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Amount) AS TotalSpent, SUM(CASE WHEN Date BETWEEN '2012-01-01' AND '2012-01-31' THEN Amount ELSE 0 END) AS JanuarySpent FROM transactions_1k WHERE CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT ProductID, COUNT(*) AS SalesCount FROM transactions_1k GROUP BY ProductID ORDER BY SalesCount DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T2.CustomerID, AVG(T1.Price) AS AveragePrice, T2.Currency  FROM transactions_1k AS T1  INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID  WHERE T1.CustomerID = (SELECT CustomerID FROM (SELECT CustomerID, SUM(Amount * Price) AS TotalSpent FROM transactions_1k GROUP BY CustomerID ORDER BY TotalSpent DESC LIMIT 1))  GROUP BY T2.CustomerID\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Price = (SELECT MAX(Price) FROM transactions_1k WHERE ProductID = 2)\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T2.CustomerID, T2.Consumption FROM yearmonth AS T2 INNER JOIN transactions_1k AS T1 ON T1.CustomerID = T2.CustomerID WHERE T1.Price > 29.00 AND T1.ProductID = 5 AND T2.Date = '201208'\t----- bird -----\tdebit_card_specializing"
}