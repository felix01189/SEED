{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM `frpm` WHERE `County Name` = 'Alameda';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT T1.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SOCType = 'Continuation High Schools' ORDER BY T1.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT Zip FROM schools WHERE Charter = 1 AND County = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT schools.MailStreet FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE FundingType = 'Directly funded' AND Charter = 1 AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T1.sname FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 500 AND T2.Magnet = 1\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.Phone FROM schools s INNER JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT T1.NumTstTakr  FROM satscores AS T1  INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode  WHERE T2.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath > 560 AND T1.FundingType = 'Directly funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT frpm.\"FRPM Count (Ages 5-17)\" FROM frpm INNER JOIN satscores ON satscores.cds = frpm.CDSCode WHERE satscores.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "11": "SELECT schools.CDSCode FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.\"Enrollment (K-12)\" > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(frpm.`Percent (%) Eligible Free (Ages 5-17)`)  FROM satscores  INNER JOIN frpm ON satscores.cds = frpm.CDSCode  WHERE (satscores.NumGE1500 * 1.0 / satscores.NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY (T1.NumGE1500 / T1.NumTstTakr) DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT T2.NCESSchool FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.\"Enrollment (Ages 5-17)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T2.District FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.StatusType = 'Active' GROUP BY T2.District ORDER BY AVG(T1.AvgScrRead) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Merged' AND T1.District LIKE '%Alameda%' AND T2.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT T1.AvgScrWrite, T2.CharterNum FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite > 499 ORDER BY T1.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno' AND T1.FundingType = 'Directly funded' AND T2.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT s.Phone FROM schools AS s INNER JOIN satscores AS sc ON s.CDSCode = sc.cds ORDER BY sc.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T2.`Free Meal Count (K-12)` > 500 AND T2.`FRPM Count (K-12)` < 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT sname FROM satscores WHERE cname = 'Contra Costa' ORDER BY NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT T2.School, T2.Street FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE ABS(T1.\"Enrollment (K-12)\" - T1.\"Enrollment (Ages 5-17)\") > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT T1.\"School Name\" FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.\"Percent (%) Eligible Free (K-12)\" > 0.1 AND T2.NumGE1500 > 0\t----- bird -----\tcalifornia_schools",
    "25": "SELECT T1.School, T1.FundingType FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.City = 'Riverside' AND T2.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "26": "SELECT T2.\"School Name\", T2.Street, T2.City, T2.Zip, T2.Phone FROM schools AS T2 INNER JOIN frpm AS T1 ON T2.CDSCode = T1.CDSCode WHERE T1.\"School Type\" = 'High Schools (Public)' AND T2.County = 'Monterey' AND T1.\"FRPM Count (Ages 5-17)\" > 800\t----- bird -----\tcalifornia_schools",
    "27": "SELECT schools.School, AVG(satscores.AvgScrWrite) AS average_score, schools.Phone FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.OpenDate > '1991-12-31' OR schools.ClosedDate < '2000-01-01' GROUP BY schools.School, schools.Phone\t----- bird -----\tcalifornia_schools",
    "28": "SELECT DISTINCT S.School, S.DOCType  FROM frpm AS F  INNER JOIN schools AS S ON F.CDSCode = S.CDSCode  WHERE S.FundingType = 'Locally funded'  AND (F.`Enrollment (K-12)` - F.`Enrollment (Ages 5-17)`) >      (SELECT AVG(F1.`Enrollment (K-12)` - F1.`Enrollment (Ages 5-17)`)       FROM frpm AS F1       INNER JOIN schools AS S1 ON F1.CDSCode = S1.CDSCode       WHERE S1.FundingType = 'Locally funded')\t----- bird -----\tcalifornia_schools",
    "29": "SELECT OpenDate FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.GSserved = 'K-12' AND T2.`Enrollment (K-12)` = (SELECT MAX(`Enrollment (K-12)`) FROM frpm WHERE CDSCode IN (SELECT CDSCode FROM schools WHERE GSserved = 'K-12'))\t----- bird -----\tcalifornia_schools",
    "30": "SELECT schools.City, frpm.`Enrollment (K-12)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`Enrollment (K-12)` ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "WITH RankedSchools AS (     SELECT `Percent (%) Eligible Free (K-12)`, `Enrollment (K-12)`,            ROW_NUMBER() OVER (ORDER BY `Enrollment (K-12)` DESC) AS rank     FROM frpm ) SELECT `Percent (%) Eligible Free (K-12)` FROM RankedSchools WHERE rank IN (10, 11);\t----- bird -----\tcalifornia_schools",
    "32": "SELECT frpm.`Percent (%) Eligible FRPM (K-12)`  FROM frpm  INNER JOIN schools ON frpm.CDSCode = schools.CDSCode  WHERE schools.SOC = '66' AND frpm.`Low Grade` >= '1' AND frpm.`High Grade` <= '12'  ORDER BY frpm.`FRPM Count (K-12)` DESC  LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T2.Website, T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT frpm.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Kacey' AND schools.AdmLName1 = 'Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T1.AdmEmail1 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Charter = 1 ORDER BY T2.enroll12 ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT CONCAT(AdmFName1, ' ', AdmLName1) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT T1.Street, T1.City, T1.Zip, T1.State  FROM schools AS T1  INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds  WHERE T2.NumTstTakr > 0  ORDER BY (T2.NumGE1500 * 1.0 / T2.NumTstTakr) ASC  LIMIT 1\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T2.Website FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T1.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Fresno' AND T2.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.District = 'Fresno Unified' AND T2.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores AS T3 INNER JOIN schools AS T4 ON T3.cds = T4.CDSCode WHERE T4.District = 'Fresno Unified')\t----- bird -----\tcalifornia_schools",
    "41": "WITH RankedSchools AS (     SELECT T1.School, T1.County, T2.AvgScrRead, RANK() OVER (PARTITION BY T1.County ORDER BY T2.AvgScrRead DESC) AS Rank     FROM schools AS T1     INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds     WHERE T1.Virtual IN ('F', 'V', 'P') ) SELECT School FROM RankedSchools WHERE Rank <= 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T2.EdOpsName FROM schools AS T2 INNER JOIN satscores AS T1 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "43": "SELECT T1.AvgScrMath, T2.County FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath IS NOT NULL AND T1.AvgScrRead IS NOT NULL AND T1.AvgScrWrite IS NOT NULL GROUP BY T2.School, T2.County ORDER BY (T1.AvgScrMath + T1.AvgScrRead + T1.AvgScrWrite) / 3 ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(T1.AvgScrWrite), T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T2.School, T1.AvgScrWrite FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich'\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T1.`School Name` FROM frpm AS T1 WHERE T1.`School Type` = 'State Special Schools' AND T1.`Enrollment (K-12)` = (SELECT MAX(`Enrollment (K-12)`) FROM frpm WHERE `School Type` = 'State Special Schools')\t----- bird -----\tcalifornia_schools",
    "47": "SELECT AVG(monthly_count) FROM (SELECT COUNT(*) AS monthly_count FROM schools WHERE County = 'Alameda' AND DOCType = 'Elementary School District' AND strftime('%Y', OpenDate) = '1980' GROUP BY strftime('%m', OpenDate))\t----- bird -----\tcalifornia_schools",
    "48": "SELECT (SELECT COUNT(*) FROM schools WHERE DOCType = 'Unified School District' AND StatusType = 'Merged' AND County = 'Orange') * 1.0 / (SELECT COUNT(*) FROM schools WHERE DOCType = 'Elementary School District' AND StatusType = 'Merged') AS ratio\t----- bird -----\tcalifornia_schools",
    "49": "SELECT `School`, `ClosedDate`  FROM `schools`  WHERE `County` = (SELECT `County`                    FROM `schools`                    WHERE `StatusType` = 'Closed'                    GROUP BY `County`                    ORDER BY COUNT(`School`) DESC                    LIMIT 1)  AND `StatusType` = 'Closed'\t----- bird -----\tcalifornia_schools",
    "50": "SELECT T2.Street, T2.School  FROM (SELECT AvgScrMath, cds FROM satscores ORDER BY AvgScrMath DESC LIMIT 1 OFFSET 6) AS T1  INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T1.MailStreet, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores WHERE AvgScrRead IS NOT NULL);\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(T2.CDSCode) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 > 0 AND T2.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT COUNT(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END), 0) AS ratio FROM schools WHERE MailState = 'CA'\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active' AND City = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "57": "WITH RankedScores AS (SELECT AvgScrWrite, cds, ROW_NUMBER() OVER (ORDER BY AvgScrWrite DESC) AS Rank FROM satscores) SELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN RankedScores AS T2 ON T1.CDSCode = T2.cds WHERE T2.Rank = 333\t----- bird -----\tcalifornia_schools",
    "58": "SELECT T1.Phone, T1.Ext, T1.School FROM schools AS T1 WHERE T1.Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE ((AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName2 = 'Mike' AND AdmLName2 = 'Larson')) OR ((AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez') OR (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez'))\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND City = 'Hickman' AND District LIKE '%Elementary School District%'\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 0 AND T1.County = 'Los Angeles' AND T2.\"Percent (%) Eligible Free (K-12)\" < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT T1.AdmFName1, T1.AdmLName1, T1.School, T1.City FROM schools AS T1 WHERE T1.Charter = 1 AND T1.CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(CASE WHEN FundingType = 'Locally funded' THEN 1 END) * 100.0 / COUNT(*)) AS ratio FROM schools WHERE County = 'Santa Clara'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND FundingType = 'Directly funded' AND County = 'Stanislaus'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE DOCType = 'Community College District' AND STRFTIME('%Y', ClosedDate) = '1989' AND City = 'San Francisco';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(ClosedDate) AS ClosureCount FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOC = '11' GROUP BY County ORDER BY ClosureCount DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE DOCType = 'State Special Schools' AND SOC IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE (StatusType = 'Active' OR StatusType = 'Closed') AND SOCType = 'District Community Day Schools' AND County = 'Alpine'\t----- bird -----\tcalifornia_schools",
    "71": "SELECT frpm.`District Code` FROM `schools` INNER JOIN frpm ON schools.`District` = frpm.`District Name` WHERE schools.`Magnet` = 0 AND schools.`City` = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM `frpm` WHERE `District Name` = 'California School for the Deaf-Fremont (State Special Schl)' AND `Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`School Type` = 'Youth Authority Facilities' AND T2.`MailStreet` = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT frpm.`Low Grade` FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`SOCType` = 'Special Education Schools (Public)' AND schools.`NCESDist` = '0613360'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T2.EILName, T1.\"School Name\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"NSLP Provision Status\" = 'Breakfast Provision 2' AND T1.\"County Code\" = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT schools.City FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.\"Low Grade\" = '9' AND frpm.\"High Grade\" = '12' AND frpm.\"NSLP Provision Status\" = 'Lunch Provision 2' AND frpm.\"County Name\" = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT T2.School, T1.`Percent (%) Eligible FRPM (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Low Grade` = 'K' AND T1.`High Grade` = '9' AND T2.County = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(GSserved) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(CDSCode) as SchoolCount  FROM schools  WHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F'  GROUP BY County  ORDER BY SchoolCount DESC  LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T1.School, T1.Latitude, T1.SOCType FROM schools AS T1 WHERE T1.Latitude = (SELECT MAX(Latitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT T1.City, T1.School, T2.`Low Grade` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.State = 'CA' AND T1.Latitude = (SELECT MIN(Latitude) FROM schools WHERE State = 'CA')\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools WHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "WITH MagnetK8Schools AS (SELECT City, COUNT(CDSCode) AS SchoolCount, COUNT(DISTINCT \"NSLP Provision Status\") AS ProvisionCount FROM schools WHERE Magnet = 1 AND GSserved = 'K-8' GROUP BY City) SELECT COUNT(*) AS TotalSchools, COUNT(DISTINCT City) AS TotalCities FROM MagnetK8Schools WHERE ProvisionCount > 1;\t----- bird -----\tcalifornia_schools",
    "84": "WITH FirstNames AS (     SELECT AdmFName1 AS FirstName, District FROM schools WHERE AdmFName1 IS NOT NULL     UNION ALL     SELECT AdmFName2 AS FirstName, District FROM schools WHERE AdmFName2 IS NOT NULL     UNION ALL     SELECT AdmFName3 AS FirstName, District FROM schools WHERE AdmFName3 IS NOT NULL ) SELECT FirstName, District FROM (     SELECT FirstName, District, COUNT(*) AS NameCount     FROM FirstNames     GROUP BY FirstName, District     ORDER BY NameCount DESC     LIMIT 2 ) AS RankedNames\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, frpm.`District Code` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.AdmLName1, T1.District, T1.County, T1.School FROM schools AS T1 WHERE T1.CharterNum = 40\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1 FROM schools WHERE AdmEmail1 IS NOT NULL AND County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND SOCType IN ('Intermediate/Middle Schools (Public)', 'Unified School District')\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores WHERE NumGE1500 >= 1500)\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague' AND T1.account_id IN (SELECT account_id FROM loan)\t----- bird -----\tfinancial",
    "91": "SELECT CASE WHEN AVG(district.A12) > AVG(district.A13) THEN '1995 has higher percentage' ELSE '1996 has higher percentage' END AS result FROM district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT T2.district_id) FROM district AS T2 INNER JOIN client AS T1 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.district_id HAVING AVG(T2.A11) > 6000 AND AVG(T2.A11) < 10000\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT A.account_id, (SELECT MAX(DI.A11) FROM district AS DI) - (SELECT MIN(DI.A11) FROM district AS DI INNER JOIN client AS C2 ON C2.district_id = DI.district_id WHERE C2.gender = 'F') AS salary_gap FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id WHERE C.gender = 'F' AND C.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') GROUP BY A.account_id;\t----- bird -----\tfinancial",
    "95": "SELECT DISTINCT A.account_id FROM account AS A INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id INNER JOIN district AS D2 ON C.district_id = D2.district_id WHERE C.birth_date = (SELECT MAX(birth_date) FROM client) AND D2.A11 = (SELECT MAX(A11) FROM district WHERE district_id IN (SELECT DISTINCT C.district_id FROM client AS C WHERE C.birth_date = (SELECT MAX(birth_date) FROM client)))\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT T1.client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'DISPONENT' AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE strftime('%Y', T1.date) = '1997' AND T2.frequency = 'POPLATEK TYDNE' AND T1.amount = (SELECT MIN(amount) FROM loan WHERE strftime('%Y', date) = '1997')\t----- bird -----\tfinancial",
    "99": "SELECT account.account_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.duration > 12 AND STRFTIME('%Y', account.date) = '1993' GROUP BY account.account_id HAVING MAX(loan.amount) = (SELECT MAX(amount) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.duration > 12 AND STRFTIME('%Y', account.date) = '1993')\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T4.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "101": "SELECT DISTINCT account_id FROM account WHERE date = (SELECT MIN(date) FROM account WHERE STRFTIME('%Y', date) = '1995')\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.amount > 3000\t----- bird -----\tfinancial",
    "103": "SELECT T3.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT account.date FROM trans INNER JOIN account ON trans.account_id = account.account_id WHERE trans.amount = 840 AND trans.date = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT T2.district_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T3.amount) FROM trans AS T3 INNER JOIN disp AS T2 ON T3.account_id = T2.account_id INNER JOIN card AS T1 ON T2.disp_id = T1.disp_id WHERE T1.issued = '1996-10-21'\t----- bird -----\tfinancial",
    "107": "SELECT T1.gender  FROM client AS T1  INNER JOIN disp AS T2 ON T1.client_id = T2.client_id  INNER JOIN account AS T3 ON T2.account_id = T3.account_id  INNER JOIN district AS T4 ON T3.district_id = T4.district_id  WHERE T1.birth_date = (SELECT MIN(T1.birth_date)                         FROM client AS T1                         INNER JOIN disp AS T2 ON T1.client_id = T2.client_id                         INNER JOIN account AS T3 ON T2.account_id = T3.account_id                         INNER JOIN district AS T4 ON T3.district_id = T4.district_id                         WHERE T4.A11 = (SELECT MAX(A11) FROM district))\t----- bird -----\tfinancial",
    "108": "SELECT MIN(T3.amount) FROM trans AS T3 INNER JOIN account AS T4 ON T3.account_id = T4.account_id INNER JOIN disp AS T2 ON T4.account_id = T2.account_id INNER JOIN client AS T1 ON T2.client_id = T1.client_id WHERE T4.date < T3.date AND T4.account_id = (SELECT T5.account_id FROM loan AS T5 ORDER BY T5.amount DESC LIMIT 1)\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "110": "SELECT T2.disp_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND T1.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1996' AND T2.A2 = 'Litomerice'\t----- bird -----\tfinancial",
    "112": "SELECT T4.A2 FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT C.birth_date  FROM client AS C  INNER JOIN disp AS D ON C.client_id = D.client_id  INNER JOIN account AS A ON D.account_id = A.account_id  INNER JOIN loan AS L ON A.account_id = L.account_id  WHERE L.amount = 98832 AND L.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id  FROM account AS T1  INNER JOIN client AS T2 ON T1.district_id = T2.district_id  INNER JOIN district AS T3 ON T2.district_id = T3.district_id  WHERE T3.A3 = 'Prague'  ORDER BY T1.date ASC  LIMIT 1\t----- bird -----\tfinancial",
    "115": "SELECT (COUNT(CASE WHEN client.gender = 'M' THEN 1 END) * 100.0 / COUNT(client.client_id))  FROM client  WHERE client.district_id = (SELECT district_id FROM district WHERE A3 = 'south Bohemia' AND A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia'));\t----- bird -----\tfinancial",
    "116": "SELECT ((balance_end.balance - balance_start.balance) / balance_start.balance) * 100 AS increase_rate  FROM    (SELECT `balance` FROM `trans` WHERE `date` = '1998-12-27' AND `account_id` = (SELECT `account_id` FROM `loan` WHERE `date` = (SELECT MIN(`date`) FROM `loan`))) AS balance_end,   (SELECT `balance` FROM `trans` WHERE `date` = '1993-03-22' AND `account_id` = (SELECT `account_id` FROM `loan` WHERE `date` = (SELECT MIN(`date`) FROM `loan`))) AS balance_start;\t----- bird -----\tfinancial",
    "117": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / NULLIF(SUM(amount), 0)) AS percentage_fully_paid FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT (COUNT(CASE WHEN loan.status = 'C' THEN 1 END) * 100.0 / NULLIF(COUNT(*), 0)) AS percentage FROM loan WHERE loan.amount < 100000\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1993' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date BETWEEN '1995-01-01' AND '2000-12-31' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "121": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT D.A2, D.A3 FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN district AS D ON A.district_id = D.district_id WHERE L.loan_id = '4990'\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT T1.loan_id, T3.A2 AS district, T3.A11 AS average_salary FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT district.A2, (district.A13 - district.A12) AS unemployment_rate_increment  FROM loan  INNER JOIN account ON loan.account_id = account.account_id  INNER JOIN district ON account.district_id = district.district_id  WHERE loan.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT      (COUNT(T1.account_id) * 100.0 / NULLIF(COUNT(T1.account_id), 0)) AS percentage FROM      account AS T1  INNER JOIN      district AS T2 ON T1.district_id = T2.district_id WHERE      T1.date BETWEEN '1993-01-01' AND '1993-12-31'     AND T2.A2 = 'Decin'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT district_id, COUNT(client_id) FROM client WHERE gender = 'F' GROUP BY district_id ORDER BY COUNT(client_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "129": "SELECT T3.A2, T1.amount FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ' AND T1.operation != 'VYBER KARTOU' AND T1.date LIKE '1996-01%' ORDER BY T1.amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT A.account_id) FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id LEFT JOIN disp AS DISP ON A.account_id = DISP.account_id WHERE D.A3 = 'south Bohemia' AND DISP.disp_id IS NULL\t----- bird -----\tfinancial",
    "131": "SELECT T2.A2 FROM district AS T2 INNER JOIN account AS T1 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status IN ('C', 'D') GROUP BY T2.A2 ORDER BY SUM(T3.amount) DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T4.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT district_id, A2 FROM district WHERE A13 = (SELECT MAX(A13) FROM district WHERE A13 IS NOT NULL);\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A16 = (SELECT MAX(A16) FROM district))\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT T1.account_id) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND T2.frequency = 'POPLATEK MESICNE' AND T1.balance < 0\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.amount >= 250000 AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status IN ('C', 'D') AND T1.district_id = 1\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id IN (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1)\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id WHERE D.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 10000 AND T1.date LIKE '1997%'\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN \"order\" AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT A.account_id FROM account AS A INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN card AS C ON D.disp_id = C.disp_id WHERE C.type = 'gold'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(monthly_avg) FROM (SELECT AVG(T1.amount) AS monthly_avg FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.operation = 'VYBER KARTOU' AND STRFTIME('%Y', T1.date) = '2021' GROUP BY STRFTIME('%m', T1.date))\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT T2.client_id FROM disp AS T2 INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN trans AS T1 ON T3.disp_id = T1.account_id WHERE T1.date LIKE '1998%' AND T1.amount < (SELECT AVG(T1.amount) FROM trans AS T1 WHERE T1.date LIKE '1998%')\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id INNER JOIN card AS T3 ON T2.account_id = T3.disp_id INNER JOIN loan AS T4 ON T2.account_id = T4.account_id WHERE T1.gender = 'F'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT A.account_id) FROM account AS A INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id INNER JOIN district AS DI ON C.district_id = DI.district_id WHERE C.gender = 'F' AND DI.A3 = 'south Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Tabor' AND T1.account_id IN (SELECT account_id FROM loan)\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT T1.type FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type != 'OWNER' AND T3.A11 > 8000 AND T3.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT A.account_id) FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE D.A3 = 'north Bohemia' AND T.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ'\t----- bird -----\tfinancial",
    "152": "SELECT AVG(T1.A15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND T2.date >= '1997-01-01'\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.type = 'classic'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT (SUM(CASE WHEN `type` = 'gold' AND `issued` < '1998-01-01' THEN 1 ELSE 0 END) * 100.0) / COUNT(CASE WHEN `type` = 'gold' THEN 1 END) AS percentage FROM `card`\t----- bird -----\tfinancial",
    "156": "SELECT c.* FROM client c INNER JOIN disp d ON c.client_id = d.client_id INNER JOIN loan l ON d.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) AND d.type = 'OWNER'\t----- bird -----\tfinancial",
    "157": "SELECT T2.A15 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.account_id = 532\t----- bird -----\tfinancial",
    "158": "SELECT T1.district_id FROM account AS T1 INNER JOIN `order` AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333\t----- bird -----\tfinancial",
    "159": "SELECT T1.* FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.operation = 'VYBER' AND T3.client_id = 3356\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account AS A INNER JOIN loan AS L ON A.account_id = L.account_id WHERE A.frequency = 'POPLATEK TYDNE' AND L.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT T3.type FROM card AS T3 INNER JOIN disp AS T2 ON T3.disp_id = T2.disp_id INNER JOIN client AS T1 ON T2.client_id = T1.client_id WHERE T1.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT T2.A3 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT district.A2 FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.A2 ORDER BY COUNT(account.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT T3.client_id FROM `order` AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.order_id = 32423\t----- bird -----\tfinancial",
    "165": "SELECT T1.* FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "167": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'junior' AND T3.issued > '1996-12-31'\t----- bird -----\tfinancial",
    "168": "SELECT (COUNT(CASE WHEN T1.gender = 'F' THEN 1 END) * 100.0 / COUNT(T1.client_id)) AS percentage  FROM client AS T1  INNER JOIN account AS T2 ON T1.district_id = T2.district_id  INNER JOIN district AS T3 ON T2.district_id = T3.district_id  WHERE T3.A11 > 10000;\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(CASE WHEN strftime('%Y', L.date) = '1997' THEN L.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount ELSE 0 END)) / NULLIF(SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount ELSE 0 END), 0)) * 100 AS growth_rate FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id WHERE C.gender = 'M' AND (strftime('%Y', L.date) = '1996' OR strftime('%Y', L.date) = '1997')\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT      (SUM(CASE WHEN A3 = 'east Bohemia' THEN A16 ELSE 0 END) -      SUM(CASE WHEN A3 = 'north Bohemia' THEN A16 ELSE 0 END)) AS difference  FROM district;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE type IN ('OWNER', 'DISPONENT') AND account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "SELECT A.frequency, T.k_symbol FROM account AS A INNER JOIN trans AS T ON A.account_id = T.account_id WHERE A.account_id = 3 AND T.amount = 3539\t----- bird -----\tfinancial",
    "174": "SELECT EXTRACT(YEAR FROM C.birth_date) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id WHERE D.client_id = 130 AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT T2.account_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'OWNER' AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT SUM(loan.amount) AS total_debt, MAX(loan.payments) AS payments_status FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 992 AND loan.status = 'D'\t----- bird -----\tfinancial",
    "177": "SELECT T1.balance, T3.gender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.client_id = 4 AND T1.trans_id = 851\t----- bird -----\tfinancial",
    "178": "SELECT T3.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(T3.amount) FROM trans AS T3 INNER JOIN disp AS T2 ON T3.account_id = T2.account_id INNER JOIN client AS T1 ON T2.client_id = T1.client_id WHERE T1.client_id = 617 AND STRFTIME('%Y', T3.date) = '1998'\t----- bird -----\tfinancial",
    "180": "SELECT C1.client_id FROM client AS C1 INNER JOIN account AS A1 ON C1.district_id = A1.district_id INNER JOIN district AS D1 ON A1.district_id = D1.district_id WHERE C1.birth_date >= '1983-01-01' AND C1.birth_date <= '1987-12-31' AND D1.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE C.gender = 'M' AND C.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T.k_symbol = 'SIPO' AND T.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Beroun' AND T1.date > '1996-12-31'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS R ON D.disp_id = R.disp_id WHERE C.gender = 'F' AND R.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT (COUNT(T1.client_id) * 100.0 / NULLIF((SELECT COUNT(*) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha')), 0)) AS proportion FROM client AS T1 WHERE T1.gender = 'F' AND T1.district_id IN (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha')\t----- bird -----\tfinancial",
    "186": "SELECT (COUNT(CASE WHEN T1.gender = 'M' AND T3.frequency = 'POPLATEK TYDNE' THEN 1 END) * 100.0 / COUNT(CASE WHEN T1.gender = 'M' THEN 1 END)) AS percentage FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id WHERE A.frequency = 'POPLATEK TYDNE' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND T2.date < '1997-01-01' AND T1.amount = (SELECT MIN(amount) FROM loan WHERE account_id IN (SELECT account_id FROM account WHERE date < '1997-01-01' AND account_id = T1.account_id))\t----- bird -----\tfinancial",
    "189": "SELECT A.account_id FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id INNER JOIN client AS C ON C.district_id = D.district_id WHERE C.gender = 'F' AND C.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND D.A11 = (SELECT MIN(avg_salary) FROM (SELECT AVG(A11) AS avg_salary FROM district GROUP BY district_id) AS avg_table)\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) FROM client AS C INNER JOIN district AS D ON C.district_id = D.district_id WHERE STRFTIME('%Y', C.birth_date) = '1920' AND D.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 24 AND T2.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'C' AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T1.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.type = 'DISPONENT'\t----- bird -----\tfinancial",
    "194": "SELECT C.client_id, (strftime('%Y', 'now') - strftime('%Y', C.birth_date)) AS age FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CD ON D.disp_id = CD.disp_id INNER JOIN loan AS L ON D.account_id = L.account_id WHERE CD.type = 'gold' AND L.account_id IS NOT NULL\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT CAST(SUM(oxygen_count) AS FLOAT) / COUNT(DISTINCT T3.molecule_id) AS average_oxygen_atoms FROM ( SELECT T2.molecule_id, COUNT(T2.atom_id) AS oxygen_count FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.element = 'o' GROUP BY T2.molecule_id ) AS T3\t----- bird -----\ttoxicology",
    "198": "SELECT (COUNT(*) * 1.0 / COUNT(DISTINCT T1.molecule_id)) AS average_single_bonded_carcinogenic_molecules  FROM bond AS T2  INNER JOIN molecule AS T1 ON T2.molecule_id = T1.molecule_id  WHERE T1.label = '+' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT (SUM(CASE WHEN element = 'c' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_of_carbon FROM atom WHERE molecule_id IN (SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '=')\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(bond_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.element != 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM (SELECT label FROM molecule ORDER BY molecule_id LIMIT 100) AS T1 WHERE T1.label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT a.element  FROM connected c  INNER JOIN atom a ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2  WHERE c.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "208": "SELECT T2.label, COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT DISTINCT T3.bond_type  FROM atom AS T1  INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id  INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id  WHERE T1.element = 'cl'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT DISTINCT T1.atom_id, C.atom_id2 FROM connected AS C INNER JOIN atom AS T1 ON C.atom_id = T1.atom_id INNER JOIN atom AS T2 ON C.atom_id2 = T2.atom_id INNER JOIN molecule AS M ON T1.molecule_id = M.molecule_id WHERE M.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT T1.label FROM molecule AS T1 WHERE NOT EXISTS (SELECT 1 FROM atom AS T2 WHERE T2.molecule_id = T1.molecule_id AND T2.element = 'sn')\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE (T1.element = 'i' OR T1.element = 's') AND T3.bond_type = '-' GROUP BY T2.molecule_id HAVING COUNT(T3.bond_id) = (SELECT COUNT(*) FROM bond WHERE molecule_id = T2.molecule_id)\t----- bird -----\ttoxicology",
    "216": "SELECT DISTINCT T1.atom_id, T1.atom_id2  FROM connected AS T1  INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id  WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT T2.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR181')\t----- bird -----\ttoxicology",
    "218": "SELECT (SUM(CASE WHEN m.label = '+' AND m.molecule_id NOT IN (SELECT DISTINCT a.molecule_id FROM atom a WHERE a.element = 'f') THEN 1 ELSE 0 END) * 100.0) / COUNT(CASE WHEN m.label = '+' THEN 1 END) AS percentage FROM molecule m\t----- bird -----\ttoxicology",
    "219": "SELECT (COUNT(T1.molecule_id) * 100.0 / (SELECT COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#')) AS percentage FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "220": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR001' AND T1.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '=' ORDER BY molecule_id ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT ROUND((COUNT(CASE WHEN bond_type = '=' THEN 1 END) * 100.0 / COUNT(*)), 5) FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND((COUNT(CASE WHEN label = '+' THEN molecule_id END) * 100.0) / COUNT(molecule_id), 3) AS percentage_carcinogenic FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND(CAST(COUNT(CASE WHEN element = 'h' THEN 1 END) AS REAL) * 100.0 / COUNT(atom_id), 4) AS percentage FROM atom WHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT bond_type FROM bond WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T2.label, T1.bond_type  FROM bond AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.molecule_id = 'TR010'  GROUP BY T1.bond_type  ORDER BY COUNT(T1.bond_type) DESC  LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT DISTINCT T2.molecule_id  FROM bond AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.bond_type = '-' AND T2.label = '-'  ORDER BY T2.molecule_id ASC  LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR009_12' OR T1.atom_id2 = 'TR009_12') AND T2.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR001_19' OR atom_id2 = 'TR001_19';\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id IN ('TRXXX_21', 'TRXXX_22', 'TRXXX_23', 'TRXXX_24', 'TRXXX_25') AND T2.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT T1.bond_id FROM bond AS T1  INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id  INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id  WHERE T3.element IN ('p', 'n')  GROUP BY T1.bond_id  HAVING COUNT(DISTINCT T3.element) = 2\t----- bird -----\ttoxicology",
    "244": "SELECT CASE WHEN M.label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM (     SELECT bond.molecule_id     FROM bond     WHERE bond.bond_type = '='     GROUP BY bond.molecule_id     ORDER BY COUNT(bond.bond_type) DESC     LIMIT 1 ) AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id\t----- bird -----\ttoxicology",
    "245": "SELECT (SUM(bond_count) * 1.0) / COUNT(*) AS average_bonds FROM (SELECT COUNT(T2.bond_id) AS bond_count FROM atom AS T1 LEFT JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i' GROUP BY T1.atom_id) AS bond_counts\t----- bird -----\ttoxicology",
    "246": "SELECT T3.bond_type, T3.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id IN (T2.atom_id, T2.atom_id2) INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.atom_id = 'TR000_45'\t----- bird -----\ttoxicology",
    "247": "SELECT T1.element FROM atom AS T1 LEFT JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.atom_id IS NULL\t----- bird -----\ttoxicology",
    "248": "SELECT DISTINCT T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#' AND T1.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "249": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id, COUNT(T2.bond_type) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY atom.element ORDER BY COUNT(atom.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'pb'\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM bond)) AS percentage FROM bond AS B INNER JOIN connected AS C ON B.bond_id = C.bond_id INNER JOIN atom AS A1 ON C.atom_id = A1.atom_id INNER JOIN atom AS A2 ON C.atom_id2 = A2.atom_id GROUP BY CONCAT(A1.element, '-', A2.element) HAVING COUNT(*) = (SELECT MAX(counts) FROM (SELECT COUNT(*) AS counts FROM bond AS B2 INNER JOIN connected AS C2 ON B2.bond_id = C2.bond_id INNER JOIN atom AS A3 ON C2.atom_id = A3.atom_id INNER JOIN atom AS A4 ON C2.atom_id2 = A4.atom_id GROUP BY CONCAT(A3.element, '-', A4.element)) AS subquery)\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND((SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) * 100, 5) AS proportion  FROM bond AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT T2.atom_id2 FROM connected AS T2 INNER JOIN atom AS T1 ON T2.atom_id = T1.atom_id WHERE T1.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T2.element) FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T1.element IN ('p', 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (COUNT(CASE WHEN T1.element = 'cl' THEN 1 END) * 100.0 / COUNT(T1.atom_id)) AS percentage  FROM atom AS T1  WHERE T1.molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-')\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR030';\t----- bird -----\ttoxicology",
    "267": "SELECT bond.bond_type FROM bond WHERE bond.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(T2.bond_id) FROM bond AS T2 INNER JOIN connected AS T1 ON T2.bond_id = T1.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T3.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT COUNT(CASE WHEN T2.label = '+' THEN 1 END) AS carcinogenic_count, COUNT(CASE WHEN T2.label = '-' THEN 1 END) AS non_carcinogenic_count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(DISTINCT T2.element) = 2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_1_8' AND (T2.element = 'cl' OR T2.element = 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.bond_type = '#' AND T1.label = '-' AND T3.element = 'c' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT (COUNT(CASE WHEN T1.element = 'cl' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_cl FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT bond.molecule_id FROM bond WHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "276": "SELECT DISTINCT T1.atom_id, T1.atom_id2  FROM connected AS T1  INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id  WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT COUNT(T1.element) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.atom_id LIKE '%_4'\t----- bird -----\ttoxicology",
    "282": "SELECT CAST(COUNT(CASE WHEN T1.element = 'h' THEN 1 END) AS FLOAT) / COUNT(T1.atom_id) AS ratio, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT DISTINCT T2.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT T2.bond_type FROM bond AS T2 INNER JOIN atom AS T1 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c'\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT `element` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `connected` WHERE `bond_id` = 'TR001_10_11') OR `atom_id` IN (SELECT `atom_id2` FROM `connected` WHERE `bond_id` = 'TR001_10_11')\t----- bird -----\ttoxicology",
    "286": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT T2.molecule_id) FROM molecule AS T2)) AS percentage_triple_bond FROM bond AS T1 WHERE T1.bond_type = '#';\t----- bird -----\ttoxicology",
    "287": "SELECT (SUM(CASE WHEN bond.bond_type = '=' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond.bond_id)) AS percent FROM bond WHERE bond.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT T1.atom_id FROM atom AS T1 WHERE T1.molecule_id BETWEEN 'TR010' AND 'TR050' AND T1.element = 'c'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR000_1_2' AND T2.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT (COUNT(DISTINCT T2.molecule_id) * 100.0 / NULLIF(total.total_count, 0)) AS percentage FROM atom AS T2 INNER JOIN molecule AS T1 ON T2.molecule_id = T1.molecule_id INNER JOIN (SELECT COUNT(DISTINCT molecule_id) AS total_count FROM molecule WHERE label = '+') AS total WHERE T1.label = '+' AND T2.element = 'h'\t----- bird -----\ttoxicology",
    "299": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR124'\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id FROM atom WHERE molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19'\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(T1.bond_id), T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T1.molecule_id = 'TR006' GROUP BY T2.label\t----- bird -----\ttoxicology",
    "304": "SELECT T1.molecule_id, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element, T2.element FROM connected AS T0 INNER JOIN atom AS T1 ON T0.atom_id = T1.atom_id INNER JOIN atom AS T2 ON T0.atom_id2 = T2.atom_id WHERE T0.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T2.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT T1.atom_id, (SELECT COUNT(DISTINCT T2.bond_type) FROM bond AS T2 WHERE T2.molecule_id = 'TR346') AS bond_count FROM atom AS T1 WHERE T1.molecule_id = 'TR346'\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.element != 's' AND T3.bond_type != '='\t----- bird -----\ttoxicology",
    "312": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT (COUNT(DISTINCT CASE WHEN T2.molecule_id IS NOT NULL THEN T1.molecule_id END) * 100.0 / COUNT(DISTINCT T1.molecule_id)) AS percentage  FROM molecule AS T1  LEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id AND T2.element = 'cl'  WHERE T1.label = '+';\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id IN (T2.atom_id, T2.atom_id2) WHERE T2.bond_id = 'TR001_3_4'\t----- bird -----\ttoxicology",
    "320": "SELECT bond.bond_type FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id = 'TR000_1' AND connected.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id IN ('TR000_2', 'TR000_4') GROUP BY T1.molecule_id HAVING COUNT(DISTINCT T1.atom_id) = 2\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT (COUNT(DISTINCT C1.atom_id) * 100.0 / COUNT(A1.atom_id)) AS percentage FROM atom AS A1 INNER JOIN connected AS C1 ON A1.atom_id = C1.atom_id INNER JOIN bond AS B1 ON C1.bond_id = B1.bond_id WHERE B1.bond_type = '-'\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'n'\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT T3.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T4 ON T2.bond_id = T4.bond_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 's' AND T4.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT T4.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T4 ON T2.atom_id = T4.atom_id WHERE T1.bond_type = '=' AND T1.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(T2.atom_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT T2.molecule_id) FROM molecule AS T2 WHERE T2.label = '+')) AS percentage FROM connected AS T3  INNER JOIN atom AS T4 ON T3.atom_id = T4.atom_id  INNER JOIN bond AS T5 ON T3.bond_id = T5.bond_id  INNER JOIN molecule AS T1 ON T4.molecule_id = T1.molecule_id  WHERE T1.label = '+' AND T5.bond_type = '#' AND T4.element = 'h'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(label) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id BETWEEN 'TR004' AND 'TR010' AND T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT T3.molecule_id) FROM molecule AS T3 INNER JOIN bond AS T2 ON T3.molecule_id = T2.molecule_id INNER JOIN connected AS T1 ON T2.bond_id = T1.bond_id INNER JOIN atom AS T4 ON T1.atom_id = T4.atom_id OR T1.atom_id2 = T4.atom_id WHERE T2.bond_type = '=' AND T4.element = 'o'\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT T1.element, T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.molecule_id = 'TR002'\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'c' AND T3.bond_type = '=' AND T1.molecule_id = 'TR012' AND T3.molecule_id = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "--error--\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor = 'borderless' AND hasFoil = 0;\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost > convertedManaCost;\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.type LIKE '%Artifact%' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*') AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T1.name, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele' AND T1.hasContentWarning = 1\t----- bird -----\tcard_games",
    "348": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Sublime Epiphany' AND T2.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T1.uuid ORDER BY COUNT(T2.id) DESC LIMIT 1\t----- bird -----\tcard_games",
    "350": "SELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Annul' AND T2.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT (COUNT(CASE WHEN language = 'Chinese Simplified' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM foreign_data;\t----- bird -----\tcard_games",
    "353": "SELECT T1.name, T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '\u221e';\t----- bird -----\tcard_games",
    "357": "SELECT DISTINCT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT ST.language  FROM cards AS C  INNER JOIN sets AS S ON C.setCode = S.code  INNER JOIN set_translations AS ST ON S.code = ST.setCode  WHERE C.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Restricted' AND T2.text IS NOT NULL\t----- bird -----\tcard_games",
    "362": "SELECT T1.text FROM rulings AS T1 WHERE T1.uuid = (SELECT uuid FROM cards WHERE name = 'Condemn')\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(T1.uuid) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Restricted' AND T2.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE type LIKE '%Phyrexian%'\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) * 1.0 / COUNT(*)) * 100 AS percentage FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'German' AND T2.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(T1.uuid) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1)) AS percentage  FROM foreign_data AS T1  INNER JOIN cards AS T2 ON T1.uuid = T2.uuid  WHERE T2.isStorySpotlight = 1 AND T1.language = 'French'\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT T1.name FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%Flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE hasFoil = 1 AND hasNonFoil = 1 AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE LOWER(duelDeck) = LOWER('duel deck a');\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT DISTINCT L.uuid, F.language  FROM legalities AS L  INNER JOIN foreign_data AS F ON L.uuid = F.uuid  WHERE L.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT T2.text FROM rulings AS T2 INNER JOIN cards AS T1 ON T2.uuid = T1.uuid WHERE T1.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(T1.uuid), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' GROUP BY T2.status\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT T1.name, T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT DISTINCT T1.* FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.type LIKE '%Artifact%' AND T1.colors LIKE '%B%'\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 1 AND (power IS NULL OR power = '*');\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power > 5;\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability LIKE '%mtgo%' AND hand = '-1';\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(uuid) FROM cards WHERE frameVersion = '1993' AND availability LIKE '%paper%' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(COALESCE(NULLIF(REPLACE(REPLACE(REPLACE(manaCost, '{', ''), '}', ''), ',', ''), ''), 0)) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT type FROM cards WHERE availability LIKE '%arena%'\t----- bird -----\tcard_games",
    "400": "SELECT setCode FROM set_translations WHERE language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT (SUM(CASE WHEN isOnlineOnly = 1 AND frameEffects LIKE '%legendary%' THEN 1 ELSE 0 END) * 100.0 / COUNT(CASE WHEN frameEffects LIKE '%legendary%' THEN 1 ELSE NULL END)) AS percentage FROM cards;\t----- bird -----\tcard_games",
    "402": "SELECT (COUNT(CASE WHEN isTextless = 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage,         GROUP_CONCAT(id) AS id_list  FROM cards  WHERE isStorySpotlight = 1\t----- bird -----\tcard_games",
    "403": "SELECT (SELECT COUNT(uuid) FROM foreign_data WHERE language = 'Spanish') * 100.0 / (SELECT COUNT(uuid) FROM cards) AS percentage, foreign_data.name FROM foreign_data WHERE language = 'Spanish'\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Portuguese (Brazil)' AND T1.block = 'Commander'\t----- bird -----\tcard_games",
    "406": "SELECT DISTINCT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.type LIKE '%Creature%' OR T1.types LIKE '%Creature%') AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German'\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%info about the triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'premodern' AND T3.text = 'This is a triggered mana ability.' AND T1.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T2.status = 'Legal' AND T1.availability LIKE '%paper%'\t----- bird -----\tcard_games",
    "411": "SELECT C.artist FROM cards AS C INNER JOIN foreign_data AS F ON C.uuid = F.uuid WHERE LOWER(F.text) = LOWER('Das perfekte Gegenmittel zu einer dichten Formation')\t----- bird -----\tcard_games",
    "412": "SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE foreign_data.language = 'French' AND cards.type LIKE '%Creature%' AND cards.layout = 'normal' AND cards.borderColor = 'black' AND cards.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2007-02-01' AND T2.text IS NOT NULL\t----- bird -----\tcard_games",
    "414": "SELECT set_translations.language FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.baseSetSize = 180 AND sets.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT (SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.uuid)) AS percentage  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE T2.format = 'commander' AND T2.status = 'Legal';\t----- bird -----\tcard_games",
    "416": "SELECT (COUNT(CASE WHEN T2.language = 'French' AND (T1.power IS NULL OR T1.power = '*') THEN T1.uuid END) * 1.0 / COUNT(CASE WHEN T1.power IS NULL OR T1.power = '*' THEN T1.uuid END)) * 100 AS percentage FROM cards AS T1 LEFT JOIN foreign_data AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "417": "SELECT (COUNT(T1.setCode) * 1.0 / (SELECT COUNT(T1.setCode) FROM set_translations AS T1 WHERE T1.language = 'Japanese')) * 100 AS percentage FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese' AND T2.type = 'expansion'\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE colors IS NOT NULL AND borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE power = '*' AND promoTypes LIKE '%arenaleague%' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT      (SELECT COUNT(*) FROM cards WHERE (text IS NULL OR text = '') AND layout = 'normal') * 1.0 /      NULLIF((SELECT COUNT(*) FROM cards WHERE layout = 'normal'), 0) AS proportion;\t----- bird -----\tcard_games",
    "425": "SELECT cards.number FROM cards WHERE cards.side IS NULL AND cards.subtypes LIKE '%Angel%' AND cards.subtypes LIKE '%Wizard%'\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL ORDER BY sets.name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Archenemy' AND T2.code = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T1.language, T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.id WHERE T2.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT T2.id, T2.name FROM sets AS T2 INNER JOIN set_translations AS T1 ON T1.setCode = T2.code WHERE T1.language = 'Italian' AND T2.block = 'Shadowmoor' ORDER BY T2.name ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.isForeignOnly = 0 AND T1.isFoilOnly = 1 AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "432": "SELECT T1.setCode, MAX(T2.totalSetSize) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Russian' GROUP BY T1.setCode ORDER BY MAX(T2.totalSetSize) DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM sets)) AS percentage FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isOnlineOnly = 0 AND (SELECT COUNT(*) FROM set_translations AS T3 WHERE T3.setCode = T1.code) = 1\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(T1.id) FROM cards AS T1 WHERE T1.borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects LIKE '%extendedart%'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 174\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT foreign_data.language FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Aven Trailblazer'\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, cards.type FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT T1.language, T1.flavorText, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (SUM(CASE WHEN T1.convertedManaCost = 10 THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.id)) AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Abyssal Horror'\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type LIKE '%expansion%' OR type LIKE '%commander%'\t----- bird -----\tcard_games",
    "448": "SELECT FD.name, FD.type FROM foreign_data AS FD INNER JOIN cards AS C ON FD.uuid = C.uuid WHERE C.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT foreign_data.language, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND power > 5;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE text IS NOT NULL;\t----- bird -----\tcard_games",
    "453": "SELECT manaCost FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT DISTINCT type FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT      CASE          WHEN (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel') > (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper')          THEN 'Serra Angel costs more'          ELSE 'Shrine Keeper costs more'      END AS comparison;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T3.translation FROM set_translations AS T3 INNER JOIN sets AS T2 ON T3.setCode = T2.code INNER JOIN cards AS T1 ON T2.code = T1.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T3.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(T3.language) FROM set_translations AS T3 INNER JOIN sets AS T2 ON T3.setCode = T2.code INNER JOIN cards AS T1 ON T2.code = T1.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "464": "SELECT T2.name FROM set_translations AS T1 INNER JOIN cards AS T2 ON T1.setCode = T2.setCode WHERE T1.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS(SELECT 1 FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'Korean');\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.artist = 'Adam Rex' AND T2.name = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "467": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Eighth Edition' AND T1.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "469": "SELECT CASE WHEN EXISTS (SELECT 1 FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy' AND T2.mtgoCode IS NOT NULL AND T2.mtgoCode != '') THEN 'Yes' ELSE 'No' END AS AppearsOnMTGO;\t----- bird -----\tcard_games",
    "470": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT EXISTS(SELECT 1 FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Adarkar Valkyrie' AND T2.isForeignOnly = 1)\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 100\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost = (SELECT MAX(T3.convertedManaCost) FROM cards AS T3 INNER JOIN sets AS T4 ON T3.setCode = T4.code WHERE T4.name = 'Coldsnap')\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "478": "SELECT T1.* FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.number = '4' AND (T2.name = 'Coldsnap' OR T2.code = 'Coldsnap')\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND setCode = 'Coldsnap' AND (power IS NULL OR power = '*')\t----- bird -----\tcard_games",
    "480": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'Italian'\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T2.type FROM foreign_data AS T2 INNER JOIN cards AS T1 ON T2.uuid = T1.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT T1.text FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.language = 'Italian' AND T3.code = 'Coldsnap'\t----- bird -----\tcard_games",
    "484": "--error--\t----- bird -----\tcard_games",
    "485": "SELECT T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT (COUNT(CASE WHEN T1.convertedManaCost = 7.0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT (COUNT(CASE WHEN C.cardKingdomFoilId IS NOT NULL AND C.cardKingdomId IS NOT NULL THEN 1 END) * 100.0 / COUNT(*)) AS percentage  FROM cards AS C  INNER JOIN sets AS S ON C.setCode = S.code  WHERE S.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE LOWER(T1.artist) = 'jim pavelec' AND T1.hasContentWarning = 1\t----- bird -----\tcard_games",
    "495": "SELECT S.releaseDate FROM cards AS C INNER JOIN sets AS S ON C.setCode = S.code WHERE C.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT baseSetSize FROM sets WHERE name = 'Rinascimento';\t----- bird -----\tcard_games",
    "497": "SELECT sets.type FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Huiti\u00e8me \u00e9dition'\t----- bird -----\tcard_games",
    "498": "SELECT T3.translation FROM set_translations AS T3 INNER JOIN sets AS T2 ON T3.setCode = T2.code INNER JOIN cards AS T1 ON T2.code = T1.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T3.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(T2.translation) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Tenth Edition'\t----- bird -----\tcard_games",
    "500": "SELECT T3.translation FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Fellwar Stone' AND T3.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Journey into Nyx Hero''s Path' AND T1.convertedManaCost = (SELECT MAX(T3.convertedManaCost) FROM cards AS T3 INNER JOIN sets AS T4 ON T3.setCode = T4.code WHERE T4.name = 'Journey into Nyx Hero''s Path')\t----- bird -----\tcard_games",
    "502": "SELECT releaseDate FROM sets WHERE name = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT T2.type FROM sets AS T2 INNER JOIN cards AS T1 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3\t----- bird -----\tcard_games",
    "505": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Chinese Simplified' AND T2.name = 'Mirrodin'\t----- bird -----\tcard_games",
    "506": "SELECT (COUNT(T2.isNonFoilOnly = 1) * 100.0 / COUNT(*)) AS percentage FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT (SUM(CASE WHEN s.isOnlineOnly = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage  FROM sets AS s  WHERE s.code IN (SELECT st.setCode FROM set_translations AS st WHERE st.language = 'Portuguese (Brazil)');\t----- bird -----\tcard_games",
    "508": "SELECT availability FROM cards WHERE isTextless = 1 AND artist = 'Aleksi Briclot'\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets);\t----- bird -----\tcard_games",
    "510": "SELECT cards.artist FROM cards WHERE cards.side IS NULL AND cards.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE cards.side IS NULL)\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE hasFoil = 1 GROUP BY frameEffects ORDER BY COUNT(frameEffects) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE cards.power IS NULL OR cards.power = '*' AND cards.hasFoil = 0 AND cards.duelDeck = 'A';\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' AND totalSetSize = (SELECT MAX(totalSetSize) FROM sets WHERE type = 'commander')\t----- bird -----\tcard_games",
    "514": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'duel' ORDER BY T1.convertedManaCost DESC LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT MIN(T1.originalReleaseDate) AS oldest_release_date, T2.format  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE T1.rarity = 'mythic'\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Ba\u01f5a' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(DISTINCT T1.uuid)  FROM cards AS T1  INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid  WHERE T1.rarity = 'rare'  AND T1.type LIKE '%Enchantment%'  AND T1.name = 'Abundance'  GROUP BY T1.uuid  HAVING COUNT(CASE WHEN T2.status != 'Legal' THEN 1 END) = 0\t----- bird -----\tcard_games",
    "518": "SELECT max_banned_format.format, GROUP_CONCAT(C.name) AS card_names FROM (SELECT format, COUNT(status) AS banned_count FROM legalities WHERE status = 'Banned' GROUP BY format ORDER BY banned_count DESC LIMIT 1) AS max_banned_format INNER JOIN legalities AS L ON max_banned_format.format = L.format INNER JOIN cards AS C ON L.uuid = C.uuid WHERE L.status = 'Banned' GROUP BY max_banned_format.format\t----- bird -----\tcard_games",
    "519": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Battlebond' COLLATE NOCASE)\t----- bird -----\tcard_games",
    "520": "--error--\t----- bird -----\tcard_games",
    "521": "SELECT T2.status FROM legalities AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy' AND T1.hasContentWarning = 1\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "523": "SELECT AVG(yearly_count) AS average_sets, (SELECT language FROM set_translations WHERE setCode IN (SELECT code FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1) AS common_language FROM (SELECT strftime('%Y', releaseDate) AS release_year, COUNT(*) AS yearly_count FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY release_year) AS yearly_sets\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT uuid FROM legalities WHERE format = 'oldschool' AND status IN ('Restricted', 'Banned');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Kev Walker' ORDER BY T1.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T3.format FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T2.name = 'Hour of Devastation'\t----- bird -----\tcard_games",
    "529": "SELECT T2.name FROM sets AS T2 LEFT JOIN set_translations AS T1 ON T1.setCode = T2.code AND T1.language = 'Korean' WHERE T1.language = 'Korean' AND T2.code NOT IN (SELECT setCode FROM set_translations WHERE language = 'Japanese')\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT T1.frameVersion, T1.name, T2.status FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams'\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE SUBSTR(CreationDate, 1, 4) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT T2.DisplayName FROM users AS T2 INNER JOIN posts AS T1 ON T1.OwnerUserId = T2.Id GROUP BY T2.Id ORDER BY SUM(T1.ViewCount) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(Id) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND CreationDate > '2013-12-31';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "538": "SELECT T2.Title FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT Title FROM posts WHERE LOWER(OwnerDisplayName) = 'csgillespie' AND ViewCount = (SELECT MAX(ViewCount) FROM posts WHERE LOWER(OwnerDisplayName) = 'csgillespie')\t----- bird -----\tcodebase_community",
    "541": "SELECT users.DisplayName FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(T1.CommentCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(T1.AnswerCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score > 19\t----- bird -----\tcodebase_community",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT Body FROM posts WHERE Id = (SELECT ExcerptPostId FROM tags WHERE TagName = 'bayesian')\t----- bird -----\tcodebase_community",
    "550": "SELECT posts.Body FROM posts WHERE Id = (SELECT ExcerptPostId FROM tags WHERE Count = (SELECT MAX(Count) FROM tags))\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "552": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND STRFTIME('%Y', T1.Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT T1.DisplayName  FROM users AS T1  INNER JOIN badges AS T2 ON T1.Id = T2.UserId  GROUP BY T1.DisplayName  HAVING COUNT(T2.UserId) = (SELECT MAX(badge_count) FROM (SELECT COUNT(T2.UserId) AS badge_count FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.DisplayName))\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T2.Score) FROM posts AS T2 INNER JOIN users AS T1 ON T2.OwnerUserId = T1.Id WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_count) FROM (SELECT COUNT(badges.Id) AS badge_count FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Views > 200 GROUP BY users.Id)\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(T1.Id) * 1.0 / (SELECT COUNT(*) FROM posts WHERE Score > 5)) * 100 AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 5 AND T2.Age > 65\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate HAVING COUNT(Id) = (SELECT MAX(VoteCount) FROM (SELECT COUNT(Id) AS VoteCount FROM votes GROUP BY CreationDate))\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT T2.Title FROM posts AS T2 INNER JOIN comments AS T1 ON T2.Id = T1.PostId WHERE T1.Score = (SELECT MAX(Score) FROM comments)\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT COALESCE((SELECT FavoriteCount FROM posts WHERE Id = (SELECT PostId FROM comments WHERE UserId = 3025 AND CreationDate = '2014-04-23 20:29:39')), 0) AS FavoriteCount\t----- bird -----\tcodebase_community",
    "564": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ParentId = 107829 LIMIT 1\t----- bird -----\tcodebase_community",
    "565": "SELECT T2.ClosedDate FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18' AND T2.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "566": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 65041\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "568": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(votes.Id) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Body LIKE '%data visualization%' OR posts.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T2.UserId = T1.Id WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT COALESCE(COUNT(P.Id), 0) * 1.0 / NULLIF(COUNT(V.Id), 0) AS ratio FROM posts AS P LEFT JOIN votes AS V ON V.UserId = 24 WHERE P.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT U.DisplayName, U.Reputation  FROM posts AS P  INNER JOIN users AS U ON P.OwnerUserId = U.Id  WHERE P.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT DISTINCT T2.DisplayName  FROM badges AS T1  INNER JOIN users AS T2 ON T1.UserId = T2.Id  WHERE T1.Name = 'Necromancer'  LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
    "582": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score) AS TotalScore, T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT C.Text FROM comments AS C WHERE C.UserId IN (SELECT PH.UserId FROM postHistory AS PH INNER JOIN posts AS P ON PH.PostId = P.Id WHERE P.Title = 'Why square the difference instead of taking the absolute value in standard deviation?')\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) FROM votes INNER JOIN posts ON posts.Id = votes.PostId WHERE posts.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT users.DisplayName FROM users INNER JOIN votes ON votes.UserId = users.Id INNER JOIN posts ON votes.PostId = posts.Id WHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT T1.Title, T2.Comment, AVG(T1.ViewCount) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Tags LIKE '%<humor>%' GROUP BY T1.Id\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(Id) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users ORDER BY Views ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND Date >= '2011-01-01' AND Date < '2012-01-01'\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) FROM (SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(UserId) > 5) AS T1\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT T1.Id)  FROM users AS T1  INNER JOIN badges AS T2 ON T1.Id = T2.UserId  WHERE T1.Location LIKE '%New York%'  AND T2.Name IN ('Teacher', 'Supporter')  GROUP BY T1.Id  HAVING COUNT(DISTINCT T2.Name) = 2\t----- bird -----\tcodebase_community",
    "594": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT DISTINCT T3.Id, T3.DisplayName  FROM users AS T3  INNER JOIN postHistory AS T1 ON T1.UserId = T3.Id  INNER JOIN posts AS T2 ON T1.PostId = T2.Id  WHERE T2.ViewCount >= 1000  GROUP BY T1.PostId, T1.UserId  HAVING COUNT(T1.Id) = 1\t----- bird -----\tcodebase_community",
    "596": "SELECT B.Name  FROM users AS U  INNER JOIN comments AS C ON U.Id = C.UserId  INNER JOIN badges AS B ON U.Id = B.UserId  WHERE U.Id IN (     SELECT U.Id      FROM users AS U      INNER JOIN comments AS C ON U.Id = C.UserId      GROUP BY U.Id      HAVING COUNT(C.Id) = (         SELECT MAX(CommentCount)          FROM (             SELECT COUNT(C.Id) AS CommentCount              FROM users AS U              INNER JOIN comments AS C ON U.Id = C.UserId              GROUP BY U.Id         )     ) )\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location LIKE '%India%' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT (COUNT(CASE WHEN Date BETWEEN '2011-01-01' AND '2011-12-31' THEN 1 END) - COUNT(CASE WHEN Date BETWEEN '2010-01-01' AND '2010-12-31' THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN Date BETWEEN '2010-01-01' AND '2010-12-31' THEN 1 END), 0) AS percentage_difference FROM badges WHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "599": "SELECT DISTINCT T1.PostHistoryTypeId, COUNT(DISTINCT T2.UserId)  FROM postHistory AS T1  LEFT JOIN comments AS T2 ON T1.PostId = T2.PostId  WHERE T1.PostId = 3720  GROUP BY T1.PostHistoryTypeId\t----- bird -----\tcodebase_community",
    "600": "SELECT PL.RelatedPostId, P.ViewCount, P.Score, P.FavoriteCount  FROM postLinks AS PL  INNER JOIN posts AS P ON PL.RelatedPostId = P.Id  WHERE PL.PostId = 61217 OR PL.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT Id, OwnerUserId FROM posts WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND CreaionDate BETWEEN '2011-01-01' AND '2011-12-31';\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(votes) AS avg_votes, AVG(Age) AS avg_age FROM ( SELECT users.Age, SUM(CASE WHEN votes.VoteTypeId = 2 THEN 1 ELSE 0 END) AS votes, COUNT(posts.Id) AS post_count FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId LEFT JOIN votes ON posts.Id = votes.PostId GROUP BY users.Id HAVING COUNT(posts.Id) > 10 )\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT DISTINCT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT T2.Reputation FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT T2.Date FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (COUNT(DISTINCT T1.UserId) * 100.0 / COUNT(DISTINCT T2.Id)) AS percentage FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(CASE WHEN T2.Age BETWEEN 13 AND 18 THEN 1 END) * 1.0 / COUNT(*)) * 100 AS percentage FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT T2.Score FROM comments AS T2 INNER JOIN posts AS T1 ON T1.Id = T2.PostId WHERE T1.CreationDate = '2010-07-19 19:19:56'\t----- bird -----\tcodebase_community",
    "617": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT DISTINCT U.Age FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE U.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND Id IN (SELECT UserId FROM badges WHERE Name = 'Supporter')\t----- bird -----\tcodebase_community",
    "620": "SELECT T1.Views FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT DISTINCT B.Name  FROM badges AS B  INNER JOIN users AS U ON B.UserId = U.Id  WHERE U.Reputation = (SELECT MIN(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "622": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE U.Age > 65 AND B.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location LIKE '%New York%'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE CreationDate LIKE '2010%'\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "629": "SELECT CAST(COUNT(CASE WHEN votes.CreationDate LIKE '2010%' THEN 1 END) AS FLOAT) / NULLIF(COUNT(CASE WHEN votes.CreationDate LIKE '2011%' THEN 1 END), 0) AS Ratio FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT T3.TagName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T2.Tags LIKE '%' || T3.TagName || '%' WHERE T1.DisplayName = 'John Salvatier'\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo'\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(votes.Id) FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT T1.Title, T1.ViewCount FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' OR T2.DisplayName = 'Noah Snyder' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM (SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id LEFT JOIN votes AS T3 ON T1.Id = T3.PostId WHERE T2.DisplayName = 'Matt Parker' GROUP BY T1.Id HAVING COUNT(T3.PostId) > 4) AS Subquery\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan')) AND Score < 60\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT T3.TagName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN tags AS T3 ON T1.Tags LIKE '%' || T3.TagName || '%' WHERE T2.DisplayName = 'Mark Meckes' AND T1.Id NOT IN (SELECT PostId FROM comments)\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT users.DisplayName  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE badges.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT (COUNT(CASE WHEN T1.Body LIKE '%R%' OR T1.Tags LIKE '%R%' THEN 1 END) * 100.0 / COUNT(T1.Id)) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "640": "SELECT (COALESCE(SUM(CASE WHEN U.DisplayName = 'Mornington' THEN P.ViewCount END), 0) - COALESCE(SUM(CASE WHEN U.DisplayName = 'Amos' THEN P.ViewCount END), 0)) AS ViewCountDifference FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND Date BETWEEN '2014-01-01' AND '2014-12-31'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(Id) FROM posts WHERE CreaionDate LIKE '2010-07-21%'\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = 13;\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date BETWEEN '2011-01-01' AND '2011-12-31' AND T2.Location = 'North Pole'\t----- bird -----\tcodebase_community",
    "648": "SELECT T2.DisplayName, T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(postHistory.Id) AS PostHistoryCount, posts.LastEditDate FROM posts LEFT JOIN postHistory ON postHistory.PostId = posts.Id WHERE posts.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY posts.LastEditDate\t----- bird -----\tcodebase_community",
    "650": "SELECT T1.LastAccessDate, T1.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T3.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN posts AS T3 ON T1.RelatedPostId = T3.Id WHERE T2.Title = 'How to tell if something happened in a data set which monitors a value over time'\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.Id, T2.Name FROM posts AS T1 INNER JOIN badges AS T2 ON T1.OwnerUserId = T2.UserId INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id WHERE T3.DisplayName = 'Samuel' AND T1.CreaionDate BETWEEN '2013-01-01' AND '2013-12-31' AND T2.Date BETWEEN '2013-01-01' AND '2013-12-31'\t----- bird -----\tcodebase_community",
    "653": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT T3.DisplayName, T3.Location FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T1.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?')\t----- bird -----\tcodebase_community",
    "656": "SELECT T2.OwnerDisplayName FROM posts AS T1 INNER JOIN posts AS T2 ON T1.ParentId = T2.Id WHERE T1.Score = (SELECT MAX(T1.Score) FROM posts AS T1 WHERE T1.ParentId IS NOT NULL)\t----- bird -----\tcodebase_community",
    "657": "SELECT T2.DisplayName, T2.WebsiteUrl FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 8 AND T1.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE Score = (SELECT MAX(Score) FROM posts);\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE strftime('%Y', T2.CreationDate) = '2011' AND T2.BountyAmount = 50\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users WHERE Age IS NOT NULL);\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE CreaionDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(monthly_count) FROM (SELECT COUNT(postLinks.Id) AS monthly_count FROM postLinks INNER JOIN posts ON postLinks.PostId = posts.Id WHERE postLinks.CreationDate LIKE '2010%' AND posts.AnswerCount <= 2 GROUP BY strftime('%Y-%m', postLinks.CreationDate))\t----- bird -----\tcodebase_community",
    "666": "SELECT T1.Id FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 1465 AND T1.Score = (SELECT MAX(T1.Score) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 1465)\t----- bird -----\tcodebase_community",
    "667": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate = (SELECT MIN(CreationDate) FROM postLinks)\t----- bird -----\tcodebase_community",
    "668": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id GROUP BY T1.UserId HAVING COUNT(T1.UserId) = (SELECT MAX(badge_count) FROM (SELECT COUNT(UserId) AS badge_count FROM badges GROUP BY UserId))\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(votes.CreationDate) FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreationDate) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "671": "SELECT U.DisplayName  FROM badges AS B  INNER JOIN users AS U ON B.UserId = U.Id  WHERE B.Name = 'Autobiographer'  ORDER BY B.Date  LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 WHERE T1.Location LIKE '%United Kingdom%' AND T1.Id IN (SELECT T2.OwnerUserId FROM posts AS T2 GROUP BY T2.OwnerUserId HAVING SUM(T2.FavoriteCount) >= 4)\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(vote_count) FROM (SELECT COUNT(votes.PostId) AS vote_count FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.Age = (SELECT MAX(Age) FROM users) GROUP BY users.Id) AS user_votes\t----- bird -----\tcodebase_community",
    "674": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM (SELECT U.Id FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId WHERE U.Reputation > 2000 GROUP BY U.Id HAVING SUM(P.ViewCount) > 1000) AS filtered_users\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Jay Stevens' AND SUBSTR(T1.CreaionDate, 1, 4) = '2010'\t----- bird -----\tcodebase_community",
    "678": "SELECT T2.Id, T2.Title FROM posts AS T2 INNER JOIN users AS T1 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Harvey Motulsky' AND T2.ViewCount = (SELECT MAX(T3.ViewCount) FROM posts AS T3 INNER JOIN users AS T4 ON T4.Id = T3.OwnerUserId WHERE T4.DisplayName = 'Harvey Motulsky')\t----- bird -----\tcodebase_community",
    "679": "SELECT T1.Id, T1.Title FROM posts AS T1 WHERE T1.Score = (SELECT MAX(T2.Score) FROM posts AS T2)\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(Score) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Stephen Turner')\t----- bird -----\tcodebase_community",
    "681": "SELECT users.DisplayName FROM users INNER JOIN posts ON posts.OwnerUserId = users.Id WHERE posts.ViewCount > 20000 AND SUBSTR(posts.CreaionDate, 1, 4) = '2011'\t----- bird -----\tcodebase_community",
    "682": "SELECT T1.Id, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score = (SELECT MAX(Score) FROM posts WHERE strftime('%Y', CreaionDate) = '2010') AND strftime('%Y', T1.CreaionDate) = '2010'\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(CASE WHEN T2.Reputation > 1000 THEN 1 END) * 100.0 / COUNT(T1.Id)) AS Percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.CreaionDate BETWEEN '2011-01-01' AND '2011-12-31'\t----- bird -----\tcodebase_community",
    "684": "SELECT (COUNT(Id) * 100.0 / (SELECT COUNT(Id) FROM users)) AS percentage FROM users WHERE Age BETWEEN 13 AND 19;\t----- bird -----\tcodebase_community",
    "685": "SELECT SUM(T1.ViewCount), T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE LOWER(T1.Title) = LOWER('Computer Game Datasets')\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(Id) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(T1.Id) FROM comments AS T1 WHERE T1.PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts) LIMIT 1)\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT DisplayName, Location FROM users WHERE Id = (SELECT LastEditorUserId FROM posts WHERE Id = 183 AND LastEditorUserId IS NOT NULL)\t----- bird -----\tcodebase_community",
    "690": "SELECT MAX(T1.Date) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett'\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 WHERE T1.Age BETWEEN 19 AND 65 AND (SELECT COUNT(*) FROM votes AS T2 WHERE T2.UserId = T1.Id AND T2.VoteTypeId = 2) > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT CAST(JULIANDAY(badges.Date) - JULIANDAY(users.CreationDate) AS INTEGER) AS DaysToGetBadge FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(P.Id) AS PostCount, COUNT(C.Id) AS CommentCount FROM users AS U LEFT JOIN posts AS P ON U.Id = P.OwnerUserId LEFT JOIN comments AS C ON U.Id = C.UserId WHERE U.Id = (SELECT Id FROM users WHERE CreationDate = (SELECT MAX(CreationDate) FROM users) LIMIT 1)\t----- bird -----\tcodebase_community",
    "694": "SELECT T1.Text, T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'Analysing wind data with R' LIMIT 1) ORDER BY T1.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE Tags LIKE '%<careers>%'\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(*) FROM (SELECT T1.PostId FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Clustering 1D data' AND T1.UserId IS NOT NULL UNION ALL SELECT T3.Id FROM posts AS T3 WHERE T3.ParentId = (SELECT T4.Id FROM posts AS T4 WHERE T4.Title = 'Clustering 1D data') AND T3.OwnerUserId IS NOT NULL) AS combined_counts\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(DISTINCT PostId) FROM votes WHERE BountyAmount > 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT (COUNT(CASE WHEN T1.score > 50 THEN 1 END) * 100.0 / NULLIF(COUNT(T1.Id), 0)) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.reputation = (SELECT MAX(reputation) FROM users)\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Body LIKE '%linear regression%'\t----- bird -----\tcodebase_community",
    "707": "SELECT MAX(T1.Score) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150\t----- bird -----\tcodebase_community",
    "708": "SELECT T1.CreationDate, T1.Age FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text LIKE '%website%' AND T1.Age IS NOT NULL\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.CommentCount = 1 AND C.Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.Id, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT U.UpVotes FROM comments AS C INNER JOIN users AS U ON C.UserId = U.Id WHERE C.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT U.DisplayName  FROM comments AS C  INNER JOIN users AS U ON C.UserId = U.Id  WHERE C.Score BETWEEN 1 AND 5 AND U.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(U.Id) * 100.0 / COUNT(C.Id)) AS percentage FROM comments AS C INNER JOIN users AS U ON C.UserId = U.Id WHERE C.Score BETWEEN 5 AND 10 AND U.UpVotes = 0;\t----- bird -----\tcodebase_community",
    "717": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT hero_power.hero_id) FROM hero_power INNER JOIN superpower ON superpower.id = hero_power.power_id WHERE superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero WHERE height_cm > 200 AND id IN (SELECT hero_id FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'Super Strength'))\t----- bird -----\tsuperhero",
    "720": "SELECT T1.full_name  FROM superhero AS T1  INNER JOIN (SELECT hero_id              FROM hero_power              GROUP BY hero_id              HAVING COUNT(power_id) > 15) AS T2  ON T1.id = T2.hero_id\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT T1.superhero_name, T1.height_cm FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT T3.colour, COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' GROUP BY T3.colour ORDER BY COUNT(T1.id) DESC\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.height_cm > 0\t----- bird -----\tsuperhero",
    "730": "SELECT T1.superhero_name  FROM superhero AS T1  INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id  INNER JOIN superpower AS T3 ON T2.power_id = T3.id  INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id  WHERE T4.publisher_name = 'Marvel Comics' AND T3.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = (SELECT T3.hero_id FROM hero_attribute AS T3 WHERE T3.attribute_id = (SELECT T4.id FROM attribute AS T4 WHERE T4.attribute_name = 'Speed') ORDER BY T3.attribute_value ASC LIMIT 1)\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = 9 AND T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Intelligence') ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_attribute AS T1 ON T2.id = T1.hero_id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T1.attribute_value < 50 AND T3.attribute_name = 'Durability'\t----- bird -----\tsuperhero",
    "739": "SELECT T3.superhero_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T1.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT T2.superhero_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id GROUP BY T1.hero_id HAVING COUNT(T1.power_id) = (SELECT MAX(power_count) FROM (SELECT COUNT(power_id) AS power_count FROM hero_power GROUP BY hero_id))\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT (COUNT(CASE WHEN alignment.alignment = 'Neutral' THEN superhero.id END) * 100.0 / COUNT(superhero.id)) AS percentage, COUNT(CASE WHEN alignment.alignment = 'Neutral' AND publisher.publisher_name = 'Marvel Comics' THEN superhero.id END) AS marvel_count FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "744": "SELECT (COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN T1.id END) - COUNT(CASE WHEN T2.publisher_name = 'DC Comics' THEN T1.id END)) AS difference FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name IN ('Marvel Comics', 'DC Comics')\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL OR full_name = '-';\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female' AND T1.weight_kg > 0\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT SP.power_name  FROM superhero AS S  INNER JOIN gender AS G ON S.gender_id = G.id  INNER JOIN hero_power AS HP ON S.id = HP.hero_id  INNER JOIN superpower AS SP ON HP.power_id = SP.id  WHERE G.gender = 'Male'  LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.height_cm BETWEEN 170 AND 190 AND (T1.eye_colour_id IS NULL OR T1.eye_colour_id = 1)\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT T3.colour FROM superhero AS T1 INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Human' AND T1.height_cm = 185\t----- bird -----\tsuperhero",
    "759": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = (SELECT MAX(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "760": "SELECT (COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(weight_kg) FROM superhero) * 0.79\t----- bird -----\tsuperhero",
    "762": "WITH PowerCounts AS (SELECT T1.power_name, COUNT(T2.hero_id) AS power_count FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id GROUP BY T1.power_name) SELECT power_name FROM PowerCounts WHERE power_count = (SELECT MAX(power_count) FROM PowerCounts);\t----- bird -----\tsuperhero",
    "763": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT T3.power_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T2.id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT T2.full_name FROM superhero AS T2 INNER JOIN hero_attribute AS T1 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T1.attribute_value = (SELECT MAX(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Strength')\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T2.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T3.superhero_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T2.attribute_name = 'Durability' AND T4.publisher_name = 'Dark Horse Comics' ORDER BY T1.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abe Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_power AS T1 ON T2.id = T1.hero_id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT C1.colour AS eye_colour, C2.colour AS hair_colour, C3.colour AS skin_colour  FROM superhero AS S  INNER JOIN gender AS G ON S.gender_id = G.id  INNER JOIN publisher AS P ON S.publisher_id = P.id  INNER JOIN colour AS C1 ON S.eye_colour_id = C1.id  INNER JOIN colour AS C2 ON S.hair_colour_id = C2.id  INNER JOIN colour AS C3 ON S.skin_colour_id = C3.id  WHERE G.gender = 'Female' AND P.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.hair_colour_id = T1.skin_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT T2.alignment, T3.publisher_name, T4.race, T5.gender FROM superhero AS T1 LEFT JOIN alignment AS T2 ON T1.alignment_id = T2.id LEFT JOIN publisher AS T3 ON T1.publisher_id = T3.id LEFT JOIN race AS T4 ON T1.race_id = T4.id LEFT JOIN gender AS T5 ON T1.gender_id = T5.id WHERE T1.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT (COUNT(CASE WHEN T3.colour = 'Blue' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T2.power_id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T2.hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Hunter Zolomon')\t----- bird -----\tsuperhero",
    "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.skin_colour_id = (SELECT T3.id FROM colour AS T3 WHERE T3.colour = 'Gold')\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "787": "SELECT T3.race, T4.alignment FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id INNER JOIN alignment AS T4 ON T1.alignment_id = T4.id WHERE T1.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT (COUNT(CASE WHEN T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(CASE WHEN T2.gender = 'Female' THEN 1 END)) AS percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "790": "SELECT ABS((SELECT weight_kg FROM superhero WHERE superhero_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE superhero_name = 'Charles Chandler'))\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) AS average_height FROM superhero WHERE height_cm != 0 AND height_cm IS NOT NULL GROUP BY superhero_name\t----- bird -----\tsuperhero",
    "792": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.race = 'God / Eternal' AND T3.gender = 'Male'\t----- bird -----\tsuperhero",
    "794": "SELECT T2.superhero_name  FROM hero_attribute AS T1  INNER JOIN superhero AS T2 ON T1.hero_id = T2.id  INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id  WHERE T3.attribute_name = 'Speed'  ORDER BY T1.attribute_value DESC  LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "796": "SELECT T3.attribute_name, T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T2.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT superhero_name FROM superhero WHERE eye_colour_id = 9 AND hair_colour_id = 13;\t----- bird -----\tsuperhero",
    "798": "SELECT DISTINCT T2.publisher_name  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT (COUNT(CASE WHEN T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') THEN 1 END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1\t----- bird -----\tsuperhero",
    "801": "SELECT      COUNT(CASE WHEN T2.gender = 'Male' THEN 1 END) * 1.0 /      COUNT(CASE WHEN T2.gender = 'Female' THEN 1 END) AS gender_ratio  FROM superhero AS T1  INNER JOIN gender AS T2 ON T1.gender_id = T2.id;\t----- bird -----\tsuperhero",
    "802": "SELECT T2.superhero_name FROM superhero AS T2 WHERE T2.height_cm IS NOT NULL AND T2.height_cm > 0 ORDER BY T2.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg IS NULL OR weight_kg = 0;\t----- bird -----\tsuperhero",
    "806": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT race.race FROM race INNER JOIN superhero ON race.id = superhero.race_id WHERE superhero.id = (SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute))\t----- bird -----\tsuperhero",
    "811": "SELECT T2.alignment, T3.power_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN hero_power AS T4 ON T1.id = T4.hero_id INNER JOIN superpower AS T3 ON T4.power_id = T3.id WHERE T1.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT DISTINCT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T3.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "814": "SELECT DISTINCT C.colour  FROM hero_attribute AS H  INNER JOIN superhero AS S ON H.hero_id = S.id  INNER JOIN colour AS C ON S.skin_colour_id = C.id  WHERE H.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Good' AND T3.gender = 'Female'\t----- bird -----\tsuperhero",
    "816": "SELECT T2.superhero_name  FROM hero_attribute AS T1  INNER JOIN superhero AS T2 ON T1.hero_id = T2.id  WHERE T1.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.gender_id = 1 AND T1.hair_colour_id = 13\t----- bird -----\tsuperhero",
    "818": "SELECT (COUNT(CASE WHEN T3.gender = 'Female' THEN 1 END) * 1.0 / NULLIF(COUNT(T1.id), 0)) * 100 AS percentage FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "819": "SELECT (COUNT(CASE WHEN T2.colour = 'Blue' THEN T1.id END) - COUNT(CASE WHEN T2.colour = 'No Colour' THEN T1.id END))  FROM superhero AS T1  INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id  WHERE T1.weight_kg IS NULL OR T1.weight_kg = 0;\t----- bird -----\tsuperhero",
    "820": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' AND T2.superhero_name = 'Hulk'\t----- bird -----\tsuperhero",
    "821": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.gender_id IN (SELECT id FROM gender WHERE gender = 'Female') AND T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T3.superhero_name FROM superhero AS T3 INNER JOIN hero_power AS T1 ON T3.id = T1.hero_id INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE UPPER(T2.power_name) = 'CONTROL WIND' ORDER BY T3.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN publisher AS T1 ON T2.publisher_id = T1.id WHERE T1.publisher_name = 'DC Comics' AND T2.weight_kg = (SELECT MAX(T3.weight_kg) FROM superhero AS T3 INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T4.publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T3.race != 'Human' AND T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Speed' AND T1.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Speed')\t----- bird -----\tsuperhero",
    "829": "SELECT (SUM(CASE WHEN T3.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T3.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference  FROM superhero AS T1  INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id\t----- bird -----\tsuperhero",
    "830": "SELECT T3.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Black Panther' GROUP BY T2.attribute_id ORDER BY MIN(T2.attribute_value) LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.height_cm = (SELECT MAX(T2.height_cm) FROM superhero AS T2 WHERE T2.height_cm IS NOT NULL AND T2.height_cm > 0)\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT (COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT (COUNT(CASE WHEN T1.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Good') THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(DISTINCT id) FROM superhero WHERE full_name LIKE 'John %';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'Brown'\t----- bird -----\tsuperhero",
    "840": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral' AND T1.height_cm IS NOT NULL AND T1.height_cm != 0\t----- bird -----\tsuperhero",
    "843": "SELECT T1.hero_id FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT T3.power_name FROM superpower AS T3 INNER JOIN hero_power AS T2 ON T3.id = T2.power_id INNER JOIN superhero AS T1 ON T2.hero_id = T1.id WHERE T1.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)\t----- bird -----\tsuperhero",
    "846": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 IS NULL AND T2.raceId = 20\t----- bird -----\tformula_1",
    "847": "SELECT T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 19 AND T1.q2 = (SELECT MIN(T1.q2) FROM qualifying AS T1 WHERE T1.raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races INNER JOIN circuits ON circuits.circuitId = races.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T1.position FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T1.name LIKE '%Grand Prix%' AND T2.country NOT IN ('Malaysia', 'Bahrain', 'China', 'Japan', 'Singapore', 'India', 'Turkey', 'Spain', 'UK', 'Germany', 'France', 'Italy', 'Hungary', 'Monaco', 'Belgium', 'Netherlands', 'Sweden', 'Switzerland', 'Austria', 'Portugal', 'Russia', 'Poland', 'Czech Republic', 'Finland', 'Norway', 'Denmark', 'Greece')\t----- bird -----\tformula_1",
    "853": "SELECT DISTINCT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON races.circuitId = circuits.circuitId WHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT T1.name, T1.date, T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT T1.nationality FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = 1 AND T2.raceId = 24\t----- bird -----\tformula_1",
    "859": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruno' AND T2.surname = 'Senna' AND T1.raceId = 354\t----- bird -----\tformula_1",
    "860": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '00:01:40' AND T1.raceId = 355\t----- bird -----\tformula_1",
    "861": "SELECT T2.number FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q3 LIKE '0:01:54%' AND T1.raceId = 903;\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.name = 'Bahrain Grand Prix' AND T1.year = 2007 AND T3.status NOT IN ('Finished')\t----- bird -----\tformula_1",
    "863": "SELECT T2.url FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) FROM results AS R INNER JOIN races AS RAC ON R.raceId = RAC.raceId WHERE RAC.date = '2015-11-29' AND R.position IS NOT NULL\t----- bird -----\tformula_1",
    "865": "SELECT MIN(T1.dob) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T3.status = 'Finished' AND T2.raceId = 592\t----- bird -----\tformula_1",
    "866": "SELECT T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE (T1.time = '0:01:27' OR T1.time = '00:01:27') AND T1.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT T1.nationality FROM drivers AS T1 WHERE T1.driverId = (SELECT T2.driverId FROM results AS T2 WHERE T2.raceId = 933 AND T2.fastestLapSpeed = (SELECT MAX(T3.fastestLapSpeed) FROM results AS T3 WHERE T3.raceId = 933))\t----- bird -----\tformula_1",
    "868": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9) AND T1.raceId = 9\t----- bird -----\tformula_1",
    "870": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lucas' AND T2.surname = 'di Grassi' AND T1.raceId = 345\t----- bird -----\tformula_1",
    "871": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE (T1.q2 = '0:01:15' OR T1.q2 = '00:01:15') AND T1.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.raceId = 45 AND T2.q3 = '1:33'\t----- bird -----\tformula_1",
    "873": "SELECT T3.time FROM results AS T3 INNER JOIN drivers AS T2 ON T3.driverId = T2.driverId WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren' AND T3.raceId = 743\t----- bird -----\tformula_1",
    "874": "SELECT T3.forename, T3.surname FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'San Marino Grand Prix' AND T2.year = 2006 AND T1.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT T2.url FROM seasons AS T2 WHERE T2.year = (SELECT T1.year FROM races AS T1 WHERE T1.raceId = 901)\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.date = '2015-11-29' AND T3.status = 'Did not finish'\t----- bird -----\tformula_1",
    "877": "SELECT MIN(T2.dob) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.statusId IN (SELECT statusId FROM status WHERE status.status = 'Finished') AND T1.raceId = 872\t----- bird -----\tformula_1",
    "878": "SELECT T2.forename || ' ' || T2.surname  FROM lapTimes AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  WHERE T1.raceId = 348  AND T1.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = 348)\t----- bird -----\tformula_1",
    "879": "SELECT T3.nationality FROM results AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(T1.fastestLapSpeed) FROM results AS T1)\t----- bird -----\tformula_1",
    "880": "WITH PaulDriver AS (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta'), FastestLap853 AS (SELECT fastestLapSpeed FROM results WHERE raceId = 853 AND driverId = (SELECT driverId FROM PaulDriver)), NextRaceLapSpeed AS (SELECT fastestLapSpeed FROM results WHERE raceId = (SELECT MIN(raceId) FROM results WHERE raceId > 853 AND driverId = (SELECT driverId FROM PaulDriver)) AND driverId = (SELECT driverId FROM PaulDriver)) SELECT ((SELECT fastestLapSpeed FROM NextRaceLapSpeed) - (SELECT fastestLapSpeed FROM FastestLap853)) / (SELECT fastestLapSpeed FROM FastestLap853) * 100 AS percent_faster\t----- bird -----\tformula_1",
    "881": "SELECT (COUNT(T1.driverId) * 1.0 / NULLIF(COUNT(T1.driverId), 0)) * 100 AS completion_rate FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.date = '1983-07-16' AND T3.status = 'Finished'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(raceId) AS total_races, GROUP_CONCAT(name ORDER BY name DESC) AS race_names FROM races WHERE year = 2005\t----- bird -----\tformula_1",
    "884": "SELECT DISTINCT name FROM races WHERE STRFTIME('%Y-%m', date) = (SELECT MIN(STRFTIME('%Y-%m', date)) FROM races)\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 AND round = (SELECT MAX(round) FROM races WHERE year = 1999);\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND name NOT IN (SELECT name FROM races WHERE year = 2000);\t----- bird -----\tformula_1",
    "888": "SELECT T2.country, T2.name AS circuit, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' AND T1.year = (SELECT MIN(year) FROM races WHERE name = 'European Grand Prix')\t----- bird -----\tformula_1",
    "889": "SELECT MAX(T3.year) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN seasons AS T3 ON T2.year = T3.year WHERE T1.name = 'Brands Hatch' AND T2.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT S.year) FROM circuits AS C INNER JOIN races AS R ON C.circuitId = R.circuitId INNER JOIN seasons AS S ON R.year = S.year WHERE C.name = 'Silverstone Circuit' AND R.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT CONCAT(drivers.forename, ' ', drivers.surname) AS driver_name  FROM races  INNER JOIN results ON races.raceId = results.raceId  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE races.year = 2010 AND races.name = 'Singapore Grand Prix'  ORDER BY results.position\t----- bird -----\tformula_1",
    "892": "SELECT T2.forename, T2.surname, T1.points FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.points = (SELECT MAX(points) FROM driverStandings)\t----- bird -----\tformula_1",
    "893": "SELECT CONCAT(T3.forename, ' ', T3.surname) AS driver_name, T2.points FROM driverStandings AS T2 INNER JOIN races AS T1 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2017 AND T1.name = 'Chinese Grand Prix' ORDER BY T2.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT T1.time, T2.forename, T2.surname, T3.name FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T3.time) FROM lapTimes AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2009 AND T2.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT (COUNT(CASE WHEN R.position != 1 THEN 1 END) * 100.0) / NULLIF(COUNT(R.position), 0) AS percentage_not_first FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND RA.year >= 2010\t----- bird -----\tformula_1",
    "897": "SELECT T2.surname, T2.nationality, MAX(T3.points)  FROM driverStandings AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  INNER JOIN results AS T3 ON T1.driverId = T3.driverId  WHERE T1.wins = (SELECT MAX(wins) FROM driverStandings)\t----- bird -----\tformula_1",
    "898": "SELECT (julianday('now') - julianday(dob)) / 365.25 AS age, CONCAT(forename, ' ', surname) AS name FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'Japanese');\t----- bird -----\tformula_1",
    "899": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.circuitId HAVING COUNT(T2.raceId) = 4\t----- bird -----\tformula_1",
    "900": "SELECT T1.name, T1.location, T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT T1.name, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.date BETWEEN '2005-09-01' AND '2005-09-30'\t----- bird -----\tformula_1",
    "902": "SELECT T3.name FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Alex' AND T2.surname = 'Yoong' AND T1.position < 20\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher' AND T1.position = 1 AND T4.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "904": "WITH FastestLap AS (SELECT driverId, MIN(milliseconds) AS minLapTime FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher') GROUP BY driverId) SELECT R.name, R.year FROM FastestLap FL INNER JOIN lapTimes LT ON FL.driverId = LT.driverId AND FL.minLapTime = LT.milliseconds INNER JOIN races R ON LT.raceId = R.raceId;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId = 452 AND T2.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT MIN(T3.year) AS first_race_year, MIN(T3.round) AS first_race_round, T4.points  FROM results AS T4  INNER JOIN races AS T3 ON T4.raceId = T3.raceId  INNER JOIN drivers AS T1 ON T4.driverId = T1.driverId  WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' GROUP BY T4.driverId  HAVING MIN(T3.year) IS NOT NULL\t----- bird -----\tformula_1",
    "907": "SELECT T1.name, T2.country, T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2017 ORDER BY T1.date\t----- bird -----\tformula_1",
    "908": "SELECT T3.name, T3.year, T2.location FROM results AS T1 INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T2 ON T3.circuitId = T2.circuitId WHERE T1.laps = (SELECT MAX(laps) FROM results)\t----- bird -----\tformula_1",
    "909": "SELECT (COUNT(T1.name) * 100.0 / (SELECT COUNT(T1.name) FROM races AS T1 WHERE T1.name = 'European Grand Prix')) AS percentage FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' AND T2.country = 'Germany'\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL OR code = '';\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT T2.year FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT T1.year, T1.name, T1.round, T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.name = 'Yas Marina Circuit'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT races.date FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT T2.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "926": "SELECT MIN(T1.time) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.driverId = 452\t----- bird -----\tformula_1",
    "927": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(T1.fastestLapSpeed) FROM results AS T1)\t----- bird -----\tformula_1",
    "928": "SELECT T3.driverRef FROM driverStandings AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.position = 1 AND T2.name = 'Canadian Grand Prix' AND T2.year = 2007\t----- bird -----\tformula_1",
    "929": "SELECT DISTINCT T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT T3.name  FROM results AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T1.raceId = T3.raceId  WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'  ORDER BY T1.position ASC  LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T3.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT T3.positionOrder  FROM results AS T3  INNER JOIN races AS T2 ON T3.raceId = T2.raceId  INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId  WHERE T1.surname = 'Hamilton' AND T2.name = 'Chinese Grand Prix' AND T2.year = 2008\t----- bird -----\tformula_1",
    "934": "SELECT T3.forename, T3.surname  FROM results AS T1  INNER JOIN races AS T2 ON T1.raceId = T2.raceId  INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId  WHERE T2.year = 1989 AND T2.name = 'Australian Grand Prix' AND T1.grid = 4\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T3.status = 'Finished'\t----- bird -----\tformula_1",
    "936": "SELECT MIN(T2.time) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.position = 2 AND T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "938": "SELECT T3.forename, T3.surname, T3.url FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.position = 1 AND T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT D.driverId) FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE D.nationality = 'Uruguayan' AND RA.year = 2008 AND RA.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.name = 'Chinese Grand Prix' AND T2.year = 2008 AND T3.status = 'Finished'\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "942": "SELECT AVG(CAST(SUBSTR(T1.fastestLapTime, 1, INSTR(T1.fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T1.fastestLapTime, INSTR(T1.fastestLapTime, ':') + 1) AS REAL)) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "943": "SELECT COUNT(CASE WHEN T1.laps = (SELECT MAX(laps) FROM results WHERE raceId = T2.raceId) THEN 1 END) * 1.0 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "944": "SELECT ((last_driver.time - champion.time) / champion.time) * 100 AS percentage_difference  FROM      (SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.position = 1 AND T2.name = 'Australian Grand Prix' AND T2.year = 2008) AS champion,     (SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T1.position = (SELECT MAX(position) FROM results WHERE raceId = T2.raceId)) AS last_driver\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(circuitId) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(T2.points) FROM constructorResults AS T2 INNER JOIN constructors AS T1 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId GROUP BY T1.name ORDER BY MAX(T2.points) DESC LIMIT 1\t----- bird -----\tformula_1",
    "950": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = 0.0 AND T2.raceId = 291\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Japanese' AND T2.points = 0 GROUP BY T1.constructorId HAVING COUNT(DISTINCT T2.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT C.constructorId) FROM constructors AS C INNER JOIN constructorResults AS CR ON C.constructorId = CR.constructorId INNER JOIN results AS R ON CR.raceId = R.raceId INNER JOIN lapTimes AS LT ON R.raceId = LT.raceId WHERE C.nationality = 'French' AND LT.lap > 50\t----- bird -----\tformula_1",
    "954": "SELECT      (COUNT(CASE WHEN S.status = 'Finished' THEN R.raceId END) * 100.0) / NULLIF(COUNT(R.raceId), 0) AS completion_percentage FROM      results AS R INNER JOIN      races AS R2 ON R.raceId = R2.raceId INNER JOIN      drivers AS D ON R.driverId = D.driverId INNER JOIN      status AS S ON R.statusId = S.statusId WHERE      D.nationality = 'Japanese'      AND R2.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT races.year, AVG((CAST(SUBSTR(results.time, 1, INSTR(results.time, ':') - 1) AS INTEGER) * 60) + CAST(SUBSTR(results.time, INSTR(results.time, ':') + 1, INSTR(results.time, '.') - INSTR(results.time, ':') - 1) AS INTEGER) + CAST(SUBSTR(results.time, INSTR(results.time, '.') + 1) AS INTEGER) / 1000) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.position = 1 AND races.year < 1975 GROUP BY races.year\t----- bird -----\tformula_1",
    "956": "SELECT DISTINCT T1.forename, T1.surname  FROM drivers AS T1  INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId  WHERE T1.dob > '1975-01-01' AND T2.position = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'Italian' AND T3.status <> 'Finished'\t----- bird -----\tformula_1",
    "958": "SELECT T2.forename, T2.surname FROM drivers AS T2 INNER JOIN lapTimes AS T1 ON T1.driverId = T2.driverId WHERE T1.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "959": "SELECT T1.fastestLap FROM results AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.position = 1 AND T3.year = 2009\t----- bird -----\tformula_1",
    "960": "SELECT AVG(T1.fastestLapSpeed) FROM results AS T1 WHERE T1.raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')\t----- bird -----\tformula_1",
    "961": "SELECT T2.name, T2.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.milliseconds = (SELECT MIN(milliseconds) FROM results)\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(DISTINCT T1.driverId) * 100.0 / NULLIF(COUNT(DISTINCT T1.driverId), 0)) AS percentage  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.dob < '1985-01-01' AND T2.laps > 50 AND T3.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.time < '2:00.000'\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality LIKE '%America%'\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT COUNT(CASE WHEN nationality = 'Netherlands' THEN 1 END) AS netherlandic_count, GROUP_CONCAT(code) AS top_3_codes FROM (     SELECT code, nationality     FROM drivers     ORDER BY dob DESC     LIMIT 3 ) AS top_drivers\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT T1.forename, T1.surname, MIN(T2.time) AS earliest_lap_time  FROM drivers AS T1  INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId  WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1990-12-31'  GROUP BY T1.driverId  ORDER BY earliest_lap_time ASC  LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'German')\t----- bird -----\tformula_1",
    "972": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.dob LIKE '1971%' AND T2.fastestLap IS NOT NULL AND T2.fastestLap = (SELECT MAX(fastestLap) FROM results AS R WHERE R.raceId = T2.raceId)\t----- bird -----\tformula_1",
    "973": "SELECT T1.driverId, T1.forename, T1.surname, MAX(T2.time) AS latest_lap_time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spanish' AND T1.dob < '1982-01-01' GROUP BY T1.driverId ORDER BY latest_lap_time DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "975": "SELECT races.year FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId GROUP BY races.year ORDER BY MAX(lapTimes.milliseconds) ASC LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT T2.driverId FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.lap = 1 GROUP BY T1.driverId ORDER BY MIN(T1.time) ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results AS R INNER JOIN status AS S ON R.statusId = S.statusId WHERE R.raceId BETWEEN 50 AND 100 AND S.status = 'Disqualified';\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(*), location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "979": "WITH finisher_counts AS (     SELECT raceId, COUNT(position) AS finisher_count     FROM results     WHERE position IS NOT NULL     GROUP BY raceId ) SELECT T2.round FROM finisher_counts AS FC INNER JOIN races AS T2 ON FC.raceId = T2.raceId WHERE FC.finisher_count = (SELECT MAX(finisher_count) FROM finisher_counts);\t----- bird -----\tformula_1",
    "980": "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 IS NOT NULL AND T2.raceId = 23\t----- bird -----\tformula_1",
    "981": "SELECT R.year, R.name, R.date, R.time FROM drivers AS D JOIN qualifying AS Q ON D.driverId = Q.driverId JOIN races AS R ON Q.raceId = R.raceId WHERE D.driverId = (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1) ORDER BY Q.raceId ASC LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'American' AND T3.status = 'Puncture'\t----- bird -----\tformula_1",
    "983": "SELECT T1.name, T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' AND T2.points = (SELECT MAX(points) FROM constructorStandings AS T3 INNER JOIN constructors AS T4 ON T3.constructorId = T4.constructorId WHERE T4.nationality = 'Italian')\t----- bird -----\tformula_1",
    "984": "WITH TotalWins AS (SELECT constructorId, SUM(wins) AS totalWins FROM constructorStandings GROUP BY constructorId) SELECT T2.url FROM TotalWins AS TW INNER JOIN constructors AS T2 ON TW.constructorId = T2.constructorId WHERE TW.totalWins = (SELECT MAX(totalWins) FROM TotalWins)\t----- bird -----\tformula_1",
    "985": "SELECT T3.forename, T3.surname  FROM lapTimes AS T1  INNER JOIN races AS T2 ON T1.raceId = T2.raceId  INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId  WHERE T2.name = 'French Grand Prix' AND T1.lap = 3  AND T1.time = (SELECT MAX(T1.time)                 FROM lapTimes AS T1                 INNER JOIN races AS T2 ON T1.raceId = T2.raceId                 WHERE T2.name = 'French Grand Prix' AND T1.lap = 3)\t----- bird -----\tformula_1",
    "986": "SELECT T2.name, MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.lap = 1 GROUP BY T2.name ORDER BY MIN(T1.milliseconds) LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(T3.time) FROM lapTimes AS T3 INNER JOIN results AS T2 ON T3.raceId = T2.raceId AND T3.driverId = T2.driverId INNER JOIN races AS T1 ON T2.raceId = T1.raceId WHERE T1.year = 2006 AND T1.name = 'United States Grand Prix' AND T2.positionOrder <= 10\t----- bird -----\tformula_1",
    "988": "SELECT T1.driverId, T1.forename, T1.surname, AVG(T2.duration) AS avg_duration FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T1.driverId ORDER BY avg_duration ASC LIMIT 3\t----- bird -----\tformula_1",
    "989": "SELECT T3.forename, T3.surname, T2.time FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.name = 'Canadian Grand Prix' AND T1.year = 2008 AND T2.position = 1\t----- bird -----\tformula_1",
    "990": "SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN constructors AS T3 ON T1.constructorId = T3.constructorId WHERE T1.position = 1 AND T2.name = 'Singapore Grand Prix' AND T2.year = 2009\t----- bird -----\tformula_1",
    "991": "SELECT T1.forename, T1.surname, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'Austrian' AND T1.dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1",
    "992": "SELECT CONCAT(T1.forename, ' ', T1.surname) AS full_name, T1.url, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY T1.dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT T2.name, T2.nationality, SUM(T3.points) AS total_points  FROM constructorResults AS T3  INNER JOIN races AS T1 ON T3.raceId = T1.raceId  INNER JOIN constructors AS T2 ON T3.constructorId = T2.constructorId  WHERE T1.name = 'Monaco Grand Prix' AND T1.year BETWEEN 1980 AND 2010  GROUP BY T2.constructorId  ORDER BY total_points DESC  LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(count) FROM (SELECT COUNT(raceId) AS count FROM races WHERE year BETWEEN 2000 AND 2009 GROUP BY year)\t----- bird -----\tformula_1",
    "997": "SELECT drivers.nationality FROM drivers GROUP BY drivers.nationality ORDER BY COUNT(drivers.nationality) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT wins FROM driverStandings WHERE position = 91;\t----- bird -----\tformula_1",
    "999": "SELECT T2.name FROM races AS T2 INNER JOIN results AS T1 ON T1.raceId = T2.raceId WHERE T1.fastestLapSpeed = (SELECT MAX(T1.fastestLapSpeed) FROM results AS T1)\t----- bird -----\tformula_1",
    "1000": "SELECT T2.name, T2.location FROM circuits AS T2 INNER JOIN races AS T1 ON T1.circuitId = T2.circuitId WHERE T1.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT T3.forename, T3.surname FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T4 ON T2.circuitId = T4.circuitId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.position = 1 AND T2.round = 3 AND LOWER(T4.name) = LOWER('Marina Bay Street Circuit') AND T2.year = 2008\t----- bird -----\tformula_1",
    "1002": "SELECT CONCAT(T1.forename, ' ', T1.surname), T1.nationality, T3.name  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.dob = (SELECT MIN(dob) FROM drivers)  AND T2.raceId = (SELECT T2.raceId FROM results AS T2 INNER JOIN drivers AS T1 ON T1.driverId = T2.driverId WHERE T1.dob = (SELECT MIN(dob) FROM drivers) ORDER BY T2.raceId LIMIT 1)\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*)  FROM results AS T1  INNER JOIN status AS T2 ON T1.statusId = T2.statusId  WHERE T1.driverId = (SELECT T3.driverId                       FROM results AS T3                       INNER JOIN races AS T4 ON T3.raceId = T4.raceId                       INNER JOIN status AS T2 ON T3.statusId = T2.statusId                       WHERE T4.name = 'Canadian Grand Prix'                       AND T2.status = 'Accident'                       GROUP BY T3.driverId                       ORDER BY COUNT(*) DESC                       LIMIT 1)\t----- bird -----\tformula_1",
    "1004": "SELECT CONCAT(T1.forename, ' ', T1.surname) AS full_name, SUM(T2.wins) AS total_wins  FROM drivers AS T1  INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId  WHERE T1.dob = (SELECT MIN(dob) FROM drivers)  GROUP BY T1.driverId\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT time FROM lapTimes WHERE milliseconds = (SELECT MIN(milliseconds) FROM lapTimes)\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(T1.duration) FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1008": "SELECT T3.lap FROM pitStops AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2011 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1009": "SELECT T3.forename, T3.surname, T1.duration FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2011\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1011": "SELECT DISTINCT CONCAT(D.forename, ' ', D.surname)  FROM results AS R  INNER JOIN lapTimes AS L ON R.driverId = L.driverId  INNER JOIN drivers AS D ON R.driverId = D.driverId  WHERE R.position <= 20  AND L.milliseconds = (SELECT MIN(L2.milliseconds)                        FROM lapTimes AS L2                        INNER JOIN results AS R2 ON L2.driverId = R2.driverId                        WHERE R2.position <= 20)\t----- bird -----\tformula_1",
    "1012": "SELECT T4.position  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  INNER JOIN lapTimes AS T4 ON T3.raceId = T4.raceId  WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.fastestLap = T4.lap AND T2.driverId = T1.driverId\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(T3.time) FROM races AS T1 INNER JOIN lapTimes AS T3 ON T1.raceId = T3.raceId WHERE T1.name = 'Austrian Grand Prix'\t----- bird -----\tformula_1",
    "1014": "SELECT T3.time, T3.milliseconds FROM lapTimes AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN circuits AS T1 ON T2.circuitId = T1.circuitId WHERE T1.country = 'Italy'\t----- bird -----\tformula_1",
    "1015": "SELECT T2.name FROM races AS T2 INNER JOIN lapTimes AS T1 ON T2.raceId = T1.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Austrian Grand Prix Circuit' AND T1.milliseconds = (SELECT MIN(T4.milliseconds) FROM lapTimes AS T4 INNER JOIN races AS T5 ON T4.raceId = T5.raceId INNER JOIN circuits AS T6 ON T5.circuitId = T6.circuitId WHERE T6.name = 'Austrian Grand Prix Circuit')\t----- bird -----\tformula_1",
    "1016": "SELECT pitStops.duration FROM pitStops INNER JOIN lapTimes ON lapTimes.raceId = pitStops.raceId AND lapTimes.driverId = pitStops.driverId INNER JOIN races ON races.raceId = lapTimes.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit' AND lapTimes.milliseconds = (SELECT MIN(lapTimes.milliseconds) FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit')\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.lat, circuits.lng  FROM lapTimes  INNER JOIN races ON lapTimes.raceId = races.raceId  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE lapTimes.time = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(T1.milliseconds) FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T3.milliseconds) FROM lapTimes AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN circuits AS T1 ON T2.circuitId = T1.circuitId WHERE T1.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT T1.player_name, T1.height FROM Player AS T1 WHERE T1.height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT T2.id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT League.name FROM League INNER JOIN Match ON Match.league_id = League.id WHERE Match.season = '2016' GROUP BY League.name ORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T2.team_long_name FROM Team AS T2 LEFT JOIN Match AS T1 ON T1.home_team_api_id = T2.team_api_id AND T1.season = '2016' GROUP BY T2.team_api_id ORDER BY COUNT(CASE WHEN T1.home_team_goal < T1.away_team_goal THEN 1 END) ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1027": "SELECT 'No valid query can be generated due to the absence of the penalties column.' AS message\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T.team_long_name  FROM Team AS T  WHERE T.team_api_id = (SELECT away_team_api_id                          FROM Match AS M                          INNER JOIN League AS L ON M.league_id = L.id                          WHERE L.name = 'Scotland Premier League'                          AND M.season = '2010/2011'                          AND M.away_team_goal > M.home_team_goal                          GROUP BY M.away_team_api_id                          ORDER BY COUNT(M.away_team_api_id) DESC                          LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1029": "SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT League.name FROM League INNER JOIN Match ON League.id = Match.league_id WHERE Match.home_team_goal = Match.away_team_goal AND Match.season = '2016' GROUP BY League.name ORDER BY COUNT(Match.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT (strftime('%Y', 'now') - strftime('%Y', P.birthday)) AS age FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.sprint_speed >= 97 AND PA.date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "1032": "WITH LeagueMatchCounts AS (     SELECT T2.name, COUNT(T1.id) AS match_count     FROM Match AS T1     INNER JOIN League AS T2 ON T1.league_id = T2.id     GROUP BY T2.name ) SELECT name, match_count FROM LeagueMatchCounts WHERE match_count = (SELECT MAX(match_count) FROM LeagueMatchCounts);\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday BETWEEN '1990-01-01' AND '1995-12-31';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE STRFTIME('%Y', date) = '2010' AND overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE STRFTIME('%Y', date) = '2010') AND overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes WHERE STRFTIME('%Y', date) = '2010' AND overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE STRFTIME('%Y', date) = '2010'))\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT DISTINCT T1.team_long_name  FROM Team AS T1  INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T2.buildUpPlayPassing > (SELECT AVG(T3.buildUpPlayPassing) FROM Team_Attributes AS T3 WHERE T3.date LIKE '2012%')  AND T2.date LIKE '2012%'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (SUM(CASE WHEN T1.preferred_foot = 'left' THEN 1 ELSE 0 END) * 100.0 / COUNT(T2.player_api_id)) FROM Player AS T2 INNER JOIN Player_Attributes AS T1 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday BETWEEN '1987-01-01' AND '1992-12-31'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT League.name, SUM(Match.home_team_goal + Match.away_team_goal) AS total_goals FROM Match INNER JOIN League ON Match.league_id = League.id GROUP BY League.name ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(long_shots) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T2.team_long_name  FROM Team_Attributes AS T1  INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T1.buildUpPlayDribblingClass = 'Normal'  AND T1.date BETWEEN '2014-01-01' AND '2014-12-31'  AND T1.chanceCreationPassing < (SELECT AVG(chanceCreationPassing)                                   FROM Team_Attributes                                   WHERE buildUpPlayDribblingClass = 'Normal'                                   AND date BETWEEN '2014-01-01' AND '2014-12-31')  ORDER BY T1.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name FROM League INNER JOIN Match ON League.id = Match.league_id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE birthday LIKE '1970-10-%'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT T1.heading_accuracy, T1.finishing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Francois Affolter' AND T1.date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Gabriel Tamas' AND STRFTIME('%Y', T2.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(M.id) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.season = '2015/2016' AND L.name = 'Scotland Premier League'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday = (SELECT MIN(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1051": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE PA.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.weight < 130 AND PA.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT Player.birthday FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1056": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(Match.home_team_goal) FROM Match INNER JOIN Country ON Match.country_id = Country.id WHERE Match.season = '2010/2011' AND Country.name = 'Poland'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT P.player_name, AVG(PA.finishing)  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE P.height BETWEEN (SELECT MIN(height) FROM Player) AND (SELECT MAX(height) FROM Player)  GROUP BY P.player_name  ORDER BY AVG(PA.finishing) DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE birthday > '1990-12-31 23:59:59';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE SUBSTR(player_name, 1, INSTR(player_name, ' ') - 1) = 'Adam' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE PA.overall_rating > 80 AND PA.date BETWEEN '2008-01-01 00:00:00' AND '2010-12-31 23:59:59'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT DISTINCT T1.team_long_name  FROM Team AS T1  INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT DISTINCT T1.team_short_name  FROM Team AS T1  INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T2.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.date BETWEEN '2010-01-01' AND '2015-12-31' AND T1.height > 170\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player WHERE height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(PA.overall_rating) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Germany 1. Bundesliga' AND T1.date BETWEEN '2008-08-01' AND '2008-10-31'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61) AND T2.potential = 61\t----- bird -----\teuropean_football_2",
    "1076": "SELECT AVG(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.ball_control END) - AVG(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.ball_control END) AS difference FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name IN ('Abdou Diallo', 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT CASE             WHEN A.birthday < B.birthday THEN 'Aaron Lennon is older'             ELSE 'Abdelaziz Barrada is older'         END AS OlderPlayer FROM (SELECT birthday FROM Player WHERE player_name = 'Aaron Lennon') AS A,      (SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada') AS B;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT T2.player_name FROM Player AS T2 INNER JOIN Player_Attributes AS T1 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday < '1986-01-01 00:00:00' AND T2.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT MAX(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\t----- bird -----\teuropean_football_2",
    "1086": "SELECT T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.season = '2008/2009' AND T2.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT long_passing FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE birthday = (SELECT MIN(birthday) FROM Player))\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(M.id) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE L.name = 'Belgium Jupiler League' AND M.date LIKE '2009-04%'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT T2.name  FROM League AS T2  INNER JOIN Match AS T1 ON T2.id = T1.league_id  WHERE T1.season = '2008/2009'  GROUP BY T2.name  HAVING COUNT(*) = (SELECT MAX(match_count) FROM (SELECT COUNT(*) AS match_count FROM Match WHERE season = '2008/2009' GROUP BY league_id))\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday < '1986-01-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (SUM(CASE WHEN P.player_name = 'Ariel Borysiuk' THEN PA.overall_rating ELSE 0 END) - SUM(CASE WHEN P.player_name = 'Paulin Puel' THEN PA.overall_rating ELSE 0 END)) / NULLIF(SUM(CASE WHEN P.player_name = 'Paulin Puel' THEN PA.overall_rating ELSE 0 END), 0) * 100 AS PercentageDifference  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE P.player_name IN ('Ariel Borysiuk', 'Paulin Puel');\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T1.buildUpPlaySpeed) FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T2.crossing) FROM Player_Attributes AS T2 INNER JOIN Player AS T1 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T2.chanceCreationPassing), T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(T1.away_team_goal) FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id INNER JOIN League AS T3 ON T1.league_id = T3.id INNER JOIN Country AS T4 ON T3.country_id = T4.id WHERE T2.team_long_name = 'Parma' AND T4.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1102": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = 77 AND T2.date = '2016-06-23' AND T1.birthday = (SELECT MIN(T3.birthday) FROM Player AS T3 INNER JOIN Player_Attributes AS T4 ON T3.player_api_id = T4.player_api_id WHERE T4.overall_rating = 77 AND T4.date = '2016-06-23')\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date = (SELECT MAX(date) FROM Player_Attributes WHERE player_api_id = T1.player_api_id AND date <= '2016-02-04')\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Parravicini' AND T2.date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore' AND T2.date = '2015/5/1'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Berigaud' AND T2.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MIN(PA.date)  FROM Player_Attributes AS PA  INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id  WHERE P.player_name = 'Kevin Constant'  AND PA.crossing = (SELECT MAX(PA2.crossing)                     FROM Player_Attributes AS PA2                     INNER JOIN Player AS P2 ON PA2.player_api_id = P2.player_api_id                     WHERE P2.player_name = 'Kevin Constant')\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date LIKE '2011-02-22%'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T1.buildUpPlayDribblingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'LEI' AND T1.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Team_Attributes AS T2 INNER JOIN Team AS T1 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013/09/20'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date BETWEEN '2015-09-10 00:00:00' AND '2015-09-10 23:59:59'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Marko Arnautovic' AND T2.date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "1115": "WITH ratings AS (     SELECT          P.player_name,          PA.overall_rating      FROM          Player AS P      INNER JOIN          Player_Attributes AS PA      ON          P.player_api_id = PA.player_api_id      WHERE          PA.date = '2013-07-12 00:00:00'          AND P.player_name IN ('Landon Donovan', 'Jordan Bowery') ) SELECT      ((Landon.overall_rating - Jordan.overall_rating) / Jordan.overall_rating) * 100 AS percentage_difference  FROM      (SELECT overall_rating FROM ratings WHERE player_name = 'Landon Donovan') AS Landon,     (SELECT overall_rating FROM ratings WHERE player_name = 'Jordan Bowery') AS Jordan\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE birthday <= DATE('now', '-35 years');\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(M.home_team_goal)  FROM Match AS M  INNER JOIN Player AS P  ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11)  WHERE P.player_name = 'Aaron Lennon'\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(Match.away_team_goal) FROM Match INNER JOIN Player ON Player.player_api_id IN (Match.away_player_1, Match.away_player_2, Match.away_player_3, Match.away_player_4, Match.away_player_5, Match.away_player_6, Match.away_player_7, Match.away_player_8, Match.away_player_9, Match.away_player_10, Match.away_player_11) WHERE Player.player_name IN ('Daan Smith', 'Filipe Ferreira')\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(M.home_team_goal) FROM Match AS M JOIN Player AS P ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11) WHERE STRFTIME('%Y', M.date) - STRFTIME('%Y', P.birthday) <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.strength = (SELECT MAX(strength) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1123": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1124": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE PA.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.finishing = 1 AND T1.birthday = (SELECT MIN(T3.birthday) FROM Player AS T3 INNER JOIN Player_Attributes AS T4 ON T3.player_fifa_api_id = T4.player_fifa_api_id WHERE T4.finishing = 1)\t----- bird -----\teuropean_football_2",
    "1126": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Team AS T2 ON T1.player_api_id = T2.team_api_id INNER JOIN League AS T3 ON T2.team_api_id = T3.id INNER JOIN Country AS T4 ON T3.country_id = T4.id WHERE T4.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1127": "SELECT DISTINCT P.player_name, C.name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id LEFT JOIN Match AS M ON M.home_player_1 = P.player_api_id OR M.away_player_1 = P.player_api_id LEFT JOIN Country AS C ON M.country_id = C.id WHERE PA.vision >= 90\t----- bird -----\teuropean_football_2",
    "1128": "WITH AvgWeights AS (SELECT `Country`.`name`, AVG(`Player`.`weight`) AS avg_weight FROM `Country` INNER JOIN `Match` ON `Match`.`country_id` = `Country`.`id` INNER JOIN `Player` ON `Player`.`player_api_id` IN ( `Match`.`home_player_1`, `Match`.`away_player_1`, `Match`.`home_player_2`, `Match`.`away_player_2`, `Match`.`home_player_3`, `Match`.`away_player_3`, `Match`.`home_player_4`, `Match`.`away_player_4`, `Match`.`home_player_5`, `Match`.`away_player_5` ) GROUP BY `Country`.`name`) SELECT `name` FROM AvgWeights WHERE avg_weight = (SELECT MAX(avg_weight) FROM AvgWeights);\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT DISTINCT T1.team_short_name  FROM Team AS T1  INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T2.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(P.height)  FROM Player AS P  INNER JOIN Match AS M ON P.player_api_id = M.home_player_11 OR P.player_api_id = M.away_player_11  INNER JOIN League AS L ON M.league_id = L.id  INNER JOIN Country AS C ON L.country_id = C.id  WHERE C.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE birthday > '1990-12-31 23:59:59' AND player_name LIKE 'Aaron%'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE id = 6)) - (SELECT jumping FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE id = 23)) AS score_difference\t----- bird -----\teuropean_football_2",
    "1135": "SELECT T1.id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential IS NOT NULL AND T2.preferred_foot = 'right' ORDER BY T2.potential ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (COUNT(CASE WHEN strength > 80 AND stamina > 80 THEN player_api_id END) * 100.0 / COUNT(DISTINCT player_api_id)) AS percentage FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date = '2008-09-24 00:00:00' AND league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League')\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge' AND T2.buildUpPlaySpeedClass IN ('Slow', 'Balanced', 'Fast')\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T2.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(T1.home_team_goal) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Netherlands Eredivisie'\t----- bird -----\teuropean_football_2",
    "1144": "SELECT PA.finishing, PA.curve  FROM Player_Attributes AS PA  INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id  WHERE P.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "1145": "SELECT T2.name, COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Team AS T2 INNER JOIN Match AS T1 ON T2.team_api_id = T1.away_team_api_id WHERE T1.away_team_goal = (SELECT MAX(away_team_goal) FROM Match);\t----- bird -----\teuropean_football_2",
    "1147": "SELECT T1.player_name  FROM Player AS T1  INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM Player)) AS percentage FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height < 180 AND T2.strength > 70\t----- bird -----\teuropean_football_2",
    "1149": "SELECT      COUNT(CASE WHEN Admission = '+' AND SEX = 'M' THEN 1 END) AS male_inpatients,     COUNT(CASE WHEN Admission = '-' AND SEX = 'M' THEN 1 END) AS male_outpatients,     ABS(COUNT(CASE WHEN Admission = '+' AND SEX = 'M' THEN 1 END) - COUNT(CASE WHEN Admission = '-' AND SEX = 'M' THEN 1 END)) * 100.0 / COUNT(CASE WHEN SEX = 'M' THEN 1 END) AS deviation_percentage FROM Patient WHERE SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (COUNT(CASE WHEN SEX = 'F' AND Birthday > '1930-12-31' THEN ID END) * 100.0 / COUNT(ID)) AS percentage FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT (COUNT(CASE WHEN Admission = '+' THEN ID END) * 100.0 / COUNT(ID)) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(COUNT(CASE WHEN Admission = '-' THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN Admission = '+' THEN 1 END), 0) AS ratio FROM Patient WHERE Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT T1.Diagnosis, T2.Date FROM Examination AS T1 LEFT JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = '163109'\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH >= 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) AS age FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday LIKE '1937%' AND T2.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT T2.ID, T2.SEX, T2.Diagnosis FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(CASE WHEN T2.TP <= 6.0 OR T2.TP >= 8.5 THEN T1.ID END) * 100.0 / COUNT(T1.ID)) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(Examination.`aCL IgG`) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) >= 50)\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND `First Date` BETWEEN '1997-01-01' AND '1997-12-31' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(julianday(`First Date`) - julianday(`Birthday`)) FROM `Patient` WHERE `First Date` IS NOT NULL AND `Birthday` IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T1.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31' AND T2.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT (MAX(julianday(Laboratory.Date) - julianday(Patient.Birthday)) / 365.25) - (MIN(julianday(Laboratory.Date) - julianday(Patient.Birthday)) / 365.25) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.TG < 200\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT E.Symptoms, P.Diagnosis FROM Patient P INNER JOIN Examination E ON P.ID = E.ID WHERE P.Birthday = (SELECT MAX(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Examination))\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(monthly_count) FROM (SELECT COUNT(DISTINCT Laboratory.ID) AS monthly_count FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31' AND Patient.SEX = 'M' GROUP BY strftime('%m', Laboratory.Date)) AS monthly_counts\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT T1.\"Date\", (JULIANDAY(T2.\"First Date\") - JULIANDAY(T2.Birthday)) / 365.25 AS Age FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE T2.Birthday = (SELECT MIN(Birthday) FROM Patient WHERE Diagnosis LIKE '%SJS%')\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST((SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.UA > 8.0) AS REAL) / NULLIF((SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.UA > 6.5), 0) AS Ratio\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) FROM Patient AS P WHERE NOT EXISTS (SELECT 1 FROM Examination AS E WHERE (E.\"Examination Date\" - P.\"First Date\") < 365)\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE YEAR(E.[Examination Date]) - YEAR(P.Birthday) < 18 AND E.[Examination Date] BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-BIL` >= 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT T1.Diagnosis, COUNT(T1.Diagnosis) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - STRFTIME('%Y', Patient.Birthday)) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.Date BETWEEN '1991-10-01' AND '1991-10-31'\t----- bird -----\tthrombosis_prediction",
    "1175": "WITH MaxHGB AS (SELECT MAX(HGB) AS max_hgb FROM Examination) SELECT (strftime('%Y', Examination.\"Examination Date\") - strftime('%Y', Patient.Birthday)) AS age, Examination.Diagnosis FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.HGB = (SELECT max_hgb FROM MaxHGB)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN \"T-CHO\" < 250 THEN 'Normal' ELSE 'Not Normal' END AS Cholesterol_Status FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04'\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY `First Date` LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Examination AS T3 INNER JOIN Patient AS T2 ON T2.ID = T3.ID WHERE T2.Diagnosis LIKE '%SLE%' AND T2.`First Date` = '1994-02-19' AND T3.`Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT (STRFTIME('%Y', '1991-10-21') - STRFTIME('%Y', Patient.Birthday)) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UA = 8.4 AND Laboratory.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(T3.ID) FROM Laboratory AS T3 INNER JOIN Patient AS T1 ON T3.ID = T1.ID WHERE T1.\"First Date\" = '1991-06-13' AND T1.Diagnosis LIKE '%SJS%' AND T3.Date BETWEEN '1995-01-01' AND '1995-12-31'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T2.`Examination Date` = '1997-01-27'\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.`Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((SELECT `T-CHO` FROM `Laboratory` WHERE `Date` LIKE '1981-11%' AND `ID` = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18')) - (SELECT `T-CHO` FROM `Laboratory` WHERE `Date` LIKE '1981-12%' AND `ID` = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18'))) / (SELECT `T-CHO` FROM `Laboratory` WHERE `Date` LIKE '1981-11%' AND `ID` = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18')) * 100 AS DecreaseRate\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'Behcet''s' AND T2.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T3.GPT > 30 AND T3.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(Patient.ID) FROM Patient WHERE Patient.SEX = 'F' AND Patient.Birthday LIKE '1964%' AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Thrombosis = 2 AND E.\"ANA Pattern\" = 'S' AND E.aCL IgM > 1.2 * (SELECT AVG(E2.aCL IgM) FROM Examination AS E2)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (COUNT(CASE WHEN (Laboratory.UA < 8.0 AND Patient.SEX = 'M') OR (Laboratory.UA < 6.5 AND Patient.SEX = 'F') THEN Patient.ID END) * 100.0 / COUNT(Patient.ID)) AS percentage FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.\"U-PRO\" > 0 AND Laboratory.\"U-PRO\" < 30\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (COUNT(CASE WHEN Diagnosis = 'BEHCET' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Patient WHERE SEX = 'M' AND \"First Date\" LIKE '1981%'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date BETWEEN '1991-10-01' AND '1991-10-31' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`ANA Pattern` != 'P' AND T1.SEX = 'F' AND T1.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(Laboratory.ALB) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Examination.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT T1.Symptoms, COUNT(T1.Symptoms) AS SymptomCount FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE '%SLE%' GROUP BY T1.Symptoms ORDER BY SymptomCount DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT `First Date`, `Diagnosis` FROM `Patient` WHERE `ID` = 48473 AND `SEX` = 'F'\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND Diagnosis LIKE '%APS%'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT ID) FROM ( SELECT Laboratory.ID FROM Laboratory WHERE Laboratory.Date LIKE '1997%' AND (Laboratory.TP < 6.0 OR Laboratory.TP > 8.5 OR Laboratory.ALB < 3.5 OR Laboratory.ALB > 5.5) UNION SELECT Examination.ID FROM Examination WHERE Examination.`Examination Date` LIKE '1997%' AND (Examination.`aCL IgG` < 6.0 OR Examination.`aCL IgG` > 8.5 OR Examination.`aCL IgA` < 3.5 OR Examination.`aCL IgA` > 5.5) ) AS CombinedIDs\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT (SUM(CASE WHEN T2.Symptoms LIKE '%thrombocytopenia%' AND T1.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) * 100.0 / NULLIF(SUM(CASE WHEN T2.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END), 0)) AS proportion FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID;\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) FROM Patient WHERE YEAR(Birthday) = 1980 AND Diagnosis LIKE '%RA%'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE P.SEX = 'M' AND E.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND P.Diagnosis = 'BEHCET' AND P.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT JULIANDAY(MIN(E.\"Examination Date\")) - JULIANDAY(P.\"First Date\") FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE P.ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN (P.SEX = 'M' AND L.UA > 8.0) OR (P.SEX = 'F' AND L.UA > 6.5) THEN 'Yes' ELSE 'No' END AS is_normal FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = 48473 AND GOT > 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GOT < 60 AND L.Date LIKE '1994%'\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT T2.Diagnosis FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE T1.GPT >= 60 ORDER BY T2.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT T1.ID, (STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH >= 100 AND T2.LDH <= 300\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday = '1982-04-01' AND L.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT CASE WHEN T1.TP < 6.0 THEN (6.0 - T1.TP) WHEN T1.TP > 8.5 THEN (T1.TP - 8.5) END AS deviation FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND (T1.TP < 6.0 OR T1.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB NOT BETWEEN 3.5 AND 5.5 ORDER BY T1.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT P.ID, P.Birthday,         CASE             WHEN L.ALB > 3.5 AND L.ALB < 5.5 THEN 'Within Normal Range'             ELSE 'Out of Normal Range'         END AS Albumin_Status FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE P.Birthday LIKE '1982%'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(T1.ID) * 100.0 / NULLIF(COUNT(T1.ID), 0)) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(T1.UA)  FROM Laboratory AS T1  INNER JOIN Patient AS T2 ON T1.ID = T2.ID  WHERE ((T1.UA <= 8.0 AND T2.SEX = 'M') OR (T1.UA <= 6.5 AND T2.SEX = 'F'))  AND T1.Date = (SELECT MAX(T3.Date) FROM Laboratory AS T3 WHERE T3.ID = T1.ID)\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%RA%' AND T2.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN SUM(CASE WHEN Patient.SEX = 'M' AND Laboratory.CRE >= 1.5 THEN 1 ELSE 0 END) > SUM(CASE WHEN Patient.SEX = 'F' AND Laboratory.CRE >= 1.5 THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END AS Result FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT P.SEX, COUNT(*) FROM Laboratory AS L INNER JOIN Patient AS P ON P.ID = L.ID WHERE L.`T-BIL` >= 2.0 GROUP BY P.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T2.ID, T1.`T-CHO` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` = (SELECT MAX(`T-CHO`) FROM Laboratory) AND T2.Birthday = (SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE `T-CHO` = (SELECT MAX(`T-CHO`) FROM Laboratory)))\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(CURRENT_DATE - P.Birthday) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-CHO` > 200\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.TG > 200 AND (julianday(Laboratory.Date) - julianday(Patient.Birthday)) / 365.25 > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T2.ID FROM Laboratory AS T2 INNER JOIN Patient AS T1 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND T1.SEX = 'M' AND T2.CPK > 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT T1.ID, T1.SEX, CAST((julianday('now') - julianday(T1.Birthday)) / 365 AS INTEGER) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT T1.ID, T2.GLU FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU < 180 AND T1.`First Date` LIKE '1991%'\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC < 3.5 OR T2.WBC > 9.0 GROUP BY T1.SEX ORDER BY T1.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT T1.ID, (CAST(strftime('%Y', CURRENT_DATE) AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER)) AS age, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T3.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (strftime('%Y', CURRENT_DATE) - strftime('%Y', T1.Birthday) >= 50) AND (T2.RBC < 3.5 OR T2.RBC > 6.0)\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%SLE%' AND T2.HGB BETWEEN 10 AND 17 ORDER BY (CURRENT_DATE - T1.Birthday) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.HCT > 52  GROUP BY Patient.ID  HAVING COUNT(Laboratory.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE HCT < 29 AND Date LIKE '1991%'\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT      COUNT(DISTINCT CASE WHEN PLT < 100 THEN Laboratory.ID END) AS lower_count,     COUNT(DISTINCT CASE WHEN PLT > 400 THEN Laboratory.ID END) AS higher_count,     CASE          WHEN COUNT(DISTINCT CASE WHEN PLT < 100 THEN Laboratory.ID END) > COUNT(DISTINCT CASE WHEN PLT > 400 THEN Laboratory.ID END) THEN 'More patients with lower than normal range'         WHEN COUNT(DISTINCT CASE WHEN PLT < 100 THEN Laboratory.ID END) < COUNT(DISTINCT CASE WHEN PLT > 400 THEN Laboratory.ID END) THEN 'More patients with higher than normal range'         ELSE 'Counts are the same'     END AS comparison_result FROM Laboratory WHERE PLT < 100 OR PLT > 400;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT T2.ID, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date LIKE '1984%' AND STRFTIME('%Y', T1.Date) - STRFTIME('%Y', T2.Birthday) < 50 AND T1.PLT > 100 AND T1.PLT < 400\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (COUNT(CASE WHEN P.SEX = 'F' AND L.PT >= 14 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Patient AS P LEFT JOIN Laboratory AS L ON P.ID = L.ID WHERE (DATE('now') - P.Birthday) / 365 > 55\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT T1.* FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` > '1992-12-31' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.`Examination Date` > '1997-01-01' AND L.APTT IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.APTT >= 45 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.WBC > 3.5 AND L.WBC < 9.0 AND (L.FG < 150 OR L.FG > 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday > '1980-01-01' AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"U-PRO\" > 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'SLE' AND L.`U-PRO` BETWEEN '0' AND '30'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG > 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGG BETWEEN 900 AND 2000 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT P.Diagnosis  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.IGA = (SELECT MAX(IGA) FROM Laboratory WHERE IGA > 80 AND IGA < 500)\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGA > 80 AND L.IGA < 500 AND P.`First Date` > '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT T1.Diagnosis, COUNT(T1.Diagnosis) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGM <= 40 OR T2.IGM >= 400 GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE (L.CRP >= 1.0 OR L.CRP IN ('+', '2+')) AND P.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRE >= 1.5 AND (CURRENT_DATE - T2.Birthday) / 365.25 < 70\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(*) FROM Laboratory AS L INNER JOIN Examination AS E ON L.ID = E.ID WHERE (L.RF < 20 OR (L.RF LIKE '<%' AND CAST(SUBSTR(L.RF, 2) AS REAL) < 20)) AND (E.KCT = '+' OR E.RVVT = '+' OR E.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1985-01-01' AND T2.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT DISTINCT P.ID  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.RF < 20 AND (julianday('now') - julianday(P.Birthday)) / 365.25 > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.RF < 20 AND E.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.C3 > 35 AND Examination.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T2.ID FROM Patient AS T2 INNER JOIN Examination AS T1 ON T2.ID = T1.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T3.HCT <= 29 OR T3.HCT >= 52 GROUP BY T2.ID ORDER BY MAX(T1.\"aCL IgG\") DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.Thrombosis > 0 AND L.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT P.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.RNP = '0' AND P.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT MAX(P.Birthday) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RNP = '1'\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE (L.SM = '-' OR L.SM = '+-') AND E.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT T2.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SM NOT IN ('-', '+-') ORDER BY T2.Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` > '1997-01-01' AND T2.SC170 IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE (L.SC170 = '-' OR L.SC170 IS NULL) AND P.SEX = 'F' AND (E.Symptoms IS NULL OR E.Symptoms = '')\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('-', '+-') AND T1.`First Date` < '2000-01-01'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T2.ID FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.SSA = '+' OR T1.SSA = '+-' ORDER BY T2.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE L.SSB IN ('-', '+-') AND E.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE (L.SSB = '-' OR L.SSB = '+-') AND E.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA = 'negative' AND T2.SSB = 'negative' AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT P.Diagnosis FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA < 8 AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGG > 900 AND L.IGG < 2000 AND P.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (COUNT(DISTINCT T1.ID) * 100.0 / COUNT(DISTINCT T2.ID)) AS percentage FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60 AND T2.Diagnosis LIKE '%SLE%'\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(Patient.Birthday) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 ORDER BY T2.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT < 60 AND T2.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT P.Description FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.LDH = (SELECT MAX(LDH) FROM Laboratory WHERE LDH < 500) LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Date) FROM Laboratory WHERE LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALP >= 300 AND P.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT P.Diagnosis  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE L.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%SJS%' AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT Examination.`Examination Date` FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ALB = (SELECT MAX(Laboratory.ALB) FROM Laboratory WHERE Laboratory.ALB BETWEEN 3.5 AND 5.5)\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.ALB BETWEEN 3.5 AND 5.5 AND L.TP BETWEEN 6.0 AND 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT T1.`aCL IgG`, T1.`aCL IgM`, T1.`aCL IgA` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.SEX = 'F' AND T3.UA = (SELECT MAX(T4.UA) FROM Laboratory AS T4 INNER JOIN Patient AS T5 ON T4.ID = T5.ID WHERE T5.SEX = 'F' AND T4.UA > 6.5)\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(T1.ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CRE < 1.5 AND (CASE WHEN T3.\"aCL IgG\" >= T3.\"aCL IgM\" AND T3.\"aCL IgG\" >= T3.\"aCL IgA\" THEN T3.\"aCL IgG\" WHEN T3.\"aCL IgM\" >= T3.\"aCL IgG\" AND T3.\"aCL IgM\" >= T3.\"aCL IgA\" THEN T3.\"aCL IgM\" ELSE T3.\"aCL IgA\" END) = (SELECT MAX(CASE WHEN T4.\"aCL IgG\" >= T4.\"aCL IgM\" AND T4.\"aCL IgG\" >= T4.\"aCL IgA\" THEN T4.\"aCL IgG\" WHEN T4.\"aCL IgM\" >= T4.\"aCL IgG\" AND T4.\"aCL IgM\" >= T4.\"aCL IgA\" THEN T4.\"aCL IgM\" ELSE T4.\"aCL IgA\" END) FROM Examination AS T4 INNER JOIN Laboratory AS T5 ON T4.ID = T5.ID WHERE T5.CRE < 1.5)\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` > 2.0 AND T2.`ANA Pattern` LIKE '%p%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT T1.ANA FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` = (SELECT MAX(T3.`T-BIL`) FROM Laboratory AS T3 WHERE T3.`T-BIL` < 2.0)\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.\"T-CHO\" > 250 AND (T2.KCT = '-' OR T2.RVVT = '-' OR T2.LAC = '-')\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT P.ID) FROM Laboratory AS T1 INNER JOIN Patient AS P ON T1.ID = P.ID INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` < 250 AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.TG < 200 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG = (SELECT MAX(TG) FROM Laboratory WHERE TG < 200)\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Thrombosis = 0 AND L.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CPK < 250 AND T2.KCT = '+'\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Patient.Birthday) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU >= 180\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.GLU < 180 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC > 3.5 AND T2.WBC < 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%SLE%' AND T2.WBC > 3.5 AND T2.WBC < 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE (L.RBC <= 3.5 OR L.RBC >= 6.0) AND P.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.PLT > 100 AND L.PLT < 400 AND E.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT L.PLT FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.PLT > 100 AND L.PLT < 400 AND P.Diagnosis LIKE '%MCTD%'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(T2.PT) FROM Laboratory AS T2 INNER JOIN Patient AS T1 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 2 AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Member' AND T2.department = 'Art and Design Department'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT T3.phone FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women''s Soccer') AND T2.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT E.event_name FROM event AS E INNER JOIN attendance AS A ON E.event_id = A.link_to_event GROUP BY E.event_name ORDER BY COUNT(A.link_to_member) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison' AND SUBSTR(T3.event_date, 1, 4) = '2019'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM (SELECT attendance.link_to_event FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id GROUP BY attendance.link_to_event HAVING COUNT(attendance.link_to_member) > 10) AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting'\t----- bird -----\tstudent_club",
    "1323": "SELECT E.event_name FROM event AS E INNER JOIN attendance AS A ON E.event_id = A.link_to_event INNER JOIN budget AS B ON E.event_id = B.link_to_event WHERE B.category != 'Fundraiser' GROUP BY E.event_name HAVING COUNT(A.link_to_member) > 20\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM (SELECT COUNT(attendance.link_to_member) AS attendance_count FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.type = 'Meeting' AND event.event_date LIKE '2020%' GROUP BY attendance.link_to_event) AS attendance_counts;\t----- bird -----\tstudent_club",
    "1325": "SELECT T1.expense_description, MAX(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id GROUP BY T1.expense_description ORDER BY MAX(T1.cost) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT T1.first_name || ' ' || T1.last_name AS full_name  FROM member AS T1  INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member  INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id  WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT county FROM zip_code WHERE zip_code = (SELECT zip FROM member WHERE first_name = 'Sherri' AND last_name = 'Ramsey')\t----- bird -----\tstudent_club",
    "1330": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT T1.amount FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(expense.cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Food' AND event.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name || ' ' || T1.last_name AS full_name  FROM member AS T1  INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code  WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(expense.cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.member_id = 'recttfySfQnYb68u3' AND budget.category = 'Advertisement' AND event.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT DISTINCT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.last_name IN ('Pierce', 'Guidi')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'October Speaker'\t----- bird -----\tstudent_club",
    "1338": "SELECT COUNT(*) = COUNT(CASE WHEN approved = 'true' THEN 1 END) FROM expense AS e INNER JOIN budget AS b ON e.link_to_budget = b.budget_id INNER JOIN event AS ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'October Meeting' AND e.expense_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Elijah' AND T3.last_name = 'Allen' AND T1.expense_date >= '2019-09-01' AND T1.expense_date < '2019-11-01'\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(CASE WHEN event.event_date BETWEEN '2020-01-01T00:00:00' AND '2020-12-31T23:59:59' THEN budget.spent ELSE 0 END) - SUM(CASE WHEN event.event_date BETWEEN '2019-01-01T00:00:00' AND '2019-12-31T23:59:59' THEN budget.spent ELSE 0 END) AS difference FROM budget INNER JOIN event ON budget.link_to_event = event.event_id\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food')\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM event WHERE LOWER(type) = 'fundraising' AND event_date LIKE '2019-09-14%'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "1347": "SELECT T3.county FROM member AS T1 INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O''Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT T3.status FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Connor' AND T1.last_name = 'Hilton' AND T2.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT T2.first_name || ' ' || T2.last_name  FROM income AS T1  INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id  WHERE T1.source = 'Dues'  AND T1.date_received = (SELECT MIN(date_received) FROM income WHERE source = 'Dues')\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Yearly Kickoff' AND T1.category = 'Advertisement' AND T1.amount > (SELECT T3.amount FROM budget AS T3 INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T4.event_name = 'October Meeting' AND T3.category = 'Advertisement')\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(CASE WHEN B.category = 'Parking' THEN B.amount ELSE 0 END) * 100.0 / NULLIF(SUM(B.amount), 0)) AS Parking_Percentage FROM budget AS B INNER JOIN event AS E ON B.link_to_event = E.event_id WHERE E.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT z.city FROM member m INNER JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Amy' AND m.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T1.expense_description, T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.remaining = (SELECT MIN(remaining) FROM budget)\t----- bird -----\tstudent_club",
    "1366": "SELECT T3.first_name, T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id GROUP BY T2.college ORDER BY COUNT(T1.member_id) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.amount = (SELECT MAX(amount) FROM budget)\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.expense_id, T1.expense_description, T1.expense_date, T1.cost, T1.approved FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Casey' AND T1.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member AS M INNER JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE Z.state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(DISTINCT T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240'\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY (T2.spent / T2.amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND event_date LIKE '2020%'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT CONCAT(T1.first_name, ' ', T1.last_name) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT DISTINCT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.major_name = 'Interior Design' AND T4.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(income.amount) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour')\t----- bird -----\tstudent_club",
    "1385": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1387": "SELECT T3.first_name, T3.last_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT T2.first_name, T2.last_name, T1.source FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount IN (SELECT MAX(amount) FROM income GROUP BY link_to_member)\t----- bird -----\tstudent_club",
    "1389": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN expense AS T3 ON T1.budget_id = T3.link_to_budget WHERE T3.cost = (SELECT MIN(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.cost ELSE 0 END) / (SELECT SUM(cost) FROM expense)) * 100 AS percentage FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_budget = T2.event_id\t----- bird -----\tstudent_club",
    "1391": "SELECT CAST(SUM(CASE WHEN T2.major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN T2.major_name = 'Physics' THEN 1 ELSE 0 END), 0) AS ratio FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id\t----- bird -----\tstudent_club",
    "1392": "SELECT income.source FROM income WHERE SUBSTR(income.date_received, 1, 4) = '2019' AND SUBSTR(income.date_received, 6, 2) = '09' GROUP BY income.source ORDER BY SUM(income.amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT T1.first_name, T1.last_name, T1.email FROM member AS T1 WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND T2.event_date LIKE '2019%'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.link_to_event), T3.major_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T2.status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T1.spent = (SELECT MAX(spent) FROM budget WHERE category = 'Advertisement')\t----- bird -----\tstudent_club",
    "1399": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1400": "SELECT (COUNT(CASE WHEN type = 'Community Service' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_share FROM event WHERE event_date LIKE '2019%'\t----- bird -----\tstudent_club",
    "1401": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description LIKE '%Posters%' AND T3.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT T1.expense_description, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T1.approved = 'true' GROUP BY T1.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT T1.category, SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'April Speaker' GROUP BY T1.category ORDER BY SUM(T1.amount) ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(amount) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1407": "SELECT * FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(spent) FROM budget WHERE category = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT CONCAT(T1.first_name, ' ', T1.last_name), SUM(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.member_id\t----- bird -----\tstudent_club",
    "1411": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT DISTINCT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT M.zip FROM member AS M INNER JOIN expense AS E ON M.member_id = E.link_to_member WHERE E.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member AS M INNER JOIN major AS J ON M.link_to_major = J.major_id WHERE M.t_shirt_size = 'Medium' AND J.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT T1.type FROM event AS T1 WHERE T1.event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (COUNT(T2.member_id) * 100.0 / (SELECT COUNT(member_id) FROM member)) AS percentage FROM member AS T2 INNER JOIN major AS T1 ON T2.link_to_major = T1.major_id WHERE T1.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT DISTINCT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Social' AND T1.location = '900 E. Washington St.' AND T3.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT (SUM(CASE WHEN income.amount = 50 AND income.source = 'Student_Club' THEN income.amount ELSE 0 END) * 100.0 / NULLIF(SUM(income.amount), 0)) AS percentage  FROM member  INNER JOIN income ON member.member_id = income.link_to_member  WHERE member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE status = 'Closed' AND type = 'Game' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.link_to_event FROM attendance AS T1 INNER JOIN income AS T2 ON T1.link_to_member = T2.link_to_member WHERE T2.amount > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T2.link_to_event, T4.first_name, T4.last_name FROM expense AS T1 INNER JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member INNER JOIN member AS T4 ON T2.link_to_member = T4.member_id WHERE T1.approved = 'true' AND T1.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name LIKE '%business%' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount > 20 AND T1.date_received BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name LIKE '%Education%' AND T2.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT (COUNT(DISTINCT CASE WHEN T1.remaining < 0 THEN T1.link_to_event END) * 100.0) / COUNT(DISTINCT T2.event_id) AS percentage_over_budget  FROM budget AS T1  INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense WHERE cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name || ' ' || last_name FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT (COUNT(CASE WHEN type = 'PO Box' THEN 1 END) * 100.0) / COUNT(zip_code) AS percentage FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent < T2.amount\t----- bird -----\tstudent_club",
    "1448": "SELECT T3.event_name, T3.event_date FROM event AS T3 INNER JOIN budget AS T2 ON T3.event_id = T2.link_to_event INNER JOIN expense AS T1 ON T2.budget_id = T1.link_to_budget WHERE T1.expense_description = 'Pizza' AND T1.cost > 50 AND T1.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT DISTINCT CONCAT(T1.first_name, ' ', T1.last_name) AS name, T3.major_name FROM expense AS T2 INNER JOIN member AS T1 ON T2.link_to_member = T1.member_id INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T2.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT zip_code.city, zip_code.county FROM event INNER JOIN zip_code ON event.location = zip_code.zip_code INNER JOIN income ON event.event_id = income.link_to_event GROUP BY zip_code.city, zip_code.county HAVING COUNT(income.income_id) > 40\t----- bird -----\tstudent_club",
    "1451": "SELECT CONCAT(T2.first_name, ' ', T2.last_name) FROM expense AS T1 INNER JOIN attendance AS T3 ON T1.link_to_member = T3.link_to_member INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T2.member_id HAVING COUNT(DISTINCT T3.link_to_event) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT T3.event_name FROM event AS T3 INNER JOIN budget AS T2 ON T2.link_to_event = T3.event_id INNER JOIN expense AS T1 ON T1.link_to_budget = T2.budget_id WHERE T1.cost < (SELECT COALESCE(AVG(cost), 0) FROM expense WHERE expense_description LIKE '%Parking%')\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(CASE WHEN EV.type = 'Meeting' THEN E.cost ELSE 0 END) / SUM(E.cost)) * 100 AS percentage FROM expense AS E INNER JOIN budget AS B ON E.link_to_budget = B.budget_id INNER JOIN event AS EV ON B.link_to_event = EV.event_id\t----- bird -----\tstudent_club",
    "1455": "SELECT MAX(T2.amount) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description IN ('Water', 'Chips', 'Cookies')\t----- bird -----\tstudent_club",
    "1456": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, SUM(T2.cost) AS total_spending FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id ORDER BY total_spending DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T1.first_name || ' ' || T1.last_name, T1.phone FROM member AS T1 WHERE T1.member_id IN (SELECT link_to_member FROM expense WHERE cost > (SELECT AVG(cost) FROM expense))\t----- bird -----\tstudent_club",
    "1458": "SELECT (SUM(CASE WHEN z.state = 'New Jersey' THEN 1 ELSE 0 END) * 100.0 / COUNT(m.member_id)) - (SUM(CASE WHEN z.state = 'Vermont' THEN 1 ELSE 0 END) * 100.0 / COUNT(m.member_id)) AS difference FROM member AS m INNER JOIN zip_code AS z ON m.zip = z.zip_code\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT CONCAT(T2.first_name, ' ', T2.last_name), T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT CONCAT(T1.first_name, ' ', T1.last_name), T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "1465": "SELECT T2.category FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(T1.spent) AS total_spent, T2.event_name  FROM budget AS T1  INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id  WHERE T1.category = 'Speaker Gifts'  GROUP BY T2.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T1.position  FROM member AS T1  INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code  WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT (SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) * 1.0) / (SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END)) AS ratio FROM customers\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT T2.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date LIKE '2012%' AND T2.Segment = 'LAM' ORDER BY T1.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date LIKE '2013%'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT T2.CustomerID, MAX(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date LIKE '2011%' GROUP BY T2.CustomerID\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Consumption < 30000 AND T2.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT      SUM(CASE WHEN C.Currency = 'CZK' THEN Y.Consumption ELSE 0 END) -      SUM(CASE WHEN C.Currency = 'EUR' THEN Y.Consumption ELSE 0 END) AS ConsumptionDifference FROM      yearmonth AS Y  INNER JOIN      customers AS C ON Y.CustomerID = C.CustomerID  WHERE      Y.Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT STRFTIME('%Y', T1.Date) AS year, MAX(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY STRFTIME('%Y', T1.Date) ORDER BY MAX(T1.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT STRFTIME('%Y', T1.Date) AS Year, SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' GROUP BY STRFTIME('%Y', T1.Date) ORDER BY SUM(T1.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT T1.Date FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date LIKE '2013%' ORDER BY T1.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT      (SELECT AVG(Consumption) FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE C.Segment = 'SME' AND Y.Date LIKE '2013%' AND Y.Consumption = (SELECT MIN(Consumption) FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME'))) -     (SELECT AVG(Consumption) FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE C.Segment = 'LAM' AND Y.Date LIKE '2013%' AND Y.Consumption = (SELECT MIN(Consumption) FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM'))) AS Difference_SMELAM,          (SELECT AVG(Consumption) FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE C.Segment = 'LAM' AND Y.Date LIKE '2013%' AND Y.Consumption = (SELECT MIN(Consumption) FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM'))) -     (SELECT AVG(Consumption) FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE C.Segment = 'KAM' AND Y.Date LIKE '2013%' AND Y.Consumption = (SELECT MIN(Consumption) FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM'))) AS Difference_LAMKAM,      (SELECT AVG(Consumption) FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE C.Segment = 'KAM' AND Y.Date LIKE '2013%' AND Y.Consumption = (SELECT MIN(Consumption) FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM'))) -     (SELECT AVG(Consumption) FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE C.Segment = 'SME' AND Y.Date LIKE '2013%' AND Y.Consumption = (SELECT MIN(Consumption) FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME'))) AS Difference_KAMSME\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT MAX(percentage_increase) AS max_increase, MIN(percentage_increase) AS min_increase  FROM (     SELECT Segment,             ((SUM(CASE WHEN yearmonth.Date LIKE '2013%' THEN yearmonth.Consumption ELSE 0 END) -               SUM(CASE WHEN yearmonth.Date LIKE '2012%' THEN yearmonth.Consumption ELSE 0 END)) /              NULLIF(SUM(CASE WHEN yearmonth.Date LIKE '2012%' THEN yearmonth.Consumption ELSE 0 END), 0)) * 100 AS percentage_increase      FROM customers      INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID      WHERE customers.Currency = 'EUR' AND customers.Segment IN ('SME', 'LAM', 'KAM')      GROUP BY Segment ) AS segment_increases\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(CASE WHEN Country = 'CZE' AND Segment = 'Discount' THEN GasStationID END) - COUNT(CASE WHEN Country = 'SVK' AND Segment = 'Discount' THEN GasStationID END) AS difference FROM gasstations;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT      (SUM(CASE WHEN CustomerID = 7 THEN Consumption ELSE 0 END) -       SUM(CASE WHEN CustomerID = 5 THEN Consumption ELSE 0 END)) AS ConsumptionDifference FROM yearmonth WHERE Date = '201304' AND (CustomerID = 7 OR CustomerID = 5);\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS difference\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T2.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T2.Currency = 'EUR' AND T1.Date = '201310' GROUP BY T2.CustomerID ORDER BY MAX(T1.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, MAX(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' GROUP BY T1.CustomerID ORDER BY MAX(T2.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND T1.Date = '201305'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (SUM(CASE WHEN yearmonth.Consumption > 46.73 THEN 1 ELSE 0 END) * 100.0 / COUNT(customers.CustomerID)) AS percentage  FROM yearmonth  INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID  WHERE customers.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 100.0) / COUNT(CASE WHEN Segment = 'KAM' THEN 1 END) AS percentage FROM customers WHERE Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (COUNT(CustomerID) * 100.0 / (SELECT COUNT(CustomerID) FROM yearmonth WHERE Date = '201202')) AS percentage FROM yearmonth WHERE Consumption > 528.3 AND Date = '201202'\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM gasstations WHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' AND Consumption = (SELECT MAX(Consumption) FROM yearmonth WHERE Date = '201309')\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.Segment HAVING SUM(T2.Consumption) = (SELECT MIN(total_consumption) FROM (SELECT SUM(T2.Consumption) AS total_consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.Segment))\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date = '201206' GROUP BY T1.CustomerID ORDER BY MIN(T2.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT T2.Description FROM products AS T2 INNER JOIN transactions_1k AS T1 ON T1.ProductID = T2.ProductID WHERE SUBSTR(T1.Date, 1, 7) = '2013-09'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date LIKE '201306%'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT T1.ChainID FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(transactions_1k.Price) FROM transactions_1k WHERE transactions_1k.Date BETWEEN '2012-01-01' AND '2012-01-31'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT P.Description  FROM transactions_1k AS T  INNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID  INNER JOIN products AS P ON T.ProductID = P.ProductID  WHERE G.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Price > 1000 AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(transactions_1k.Amount * transactions_1k.Price) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT SUM(T1.Amount * T1.Price) / COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM (SELECT CustomerID, Amount * Price AS TotalPayment FROM transactions_1k WHERE Date = '2012-08-25') GROUP BY CustomerID ORDER BY MAX(TotalPayment) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' ORDER BY T1.Time ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T2.Currency FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Time = '16:25:00' AND T1.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T2.Segment FROM customers AS T2 INNER JOIN transactions_1k AS T1 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '06:00:00' AND '12:00:00' AND T2.Currency = 'CZK'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT T2.Segment FROM customers AS T2 WHERE T2.CustomerID = (SELECT T1.CustomerID FROM yearmonth AS T1 WHERE T1.Date = (SELECT MIN(Date) FROM yearmonth))\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(T2.Consumption) AS Total_Spending, T2.Date, T2.Consumption  FROM yearmonth AS T2  WHERE T2.Date = '201201'  AND T2.CustomerID = (SELECT T1.CustomerID                       FROM transactions_1k AS T1                       WHERE T1.Price = 124.05 AND T1.Date = '2012-08-24') GROUP BY T2.Date, T2.CustomerID\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T1.Date = '2012-08-26' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT C.Currency FROM customers AS C INNER JOIN (SELECT CustomerID, SUM(Amount * Price) AS TotalSpent FROM transactions_1k WHERE Date LIKE '2013-06%' GROUP BY CustomerID HAVING TotalSpent >= 214582.16 AND TotalSpent <= 214582.18) AS T ON C.CustomerID = T.CustomerID\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM transactions_1k WHERE CardID = 667467)\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Amount = 548 AND T1.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (COUNT(DISTINCT C.CustomerID) * 100.0 / NULLIF(COUNT(DISTINCT T.CustomerID), 0)) AS percentage FROM customers AS C INNER JOIN transactions_1k AS T ON C.CustomerID = T.CustomerID WHERE C.Currency = 'EUR' AND T.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1526": "WITH identified_customer AS (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25') SELECT (SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2012' THEN Consumption ELSE 0 END) - SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END)) / NULLIF(SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2012' THEN Consumption ELSE 0 END), 0) * 100 AS decrease_rate FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM identified_customer)\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Amount * Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (COUNT(Segment) * 100.0 / (SELECT COUNT(Segment) FROM gasstations WHERE Country = 'SVK')) AS percentage FROM gasstations WHERE Segment = 'Premium' AND Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT      (SELECT SUM(transactions_1k.Amount * transactions_1k.Price) FROM transactions_1k WHERE transactions_1k.CustomerID = 38508) AS TotalSpentAtGasStations,     (SELECT Consumption FROM yearmonth WHERE CustomerID = 38508 AND Date = '201201') AS AmountSpentInJanuary\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT T2.Description FROM products AS T2 INNER JOIN transactions_1k AS T1 ON T1.ProductID = T2.ProductID GROUP BY T2.ProductID ORDER BY SUM(T1.Amount) DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, SUM(T1.Price) / SUM(T1.Amount) AS AveragePrice, T2.Currency  FROM transactions_1k AS T1  INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID  GROUP BY T1.CustomerID  ORDER BY SUM(T1.Amount * T1.Price) DESC  LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ProductID = 2 AND T1.Price = (SELECT MAX(T1.Price) FROM transactions_1k AS T1 WHERE T1.ProductID = 2)\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T2.Consumption FROM yearmonth AS T2 WHERE T2.CustomerID IN (SELECT CustomerID FROM transactions_1k WHERE Price > 29.00 AND ProductID = 5) AND T2.Date = '201208'\t----- bird -----\tdebit_card_specializing"
}